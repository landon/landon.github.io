// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
(function($) {
function dart(){ this.x = 0 }var A = new dart;
delete A.x;
var B = new dart;
delete B.x;
var C = new dart;
delete C.x;
var D = new dart;
delete D.x;
var E = new dart;
delete E.x;
var F = new dart;
delete F.x;
var G = new dart;
delete G.x;
var H = new dart;
delete H.x;
var J = new dart;
delete J.x;
var K = new dart;
delete K.x;
var L = new dart;
delete L.x;
var M = new dart;
delete M.x;
var N = new dart;
delete N.x;
var O = new dart;
delete O.x;
var P = new dart;
delete P.x;
var Q = new dart;
delete Q.x;
var R = new dart;
delete R.x;
var S = new dart;
delete S.x;
var T = new dart;
delete T.x;
var U = new dart;
delete U.x;
var V = new dart;
delete V.x;
var W = new dart;
delete W.x;
var X = new dart;
delete X.x;
var Y = new dart;
delete Y.x;
var Z = new dart;
delete Z.x;
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
(function (reflectionData) {
  "use strict";
  function map(x){x={x:x};delete x.x;return x}
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "^") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0) descriptor[previousProperty].$reflectable = flag;
          if (element && element.length) init.typeInformation[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (firstChar === "*") {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods) {
            descriptor.$methodsWithOptionalArguments = optionalMethods = {}
          }
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else if (element.constructor === Array) {
          addStubs(globalObject, element, property, true, descriptor, functions);
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              var flag = element[prop];
              if (flag > 0) element[previousProp].$reflectable = flag;
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else if (firstChar === "*") {
              newDesc[previousProp].$defaultValues = element[prop];
              var optionalMethods = newDesc.$methodsWithOptionalArguments;
              if (!optionalMethods) {
                newDesc.$methodsWithOptionalArguments = optionalMethods={}
              }
              optionalMethods[prop] = previousProp;
            } else {
              var elem = element[prop];
              if (prop !== "^" && elem != null && elem.constructor === Array && prop !== "<>") {
                addStubs(newDesc, elem, prop, false, element, []);
              } else {
                newDesc[previousProp = prop] = elem;
              }
            }
          }
          $$[property] = [globalObject, newDesc];
          classes.push(property);
        }
      }
    }
  function addStubs(descriptor, array, name, isStatic, originalDescriptor, functions) {
    var f, funcs = [originalDescriptor[name] = descriptor[name] = f = array[0]];
    f.$stubName = name;
    functions.push(name);
    for (var index = 0; index < array.length; index += 2) {
      f = array[index + 1];
      if (typeof f != "function") break;
      f.$stubName = array[index + 2];
      funcs.push(f);
      if (f.$stubName) {
        originalDescriptor[f.$stubName] = descriptor[f.$stubName] = f;
        functions.push(f.$stubName);
      }
    }
    for (var i = 0; i < funcs.length; index++, i++) {
      funcs[i].$callName = array[index + 1];
    }
    var getterStubName = array[++index];
    array = array.slice(++index);
    var requiredParameterInfo = array[0];
    var requiredParameterCount = requiredParameterInfo >> 1;
    var isAccessor = (requiredParameterInfo & 1) === 1;
    var isSetter = requiredParameterInfo === 3;
    var isGetter = requiredParameterInfo === 1;
    var optionalParameterInfo = array[1];
    var optionalParameterCount = optionalParameterInfo >> 1;
    var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
    var isIntercepted = requiredParameterCount + optionalParameterCount != funcs[0].length;
    var functionTypeIndex = array[2];
    var unmangledNameIndex =  2 * optionalParameterCount + requiredParameterCount + 3;
    var isReflectable = array.length > unmangledNameIndex;

    if (getterStubName) {
      f = tearOff(funcs, array, isStatic, name, isIntercepted);
      f.getterStub = true;
      if (isStatic) init.globalFunctions[name] = f;
      originalDescriptor[getterStubName] = descriptor[getterStubName] = f;
      funcs.push(f);
      if (getterStubName) functions.push(getterStubName);
      f.$stubName = getterStubName;
      f.$callName = null;
      if (isIntercepted) init.interceptedNames[getterStubName] = true;
    }
    if (isReflectable) {
      for (var i = 0; i < funcs.length; i++) {
        funcs[i].$reflectable = 1;
        funcs[i].$reflectionInfo = array;
      }
      var mangledNames = isStatic ? init.mangledGlobalNames : init.mangledNames;
      var unmangledName = array[unmangledNameIndex];
      var reflectionName = unmangledName;
      if (getterStubName) mangledNames[getterStubName] = reflectionName;
      if (isSetter) {
        reflectionName += "=";
      } else if (!isGetter) {
        reflectionName += ":" + requiredParameterCount + ":" + optionalParameterCount;
      }
      mangledNames[name] = reflectionName;
      funcs[0].$reflectionName = reflectionName;
      funcs[0].$metadataIndex = unmangledNameIndex + 1;
      if (optionalParameterCount) descriptor[unmangledName + "*"] = funcs[0];
    }
  }
  function tearOffGetterNoCsp(funcs, reflectionInfo, name, isIntercepted) {
    return isIntercepted
        ? new Function("funcs", "reflectionInfo", "name", "H", "c",
            "return function tearOff_" + name + (functionCounter++)+ "(x) {" +
              "if (c === null) c = H.closureFromTearOff(" +
                  "this, funcs, reflectionInfo, false, [x], name);" +
              "return new c(this, funcs[0], x, name);" +
            "}")(funcs, reflectionInfo, name, H, null)
        : new Function("funcs", "reflectionInfo", "name", "H", "c",
            "return function tearOff_" + name + (functionCounter++)+ "() {" +
              "if (c === null) c = H.closureFromTearOff(" +
                  "this, funcs, reflectionInfo, false, [], name);" +
              "return new c(this, funcs[0], null, name);" +
            "}")(funcs, reflectionInfo, name, H, null)
  }
  function tearOffGetterCsp(funcs, reflectionInfo, name, isIntercepted) {
    var cache = null;
    return isIntercepted
        ? function(x) {
            if (cache === null) cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [x], name);
            return new cache(this, funcs[0], x, name)
          }
        : function() {
            if (cache === null) cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [], name);
            return new cache(this, funcs[0], null, name)
          }
  }
  function tearOff(funcs, reflectionInfo, isStatic, name, isIntercepted) {
    var cache;
    return isStatic
        ? function() {
            if (cache === void 0) cache = H.closureFromTearOff(this, funcs, reflectionInfo, true, [], name).prototype;
            return cache;
          }
        : tearOffGetter(funcs, reflectionInfo, name, isIntercepted);
  }
  var functionCounter = 0;
  var tearOffGetter = (typeof dart_precompiled == "function")
      ? tearOffGetterCsp : tearOffGetterNoCsp;
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.typeInformation) init.typeInformation = map();
  if (!init.globalFunctions) init.globalFunctions = map();
  if (!init.interceptedNames) init.interceptedNames = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var globalObject = data[3];
    var descriptor = data[4];
    var isRoot = !!data[5];
    var fields = descriptor && descriptor["^"];
    var classes = [];
    var functions = [];
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot,
                    globalObject]);
  }
})
([
["FixerBreaker", "FixerBreaker.dart", , R, {
  "^": "",
  main: [function() {
    var params = R.GetQueryStringParameters();
    R.Canvas$("stage", P.max(3, P.min(13, params.$index(0, "n") != null ? H.Primitives_parseInt(params.$index(0, "n"), null, null) : 5)));
  }, "call$0", "main$closure", 0, 0, 0],
  GetQueryStringParameters: function() {
    var params = P.HashMap_HashMap(null, null, null, J.JSString, J.JSString);
    H.IterableMixinWorkaround_forEach(J.replaceFirst$2$s(J.get$search$x(C.Window_methods.get$location(window)), "?", "").split("&"), new R.GetQueryStringParameters_closure(params));
    return params;
  },
  Canvas: {
    "^": "Object;stage<,renderLoop,dragging,draggedCard,_n,_stacks,_stackSprites,_rand,gameOver",
    OnTouchBegin$1: [function(e) {
      var t1, t2, t3;
      t1 = J.get$target$x(e);
      t2 = e.get$stageX();
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = e.get$stageY();
      if (typeof t3 !== "number")
        return t3.$div();
      return this.OnDown$3(t1, t2 / 960, t3 / 570);
    }, "call$1", "get$OnTouchBegin", 2, 0, 12],
    OnMouseDown$1: [function(e) {
      var t1, t2, t3;
      t1 = J.get$target$x(e);
      t2 = e.get$stageX();
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = e.get$stageY();
      if (typeof t3 !== "number")
        return t3.$div();
      return this.OnDown$3(t1, t2 / 960, t3 / 570);
    }, "call$1", "get$OnMouseDown", 2, 0, 13],
    OnTouchEnd$1: [function(e) {
      var t1, t2, t3;
      t1 = J.get$target$x(e);
      t2 = e.get$stageX();
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = e.get$stageY();
      if (typeof t3 !== "number")
        return t3.$div();
      return this.OnUp$3(t1, t2 / 960, t3 / 570);
    }, "call$1", "get$OnTouchEnd", 2, 0, 12],
    OnMouseUp$1: [function(e) {
      var t1, t2, t3;
      t1 = J.get$target$x(e);
      t2 = e.get$stageX();
      if (typeof t2 !== "number")
        return t2.$div();
      t3 = e.get$stageY();
      if (typeof t3 !== "number")
        return t3.$div();
      return this.OnUp$3(t1, t2 / 960, t3 / 570);
    }, "call$1", "get$OnMouseUp", 2, 0, 13],
    OnTouchMove$1: [function(e) {
      var t1, t2;
      J.get$target$x(e);
      t1 = e.get$stageX();
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = e.get$stageY();
      if (typeof t2 !== "number")
        return t2.$div();
      if (this.dragging)
        this.draggedCard.Dragged$2(t1 / 960, t2 / 570);
      return;
    }, "call$1", "get$OnTouchMove", 2, 0, 12],
    OnMouseMove$1: [function(e) {
      var t1, t2;
      J.get$target$x(e);
      t1 = e.get$stageX();
      if (typeof t1 !== "number")
        return t1.$div();
      t2 = e.get$stageY();
      if (typeof t2 !== "number")
        return t2.$div();
      if (this.dragging)
        this.draggedCard.Dragged$2(t1 / 960, t2 / 570);
      return;
    }, "call$1", "get$OnMouseMove", 2, 0, 13],
    ArrangeStacks$0: function() {
      var t1, t2, i, t3, $top, left, stack, t4, indices, j, t5;
      for (t1 = this._stackSprites, t2 = this._stacks, i = 0; i < this._n; ++i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t3 = t1[i];
        $top = t3._y + 2.5;
        left = t3._x;
        if (i >= t2.length)
          return H.ioore(t2, i);
        stack = t2[i];
        t3 = new R.Canvas_ArrangeStacks_closure();
        t4 = stack.length - 1;
        if (t4 - 0 <= 32)
          H.Sort__insertionSort(stack, 0, t4, t3);
        else
          H.Sort__dualPivotQuicksort(stack, 0, t4, t3);
        t3 = new H.MappedListIterable(stack, new R.Canvas_ArrangeStacks_closure0(this));
        t3.$builtinTypeInfo = [null, null];
        indices = t3.toList$0(0);
        t3 = indices.length - 1;
        if (t3 - 0 <= 32)
          H.Sort__insertionSort(indices, 0, t3, P.Comparable_compare$closure());
        else
          H.Sort__dualPivotQuicksort(indices, 0, t3, P.Comparable_compare$closure());
        for (j = stack.length - 1, t3 = left / 960; j >= 0; --j) {
          if (j >= stack.length)
            return H.ioore(stack, j);
          t4 = stack[j];
          t5 = t4.get$h();
          if (j >= indices.length)
            return H.ioore(indices, j);
          t4.SendHome$3$index$x$y(indices[j], t3, ($top + 0.33 * t5 * j) / 570);
        }
      }
    },
    OnDown$3: function(target, x, y) {
      var t1;
      if (this.gameOver || this.dragging || !J.getInterceptor(target).$isCard)
        return;
      this.dragging = true;
      H.interceptedTypeCast(target, "$isCard");
      this.draggedCard = target;
      t1 = target.get$stage()._children;
      target._lastChildIndex = H.Lists_indexOf(t1, target, 0, t1.length);
      target.get$stage().setChildIndex$2(target, target.get$stage()._children.length - 1);
      target.dragOffset = H.setRuntimeTypeInfo(new Z.Point(J.$sub$n(target._ux, x), J.$sub$n(target._uy, y)), [null]);
    },
    OnUp$3: function(target, x, y) {
      var t1, t2, max, t, i, t3, t4, t5, t6, t7, t8, t9, overlap, stack, win, card, otherCard, tween, tweenProperty;
      if (!this.dragging)
        return;
      t1 = this.draggedCard;
      t1 = t1.getBoundsTransformed$1(t1.get$transformationMatrix()).width;
      t2 = this.draggedCard;
      t2 = J.$mul$ns(t1, t2.getBoundsTransformed$1(t2.get$transformationMatrix()).height);
      if (typeof t2 !== "number")
        return t2.$div();
      max = t2 / 2;
      for (t1 = this._stackSprites, t2 = this._stacks, t = -1, i = 0; i < this._n; ++i) {
        if (i >= t2.length)
          return H.ioore(t2, i);
        if (H.IterableMixinWorkaround_any(t2[i], new R.Canvas_OnUp_closure(this)))
          continue;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t3 = t1[i];
        t4 = this.draggedCard;
        t5 = t3._x;
        t6 = t3.getBoundsTransformed$1(t3.get$transformationMatrix()).width;
        if (typeof t6 !== "number")
          return H.iae(t6);
        t7 = t4._x;
        t8 = t4.getBoundsTransformed$1(t4.get$transformationMatrix()).width;
        if (typeof t8 !== "number")
          return H.iae(t8);
        t8 = P.max(0, P.min(t5 + t6, t7 + t8) - P.max(t3._x, t4._x));
        t7 = t3._y;
        t6 = t3.getBoundsTransformed$1(t3.get$transformationMatrix()).height;
        if (typeof t6 !== "number")
          return H.iae(t6);
        t5 = t4._y;
        t9 = t4.getBoundsTransformed$1(t4.get$transformationMatrix()).height;
        if (typeof t9 !== "number")
          return H.iae(t9);
        overlap = t8 * P.max(0, P.min(t7 + t6, t5 + t9) - P.max(t3._y, t4._y));
        if (overlap > max) {
          max = overlap;
          t = i;
        }
      }
      this.dragging = false;
      t1 = this.draggedCard;
      if (t >= 0) {
        stack = t1.stack;
        this.MoveCard$3(stack, t, t1.id);
        this.ArrangeStacks$0();
        this.DoBreakerMove$3(stack, t, this.draggedCard.id);
        this.ArrangeStacks$0();
        win = this.CheckWin$2(0, H.setRuntimeTypeInfo([], [J.JSInt]));
        if (win != null) {
          this.gameOver = true;
          for (t1 = H.setRuntimeTypeInfo(new H.ReversedListIterable(win), [null]), t1 = new H.ListIterator(t1, t1.get$length(t1), 0, null); t1.moveNext$0();) {
            card = t1._current;
            t3 = card.get$stack();
            if (t3 < 0 || t3 >= t2.length)
              return H.ioore(t2, t3);
            t3 = t2[t3];
            t4 = new R.Canvas_OnUp_closure0(card);
            t5 = new H.WhereIterable(t3, t4);
            t5.$builtinTypeInfo = [null];
            t3 = C.JSArray_methods.get$iterator(t3);
            t4 = new H.WhereIterator(t3, t4);
            t4.$builtinTypeInfo = [H.getTypeArgumentByIndex(t5, 0)];
            for (; t4.moveNext$0();) {
              otherCard = t3.get$current();
              t5 = [];
              t5.$builtinTypeInfo = [Z.TweenProperty];
              tween = new Z.Tween(otherCard, Z.TransitionFunction_linear$closure(), t5, null, null, null, 0, 0, 0, false, false);
              if (!J.getInterceptor(otherCard).$isDisplayObject)
                H.throwExpression(new P.ArgumentError("displayObject"));
              tween._totalTime = P.max(0.0001, 3);
              tweenProperty = new Z.TweenProperty(otherCard, 9, 0 / 0, 0 / 0, 0 / 0);
              t5.push(tweenProperty);
              tweenProperty._targetValue = C.JSInt_methods.toDouble$0(0);
              this.stage._renderLoop._juggler.add$1(0, tween);
            }
          }
        }
      } else
        t1.SendHome$0();
    },
    CheckWin$2: function(i, used) {
      var t1, t2, t3, v, t4, cl;
      t1 = this._stacks;
      if (i >= t1.length) {
        t1 = [];
        t1.$builtinTypeInfo = [R.Card];
        return t1;
      }
      t1 = t1[i];
      t2 = new R.Canvas_CheckWin_closure(used);
      t3 = new H.WhereIterable(t1, t2);
      t3.$builtinTypeInfo = [null];
      t1 = C.JSArray_methods.get$iterator(t1);
      t2 = new H.WhereIterator(t1, t2);
      t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t3, 0)];
      t3 = i + 1;
      for (; t2.moveNext$0();) {
        v = t1.get$current();
        t4 = J.getInterceptor$x(v);
        used.push(t4.get$id(v));
        cl = this.CheckWin$2(t3, used);
        C.JSArray_methods.remove$1(used, t4.get$id(v));
        if (cl != null) {
          cl.push(v);
          return cl;
        }
      }
      return;
    },
    DoBreakerMove$3: function(stack1, stack2, id) {
      var t1, t2, i, swapID, has1;
      t1 = id === 0;
      if (!t1 && id !== 1)
        for (t1 = this._stacks, t2 = this._rand, i = 0; i < this._n; ++i) {
          swapID = t2.nextInt$1(t1.length);
          if (swapID === id)
            continue;
          if (swapID === 0)
            continue;
          if (swapID === 1)
            continue;
          if (stack1 < 0 || stack1 >= t1.length)
            return H.ioore(t1, stack1);
          has1 = H.IterableMixinWorkaround_any(t1[stack1], new R.Canvas_DoBreakerMove_closure(swapID));
          if (stack2 < 0 || stack2 >= t1.length)
            return H.ioore(t1, stack2);
          if (has1 === H.IterableMixinWorkaround_any(t1[stack2], new R.Canvas_DoBreakerMove_closure0(swapID)))
            continue;
          if (has1)
            this.MoveCard$3(stack1, stack2, swapID);
          else
            this.MoveCard$3(stack2, stack1, swapID);
          break;
        }
      else if (t1) {
        t1 = this._stacks;
        if (stack1 < 0 || stack1 >= t1.length)
          return H.ioore(t1, stack1);
        if (H.IterableMixinWorkaround_any(t1[stack1], new R.Canvas_DoBreakerMove_closure1()))
          this.MoveCard$3(stack1, stack2, 1);
      } else {
        t1 = this._stacks;
        if (stack1 < 0 || stack1 >= t1.length)
          return H.ioore(t1, stack1);
        if (H.IterableMixinWorkaround_any(t1[stack1], new R.Canvas_DoBreakerMove_closure2()))
          this.MoveCard$3(stack1, stack2, 0);
      }
    },
    MoveCard$3: function(from, to, id) {
      var t1, card;
      t1 = this._stacks;
      if (from < 0 || from >= t1.length)
        return H.ioore(t1, from);
      card = H.IterableMixinWorkaround_firstWhere(t1[from], new R.Canvas_MoveCard_closure(id), null);
      if (from >= t1.length)
        return H.ioore(t1, from);
      C.JSArray_methods.remove$1(t1[from], card);
      if (to < 0 || to >= t1.length)
        return H.ioore(t1, to);
      t1[to].push(card);
      card.set$stack(to);
    },
    Canvas$2: function(id, n) {
      var t1, t2, t3, t4, background, i, w, stackSprite, t5, h, count, need, v, done, t6, ss;
      this._n = n;
      $.Multitouch__inputMode = "touchPoint";
      t1 = $.get$Multitouch__inputModeChangedEvent();
      if (t1._state >= 4)
        H.throwExpression(t1._badEventState$0());
      t1._add$1("touchPoint");
      t1 = "#" + id;
      t1 = Z.Stage$(document.querySelector(t1), 4294967295, 30, 570, false, 960);
      this.stage = t1;
      t1._stageScaleMode = "exactFit";
      t1._updateCanvasSize$0();
      t1 = this.stage;
      t1._stageAlign = "";
      t1._updateCanvasSize$0();
      t1 = new Z.Juggler(null, null, 0);
      t2 = new Z._AnimatableLink(null, null);
      t1._firstAnimatableLink = t2;
      t1._lastAnimatableLink = t2;
      t2 = H.setRuntimeTypeInfo([], [Z.Stage]);
      t1 = new Z.RenderLoop(t1, t2, -1, null, false, new Z.EnterFrameEvent(0, "enterFrame", false, 2, null, null, false, false), new Z.ExitFrameEvent("exitFrame", false, 2, null, null, false, false), new Z.RenderEvent("render", false, 2, null, null, false, false));
      t1._renderTime = -1;
      t1._requestAnimationFrame$0(0);
      this.renderLoop = t1;
      t3 = this.stage;
      t4 = t3._renderLoop;
      if (t4 != null) {
        t4.toString;
        if (t4 == null ? t4 == null : t4 === t4) {
          C.JSArray_methods.remove$1(t4._stages, t3);
          t3._renderLoop = null;
        }
      }
      t2.push(t3);
      t3._renderLoop = t1;
      t1 = H.setRuntimeTypeInfo([], [Z.DisplayObject]);
      t2 = $.DisplayObject__nextID;
      $.DisplayObject__nextID = t2 + 1;
      background = new Z.Sprite(false, null, null, null, t1, true, true, false, true, false, true, 0, t2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, false, null, null, null, null, null, false, "", null, Z.Matrix$fromIdentity(), Z.Matrix$fromIdentity(), true, null, null);
      t2 = background.get$graphics();
      t2.toString;
      t1 = Z._GraphicsCommandRect$(0, 0, 960, 570);
      t2._commands.push(t1);
      t2._identityRectangleRefresh = true;
      t2 = background.get$graphics();
      t2.toString;
      t1 = new Z._GraphicsCommandFillColor(null);
      t1._color = Z._color2rgba(4294440951);
      t2._commands.push(t1);
      t2._identityRectangleRefresh = true;
      background._name = "background";
      t2 = this.stage;
      t2.addChildAt$2(background, t2._children.length);
      this.stage.on$1(0, C.EventStreamProvider_mouseDown.eventType).listen$1(this.get$OnMouseDown());
      this.stage.on$1(0, C.EventStreamProvider_mouseUp.eventType).listen$1(this.get$OnMouseUp());
      this.stage.on$1(0, C.EventStreamProvider_mouseMove.eventType).listen$1(this.get$OnMouseMove());
      this.stage.on$1(0, C.EventStreamProvider_touchBegin.eventType).listen$1(this.get$OnTouchBegin());
      this.stage.on$1(0, C.EventStreamProvider_touchEnd.eventType).listen$1(this.get$OnTouchEnd());
      this.stage.on$1(0, C.EventStreamProvider_touchMove.eventType).listen$1(this.get$OnTouchMove());
      for (t1 = this._stackSprites, t2 = this._stacks, i = 0; t3 = this._n, i < t3; ++i) {
        t3 = [];
        t3.$builtinTypeInfo = [R.Card];
        t2.push(t3);
        w = C.JSInt_methods.$tdiv(960, this._n);
        t3 = [];
        t3.$builtinTypeInfo = [Z.DisplayObject];
        t4 = $.DisplayObject__nextID;
        $.DisplayObject__nextID = t4 + 1;
        stackSprite = new Z.Sprite(false, null, null, null, t3, true, true, false, true, false, true, 0, t4, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, false, null, null, null, null, null, false, "", null, new Z.Matrix(1, 0, 0, 1, 0, 0, 1), new Z.Matrix(1, 0, 0, 1, 0, 0, 1), true, null, null);
        t3 = [];
        t3.$builtinTypeInfo = [Z._GraphicsCommand];
        t4 = new Z.Rectangle0(0, 0, 0, 0);
        t4.$builtinTypeInfo = [J.JSNumber];
        t3 = new Z.Graphics(t3, t4, true);
        stackSprite._graphics = t3;
        t4 = t3;
        t3.toString;
        t5 = new Z._GraphicsCommandRect(null, null, null, null);
        t5._x = 0;
        t5._y = 0;
        t5._width = w - 10;
        t5._height = 560;
        t3._commands.push(t5);
        t3._identityRectangleRefresh = true;
        t3 = t4;
        t3.toString;
        t4 = new Z._GraphicsCommandFillColor(null);
        t4._color = Z._color2rgba(4292730333);
        t3._commands.push(t4);
        t3._identityRectangleRefresh = true;
        stackSprite._x = 5 + i * w;
        stackSprite._transformationMatrixRefresh = true;
        stackSprite._y = 5;
        stackSprite._transformationMatrixRefresh = true;
        t1.push(stackSprite);
        t3 = this.stage;
        t3.addChildAt$2(stackSprite, t3._children.length);
      }
      w = C.JSNumber_methods.$tdiv(960 - 2 * t3 * 5, t3);
      h = C.JSInt_methods.$tdiv(560, (t3 + 2) / 3);
      count = P.List_List$filled(t3, 0, J.JSInt);
      need = P.List_List$filled(this._n, 2, J.JSInt);
      t1 = need.length;
      if (0 >= t1)
        return H.ioore(need, 0);
      need[0] = 0;
      if (1 >= t1)
        return H.ioore(need, 1);
      need[1] = 1;
      for (t3 = count.length, t4 = this._rand; true;) {
        for (i = 0; t5 = this._n, i < t5; ++i) {
          id = t4.nextInt$1(t5);
          if (id >>> 0 !== id || id >= t3)
            return H.ioore(count, id);
          t5 = count[id];
          if (id >= t1)
            return H.ioore(need, id);
          if (t5 < need[id]) {
            if (i >= t2.length)
              return H.ioore(t2, i);
            t5 = !H.IterableMixinWorkaround_any(t2[i], new R.Canvas_closure(id));
          } else
            t5 = false;
          if (t5) {
            t5 = this._n;
            v = R.Card$(i / t5, id / t5, w, h, i, id);
            if (i >= t2.length)
              return H.ioore(t2, i);
            t2[i].push(v);
            t5 = this.stage;
            t5.addChildAt$2(v, t5._children.length);
            count[id] = count[id] + 1;
          }
        }
        for (done = true, id = 0; id < t5; ++id) {
          if (id >= t3)
            return H.ioore(count, id);
          t6 = count[id];
          if (id >= t1)
            return H.ioore(need, id);
          if (t6 < need[id])
            done = false;
        }
        if (done)
          break;
      }
      ss = H.IterableMixinWorkaround_firstWhere(t2, new R.Canvas_closure0(), null);
      t1 = J.getInterceptor$asx(ss);
      t2 = t1.$index(ss, 0).get$stack();
      t3 = this._n;
      v = R.Card$(t2 / t3, 1 / t3, w, h, t1.$index(ss, 0).get$stack(), 0);
      t1.add$1(ss, v);
      t1 = this.stage;
      t1.addChildAt$2(v, t1._children.length);
      this.ArrangeStacks$0();
    },
    static: {"^": "Canvas_WIDTH,Canvas_HEIGHT,Canvas_BORDER_BUFFER", Canvas$: function(id, n) {
        var t1, t2;
        t1 = H.setRuntimeTypeInfo([], [[J.JSArray, R.Card]]);
        t2 = H.setRuntimeTypeInfo([], [Z.Sprite]);
        t1 = new R.Canvas(null, null, false, null, null, t1, t2, C.C__JSRandom, false);
        t1.Canvas$2(id, n);
        return t1;
      }}
  },
  Canvas_closure: {
    "^": "Closure:14;id_0",
    call$1: function(v) {
      return J.get$id$x(v) === this.id_0;
    }
  },
  Canvas_closure0: {
    "^": "Closure:14;",
    call$1: function(s) {
      return J.any$1$ax(s, new R.Canvas__closure());
    }
  },
  Canvas__closure: {
    "^": "Closure:14;",
    call$1: function(c) {
      return J.get$id$x(c) === 1;
    }
  },
  Canvas_ArrangeStacks_closure: {
    "^": "Closure:15;",
    call$2: function(a, b) {
      var t1, t2;
      t1 = J.get$id$x(a);
      t2 = J.get$id$x(b);
      if (typeof t1 !== "number")
        return t1.$lt();
      if (typeof t2 !== "number")
        return H.iae(t2);
      return t1 < t2 ? 1 : -1;
    }
  },
  Canvas_ArrangeStacks_closure0: {
    "^": "Closure:14;this_0",
    call$1: function(c) {
      var t1 = this.this_0.stage._children;
      return H.Lists_indexOf(t1, c, 0, t1.length);
    }
  },
  Canvas_OnUp_closure: {
    "^": "Closure:14;this_0",
    call$1: function(v) {
      return J.get$id$x(v) === this.this_0.draggedCard.id;
    }
  },
  Canvas_OnUp_closure0: {
    "^": "Closure:14;card_1",
    call$1: function(c) {
      return J.get$id$x(c) !== this.card_1.id;
    }
  },
  Canvas_CheckWin_closure: {
    "^": "Closure:14;used_0",
    call$1: function(w) {
      return !C.JSArray_methods.contains$1(this.used_0, J.get$id$x(w));
    }
  },
  Canvas_DoBreakerMove_closure: {
    "^": "Closure:14;swapID_0",
    call$1: function(v) {
      return J.get$id$x(v) === this.swapID_0;
    }
  },
  Canvas_DoBreakerMove_closure0: {
    "^": "Closure:14;swapID_1",
    call$1: function(v) {
      return J.get$id$x(v) === this.swapID_1;
    }
  },
  Canvas_DoBreakerMove_closure1: {
    "^": "Closure:14;",
    call$1: function(s) {
      return J.get$id$x(s) === 1;
    }
  },
  Canvas_DoBreakerMove_closure2: {
    "^": "Closure:14;",
    call$1: function(s) {
      return J.get$id$x(s) === 0;
    }
  },
  Canvas_MoveCard_closure: {
    "^": "Closure:14;id_0",
    call$1: function(v) {
      return J.get$id$x(v) === this.id_0;
    }
  },
  Card: {
    "^": "SvgDisplayObject;id>,stack@,_homeX,_homeY,_ux,_uy,w,h<,_won,_lastChildIndex,dragOffset,_renderTexture,_renderTextureQuad,buttonMode,hitArea,_graphics,_dropTarget,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,useHandCursor,tabEnabled,tabIndex,_stagexl$_id,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_off,_mask,_shadow,_compositeOperation,_filters,_cacheTextureQuad,_cacheDebugBorder,_name,_parent,_tmpMatrix,_transformationMatrix,_transformationMatrixRefresh,userData,_eventStreams",
    Update$0: function() {
      this.set$x(0, J.$mul$ns(this._ux, 960));
      this.set$y(0, J.$mul$ns(this._uy, 570));
    },
    SendHome$3$index$x$y: function(index, x, y) {
      var tween;
      if (index != null)
        this._lastChildIndex = index;
      if (this._lastChildIndex != null)
        this.get$stage().setChildIndex$2(this, this._lastChildIndex);
      if (x != null)
        this._homeX = x;
      if (y != null)
        this._homeY = y;
      tween = Z.Tween$(this, 0.5, Z.TransitionFunction_linear$closure());
      tween._addTweenProperty$1(0)._targetValue = J.toDouble$0$n(J.$mul$ns(this._homeX, 960));
      tween._addTweenProperty$1(1)._targetValue = J.toDouble$0$n(J.$mul$ns(this._homeY, 570));
      tween._onComplete = new R.Card_SendHome_closure(this);
      this.get$stage()._renderLoop._juggler.add$1(0, tween);
    },
    SendHome$0: function() {
      return this.SendHome$3$index$x$y(null, null, null);
    },
    Dragged$2: function(x, y) {
      this._ux = J.$add$ns(this.dragOffset.x, x);
      this._uy = J.$add$ns(this.dragOffset.y, y);
      this.Update$0();
    },
    Card$6: function(ux, uy, w, h, stack, id) {
      var t1, t2, t3;
      this._ux = ux;
      this._uy = uy;
      this.w = w;
      this.h = h;
      this.stack = stack;
      this.id = id;
      this._homeX = ux;
      this._homeY = uy;
      t1 = this.get$graphics();
      C.JSArray_methods.set$length(t1._commands, 0);
      t1._identityRectangleRefresh = true;
      t1 = this.get$graphics();
      t2 = this.w;
      t3 = this.h;
      t1.toString;
      t3 = Z._GraphicsCommandRect$(0, 0, t2, t3);
      t1._commands.push(t3);
      t1._identityRectangleRefresh = true;
      t1 = this.get$graphics();
      t1.toString;
      t3 = new Z._GraphicsCommandFillColor(null);
      t3._color = Z._color2rgba(0);
      t1._commands.push(t3);
      t1._identityRectangleRefresh = true;
      this.Update$0();
    },
    $isCard: true,
    static: {Card$: function(ux, uy, w, h, stack, id) {
        var t1, t2, t3;
        t1 = $.get$Cards_Spades();
        t2 = 12 - id;
        if (t2 >>> 0 !== t2 || t2 >= 13)
          return H.ioore(t1, t2);
        t2 = t1[t2];
        t1 = H.setRuntimeTypeInfo([], [Z.DisplayObject]);
        t3 = $.DisplayObject__nextID;
        $.DisplayObject__nextID = t3 + 1;
        t3 = new R.Card(null, null, null, null, null, null, null, null, false, null, null, null, null, false, null, null, null, t1, true, true, false, true, false, true, 0, t3, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, false, null, null, null, null, null, false, "", null, Z.Matrix$fromIdentity(), Z.Matrix$fromIdentity(), true, null, null);
        t3.SvgDisplayObject$3(t2, w, h);
        t3.Card$6(ux, uy, w, h, stack, id);
        return t3;
      }}
  },
  Card_SendHome_closure: {
    "^": "Closure:16;this_0",
    call$0: function() {
      var t1 = this.this_0;
      t1._ux = t1._homeX;
      t1._uy = t1._homeY;
      t1.Update$0();
      return;
    }
  },
  GetQueryStringParameters_closure: {
    "^": "Closure:14;params_0",
    call$1: function(e) {
      var t1, split, t2;
      t1 = J.getInterceptor$asx(e);
      if (t1.contains$1(e, "=") === true) {
        split = t1.split$1(e, "=");
        t1 = split.length;
        if (0 >= t1)
          return H.ioore(split, 0);
        t2 = split[0];
        if (1 >= t1)
          return H.ioore(split, 1);
        this.params_0.$indexSet(0, t2, split[1]);
      }
    }
  },
  SvgDisplayObject: {
    "^": "Sprite;",
    render$1: function(renderState) {
      var t1;
      Z.Sprite.prototype.render$1.call(this, renderState);
      t1 = this._renderTextureQuad;
      if (t1 != null)
        renderState._renderContext.renderQuad$2(renderState, t1);
    },
    SvgDisplayObject$3: function(data, width, height) {
      var t1, url, e;
      t1 = C.JSNumber_methods.toString$0(width);
      data = H.stringReplaceFirstUnchecked(data, "__width__", t1);
      t1 = C.JSNumber_methods.toString$0(height);
      url = (self.URL || self.webkitURL).createObjectURL(W.Blob_Blob([H.stringReplaceFirstUnchecked(data, "__height__", t1)], "image/svg+xml;charset=utf-8", null));
      e = document.createElement("img", null);
      t1 = J.getInterceptor$x(e);
      t1.set$src(e, url);
      t1 = t1.get$onLoad(e);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new R.SvgDisplayObject_closure(this, url, e)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    }
  },
  SvgDisplayObject_closure: {
    "^": "Closure:14;this_0,url_1,imageElement_2",
    call$1: function(e) {
      var t1, t2;
      (self.URL || self.webkitURL).revokeObjectURL(this.url_1);
      t1 = this.this_0;
      t2 = new Z.RenderTexture(0, 0, true, 1, 0, 0, null, null, null, null, null);
      t2.RenderTexture$fromImage$2(this.imageElement_2, 1);
      t1._renderTexture = t2;
      t1._renderTextureQuad = t2._quad;
    }
  }
},
1],
["_foreign_helper", "dart:_foreign_helper", , H, {
  "^": "",
  JS_CONST: {
    "^": "Object;code"
  }
}],
["_interceptors", "dart:_interceptors", , J, {
  "^": "",
  getInterceptor: function(object) {
    return void 0;
  },
  makeDispatchRecord: function(interceptor, proto, extension, indexability) {
    return {i: interceptor, p: proto, e: extension, x: indexability};
  },
  getNativeInterceptor: function(object) {
    var record, proto, objectProto, interceptor;
    record = object[init.dispatchPropertyName];
    if (record == null)
      if ($.initNativeDispatchFlag == null) {
        H.initNativeDispatch();
        record = object[init.dispatchPropertyName];
      }
    if (record != null) {
      proto = record.p;
      if (false === proto)
        return record.i;
      if (true === proto)
        return object;
      objectProto = Object.getPrototypeOf(object);
      if (proto === objectProto)
        return record.i;
      if (record.e === objectProto)
        throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
    }
    interceptor = H.lookupAndCacheInterceptor(object);
    if (interceptor == null) {
      proto = Object.getPrototypeOf(object);
      if (proto == null || proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      else
        return C.UnknownJavaScriptObject_methods;
    }
    return interceptor;
  },
  Interceptor: {
    "^": "Object;",
    $eq: function(receiver, other) {
      return receiver === other;
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: function(receiver) {
      return H.Primitives_objectToString(receiver);
    },
    "%": "Blob|CanvasGradient|CanvasPattern|DOMError|File|FileError|MediaError|MediaKeyError|Navigator|NavigatorUserMediaError|PositionError|SQLError|SVGAnimatedEnumeration|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedString|WebGLBuffer|WebGLFramebuffer|WebGLProgram|WebGLRenderbuffer|WebGLShader|WebGLTexture"
  },
  JSBool: {
    "^": "bool/Interceptor;",
    toString$0: function(receiver) {
      return String(receiver);
    },
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: true
  },
  JSNull: {
    "^": "Null/Interceptor;",
    $eq: function(receiver, other) {
      return null == other;
    },
    toString$0: function(receiver) {
      return "null";
    },
    get$hashCode: function(receiver) {
      return 0;
    }
  },
  JavaScriptObject: {
    "^": "Interceptor;",
    get$hashCode: function(_) {
      return 0;
    }
  },
  PlainJavaScriptObject: {
    "^": "JavaScriptObject;"
  },
  UnknownJavaScriptObject: {
    "^": "JavaScriptObject;"
  },
  JSArray: {
    "^": "List/Interceptor;",
    add$1: function(receiver, value) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1: function(receiver, index) {
      if (index < 0 || index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeAt"));
      return receiver.splice(index, 1)[0];
    },
    insert$2: function(receiver, index, value) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(P.ArgumentError$(index));
      if (index < 0 || index > receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insert"));
      receiver.splice(index, 0, value);
    },
    remove$1: function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    forEach$1: function(receiver, f) {
      return H.IterableMixinWorkaround_forEach(receiver, f);
    },
    elementAt$1: function(receiver, index) {
      if (index < 0 || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    },
    any$1: function(receiver, f) {
      return H.IterableMixinWorkaround_any(receiver, f);
    },
    contains$1: function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq(receiver[i], other))
          return true;
      return false;
    },
    toString$0: function(receiver) {
      return H.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
    },
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, receiver.length, 0, null);
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      if (newLength < 0)
        throw H.wrapException(P.RangeError$value(newLength));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      receiver.length = newLength;
    },
    $index: function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(P.ArgumentError$(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      receiver[index] = value;
    },
    $isList: true,
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    static: {JSArray_JSArray$fixed: function($length, $E) {
        var t1;
        if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
          throw H.wrapException(P.ArgumentError$("Length must be a non-negative integer: " + H.S($length)));
        t1 = H.setRuntimeTypeInfo(new Array($length), [$E]);
        t1.fixed$length = init;
        return t1;
      }}
  },
  JSNumber: {
    "^": "num/Interceptor;",
    compareTo$1: function(receiver, b) {
      var bIsNegative;
      if (typeof b !== "number")
        throw H.wrapException(P.ArgumentError$(b));
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (this.get$isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative: function(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    get$isNaN: function(receiver) {
      return isNaN(receiver);
    },
    get$isFinite: function(receiver) {
      return isFinite(receiver);
    },
    remainder$1: function(receiver, b) {
      return receiver % b;
    },
    toInt$0: function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$('' + receiver));
    },
    roundToDouble$0: function(receiver) {
      if (receiver < 0)
        return -Math.round(-receiver);
      else
        return Math.round(receiver);
    },
    toDouble$0: function(receiver) {
      return receiver;
    },
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode: function(receiver) {
      return receiver & 0x1FFFFFFF;
    },
    $add: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver + other;
    },
    $sub: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver - other;
    },
    $mul: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver * other;
    },
    $tdiv: function(receiver, other) {
      if ((receiver | 0) === receiver && (other | 0) === other && 0 !== other && -1 !== other)
        return receiver / other | 0;
      else
        return this.toInt$0(receiver / other);
    },
    _tdivFast$1: function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this.toInt$0(receiver / other);
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = other > 31 ? 0 : receiver >>> other;
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    $lt: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver < other;
    },
    $gt: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver > other;
    },
    $le: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver <= other;
    },
    $ge: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver >= other;
    },
    $isnum: true,
    static: {"^": "JSNumber__MIN_INT32,JSNumber__MAX_INT32"}
  },
  JSInt: {
    "^": "int/JSNumber;",
    $isdouble: true,
    $isnum: true,
    $isint: true
  },
  JSDouble: {
    "^": "double/JSNumber;",
    $isdouble: true,
    $isnum: true
  },
  JSString: {
    "^": "String/Interceptor;",
    codeUnitAt$1: function(receiver, index) {
      if (index < 0)
        throw H.wrapException(P.RangeError$value(index));
      if (index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      return receiver.charCodeAt(index);
    },
    $add: function(receiver, other) {
      if (typeof other !== "string")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver + other;
    },
    replaceFirst$2: function(receiver, from, to) {
      return H.stringReplaceFirstUnchecked(receiver, from, to);
    },
    split$1: function(receiver, pattern) {
      return receiver.split(pattern);
    },
    substring$2: function(receiver, startIndex, endIndex) {
      if (endIndex == null)
        endIndex = receiver.length;
      if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
        H.throwExpression(P.ArgumentError$(endIndex));
      if (startIndex < 0)
        throw H.wrapException(P.RangeError$value(startIndex));
      if (typeof endIndex !== "number")
        return H.iae(endIndex);
      if (startIndex > endIndex)
        throw H.wrapException(P.RangeError$value(startIndex));
      if (endIndex > receiver.length)
        throw H.wrapException(P.RangeError$value(endIndex));
      return receiver.substring(startIndex, endIndex);
    },
    substring$1: function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    },
    $mul: function(receiver, times) {
      var s, result;
      if (typeof times !== "number")
        return H.iae(times);
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw H.wrapException(C.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    indexOf$2: function(receiver, pattern, start) {
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
      return receiver.indexOf(pattern, start);
    },
    indexOf$1: function($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    contains$2: function(receiver, other, startIndex) {
      if (startIndex > receiver.length)
        throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length));
      return H.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1: function($receiver, other) {
      return this.contains$2($receiver, other, 0);
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    compareTo$1: function(receiver, other) {
      var t1;
      if (typeof other !== "string")
        throw H.wrapException(P.ArgumentError$(other));
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    },
    $isString: true
  }
}],
["_isolate_helper", "dart:_isolate_helper", , H, {
  "^": "",
  _callInIsolate: function(isolate, $function) {
    var result = isolate.eval$1($function);
    init.globalState.topEventLoop.run$0();
    return result;
  },
  leaveJsAsync: function() {
    var t1 = init.globalState.topEventLoop;
    t1._activeJsAsyncCount = t1._activeJsAsyncCount - 1;
  },
  startRootIsolate: function(entry, args) {
    var t1, t2, t3, t4, t5, rootContext;
    t1 = {};
    t1.args_0 = args;
    args = args;
    t1.args_0 = args;
    if (args == null) {
      args = [];
      t1.args_0 = args;
      t2 = args;
    } else
      t2 = args;
    if (!J.getInterceptor(t2).$isList)
      throw H.wrapException(new P.ArgumentError("Arguments to main must be a List: " + H.S(t2)));
    t2 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
    t2._Manager$1(entry);
    init.globalState = t2;
    if (init.globalState.isWorker === true)
      return;
    t2 = init.globalState;
    t3 = t2.nextIsolateId;
    t2.nextIsolateId = t3 + 1;
    t2 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl);
    t4 = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt);
    t5 = new H.RawReceivePortImpl(0, null, false);
    rootContext = new H._IsolateContext(t3, t2, t4, new Isolate(), t5, P.Capability_Capability(), P.Capability_Capability(), false, [], P.LinkedHashSet_LinkedHashSet(null, null, null, null), null, false);
    t4.add$1(0, 0);
    rootContext._addRegistration$2(0, t5);
    init.globalState.rootContext = rootContext;
    init.globalState.currentContext = rootContext;
    t2 = H.getDynamicRuntimeType();
    t3 = H.buildFunctionType(t2, [t2])._isTest$1(entry);
    if (t3)
      rootContext.eval$1(new H.startRootIsolate_closure(t1, entry));
    else {
      t2 = H.buildFunctionType(t2, [t2, t2])._isTest$1(entry);
      if (t2)
        rootContext.eval$1(new H.startRootIsolate_closure0(t1, entry));
      else
        rootContext.eval$1(entry);
    }
    init.globalState.topEventLoop.run$0();
  },
  IsolateNatives_computeThisScript: function() {
    var currentScript = init.currentScript;
    if (currentScript != null)
      return String(currentScript.src);
    if (typeof version == "function" && typeof os == "object" && "system" in os)
      return H.IsolateNatives_computeThisScriptFromTrace();
    if (typeof version == "function" && typeof system == "function")
      return thisFilename();
    if (init.globalState.isWorker === true)
      return H.IsolateNatives_computeThisScriptFromTrace();
    return;
  },
  IsolateNatives_computeThisScriptFromTrace: function() {
    var stack, matches;
    stack = new Error().stack;
    if (stack == null) {
      stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
      if (stack == null)
        throw H.wrapException(P.UnsupportedError$("No stack trace"));
    }
    matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
    if (matches != null)
      return matches[1];
    matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
    if (matches != null)
      return matches[1];
    throw H.wrapException(P.UnsupportedError$("Cannot extract URI from \"" + H.S(stack) + "\""));
  },
  IsolateNatives__processWorkerMessage: function(sender, e) {
    var msg, t1, functionName, entryPoint, args, message, isSpawnUri, startPaused, replyTo, t2, t3, t4, context, uri, t5, t6, worker, t7, workerId;
    msg = H._deserializeMessage(e.data);
    t1 = J.getInterceptor$asx(msg);
    switch (t1.$index(msg, "command")) {
      case "start":
        init.globalState.currentManagerId = t1.$index(msg, "id");
        functionName = t1.$index(msg, "functionName");
        entryPoint = functionName == null ? init.globalState.entry : init.globalFunctions[functionName]();
        args = t1.$index(msg, "args");
        message = H._deserializeMessage(t1.$index(msg, "msg"));
        isSpawnUri = t1.$index(msg, "isSpawnUri");
        startPaused = t1.$index(msg, "startPaused");
        replyTo = H._deserializeMessage(t1.$index(msg, "replyTo"));
        t1 = init.globalState;
        t2 = t1.nextIsolateId;
        t1.nextIsolateId = t2 + 1;
        t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl);
        t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt);
        t4 = new H.RawReceivePortImpl(0, null, false);
        context = new H._IsolateContext(t2, t1, t3, new Isolate(), t4, P.Capability_Capability(), P.Capability_Capability(), false, [], P.LinkedHashSet_LinkedHashSet(null, null, null, null), null, false);
        t3.add$1(0, 0);
        context._addRegistration$2(0, t4);
        init.globalState.topEventLoop.events._collection$_add$1(new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, startPaused, replyTo), "worker-start"));
        init.globalState.currentContext = context;
        init.globalState.topEventLoop.run$0();
        break;
      case "spawn-worker":
        t2 = t1.$index(msg, "functionName");
        uri = t1.$index(msg, "uri");
        t3 = t1.$index(msg, "args");
        t4 = t1.$index(msg, "msg");
        t5 = t1.$index(msg, "isSpawnUri");
        t6 = t1.$index(msg, "startPaused");
        t1 = t1.$index(msg, "replyPort");
        if (uri == null)
          uri = $.get$IsolateNatives_thisScript();
        worker = new Worker(uri);
        worker.onmessage = function(e) { H.IsolateNatives__processWorkerMessage(worker, e); };
        t7 = init.globalState;
        workerId = t7.nextManagerId;
        t7.nextManagerId = workerId + 1;
        $.get$IsolateNatives_workerIds().$indexSet(0, worker, workerId);
        init.globalState.managers.$indexSet(0, workerId, worker);
        worker.postMessage(H._serializeMessage(H.fillLiteralMap(["command", "start", "id", workerId, "replyTo", H._serializeMessage(t1), "args", t3, "msg", H._serializeMessage(t4), "isSpawnUri", t5, "startPaused", t6, "functionName", t2], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
        break;
      case "message":
        if (t1.$index(msg, "port") != null)
          t1.$index(msg, "port").send$1(t1.$index(msg, "msg"));
        init.globalState.topEventLoop.run$0();
        break;
      case "close":
        init.globalState.managers.remove$1(0, $.get$IsolateNatives_workerIds().$index(0, sender));
        sender.terminate();
        init.globalState.topEventLoop.run$0();
        break;
      case "log":
        H.IsolateNatives__log(t1.$index(msg, "msg"));
        break;
      case "print":
        if (init.globalState.isWorker === true) {
          t1 = init.globalState.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "print", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        } else
          P.print(t1.$index(msg, "msg"));
        break;
      case "error":
        throw H.wrapException(t1.$index(msg, "msg"));
    }
  },
  IsolateNatives__log: function(msg) {
    var trace, t1, t2, exception;
    if (init.globalState.isWorker === true) {
      t1 = init.globalState.mainManager;
      t2 = H._serializeMessage(H.fillLiteralMap(["command", "log", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      t1.toString;
      self.postMessage(t2);
    } else
      try {
        $.get$globalThis().console.log(msg);
      } catch (exception) {
        H.unwrapException(exception);
        trace = new H._StackTrace(exception, null);
        throw H.wrapException(P.Exception_Exception(trace));
      }

  },
  IsolateNatives__startIsolate: function(topLevel, args, message, isSpawnUri, startPaused, replyTo) {
    var context, t1, t2, t3;
    context = init.globalState.currentContext;
    t1 = context.id;
    $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + t1);
    $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + t1);
    t1 = context.controlPort;
    t2 = init.globalState.currentContext.id;
    t3 = context.pauseCapability;
    replyTo.send$1(["spawned", new H._NativeJsSendPort(t1, t2), t3, context.terminateCapability]);
    t2 = new H.IsolateNatives__startIsolate_runStartFunction(topLevel, args, message, isSpawnUri);
    if (startPaused === true) {
      context.addPause$2(t3, t3);
      init.globalState.topEventLoop.events._collection$_add$1(new H._IsolateEvent(context, t2, "start isolate"));
    } else
      t2.call$0();
  },
  _serializeMessage: function(message) {
    var t1;
    if (init.globalState.supportsWorkers === true) {
      t1 = new H._JsSerializer(0, new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    } else {
      t1 = new H._JsCopier(new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    }
  },
  _deserializeMessage: function(message) {
    if (init.globalState.supportsWorkers === true)
      return new H._JsDeserializer(null).deserialize$1(message);
    else
      return message;
  },
  _MessageTraverser_isPrimitive: function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  },
  _Deserializer_isPrimitive: function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  },
  startRootIsolate_closure: {
    "^": "Closure:16;box_0,entry_1",
    call$0: function() {
      this.entry_1.call$1(this.box_0.args_0);
    }
  },
  startRootIsolate_closure0: {
    "^": "Closure:16;box_0,entry_2",
    call$0: function() {
      this.entry_2.call$2(this.box_0.args_0, null);
    }
  },
  _Manager: {
    "^": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
    _Manager$1: function(entry) {
      var t1, t2, t3, $function;
      t1 = $.get$globalWindow() == null;
      t2 = $.get$globalWorker();
      t3 = t1 && $.get$globalPostMessageDefined() === true;
      this.isWorker = t3;
      if (!t3)
        t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
      else
        t2 = true;
      this.supportsWorkers = t2;
      this.fromCommandLine = t1 && !t3;
      t2 = H._IsolateEvent;
      t3 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t2]);
      t3.ListQueue$1(null, t2);
      this.topEventLoop = new H._EventLoop(t3, 0);
      this.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H._IsolateContext);
      this.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, null);
      if (this.isWorker === true) {
        t1 = new H._MainManagerStub();
        this.mainManager = t1;
        $function = function (e) { H.IsolateNatives__processWorkerMessage(t1, e); };
        $.get$globalThis().onmessage = $function;
        $.get$globalThis().dartPrint = function (object) {};
      }
    }
  },
  _IsolateContext: {
    "^": "Object;id>,ports,weakPorts,isolateStatics<,controlPort<,pauseCapability,terminateCapability,isPaused,delayedEvents,pauseTokens,doneHandlers,errorsAreFatal",
    addPause$2: function(authentification, resume) {
      if (!this.pauseCapability.$eq(0, authentification))
        return;
      if (this.pauseTokens.add$1(0, resume) && !this.isPaused)
        this.isPaused = true;
      this._updateGlobalState$0();
    },
    removePause$1: function(resume) {
      var t1, t2, $event, t3, t4, t5;
      if (!this.isPaused)
        return;
      t1 = this.pauseTokens;
      t1.remove$1(0, resume);
      if (t1._collection$_length === 0) {
        for (t1 = this.delayedEvents; t2 = t1.length, t2 !== 0;) {
          if (0 >= t2)
            return H.ioore(t1, 0);
          $event = t1.pop();
          t2 = init.globalState.topEventLoop.events;
          t3 = t2._head;
          t4 = t2._table;
          t5 = t4.length;
          t3 = (t3 - 1 & t5 - 1) >>> 0;
          t2._head = t3;
          if (t3 < 0 || t3 >= t5)
            return H.ioore(t4, t3);
          t4[t3] = $event;
          if (t3 === t2._tail)
            t2._grow$0();
          t2._modificationCount = t2._modificationCount + 1;
        }
        this.isPaused = false;
      }
      this._updateGlobalState$0();
    },
    addDoneListener$1: function(responsePort) {
      var t1 = this.doneHandlers;
      if (t1 == null) {
        t1 = [];
        this.doneHandlers = t1;
      }
      if (J.contains$1$asx(t1, responsePort))
        return;
      this.doneHandlers.push(responsePort);
    },
    removeDoneListener$1: function(responsePort) {
      var t1 = this.doneHandlers;
      if (t1 == null)
        return;
      J.remove$1$ax(t1, responsePort);
    },
    setErrorsFatal$2: function(authentification, errorsAreFatal) {
      if (!this.terminateCapability.$eq(0, authentification))
        return;
      this.errorsAreFatal = errorsAreFatal;
    },
    handlePing$2: function(responsePort, pingType) {
      if (J.$eq(pingType, 2))
        init.globalState.topEventLoop.events._collection$_add$1(new H._IsolateEvent(this, new H._IsolateContext_handlePing_closure(responsePort), "ping"));
      else
        responsePort.send$1(null);
    },
    eval$1: function(code) {
      var old, result;
      old = init.globalState.currentContext;
      init.globalState.currentContext = this;
      $ = this.isolateStatics;
      result = null;
      try {
        result = code.call$0();
      } finally {
        init.globalState.currentContext = old;
        if (old != null)
          $ = old.get$isolateStatics();
      }
      return result;
    },
    lookup$1: function(portId) {
      return this.ports.$index(0, portId);
    },
    _addRegistration$2: function(portId, port) {
      var t1 = this.ports;
      if (t1.containsKey$1(portId))
        throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
      t1.$indexSet(0, portId, port);
    },
    _updateGlobalState$0: function() {
      if (this.ports._collection$_length - this.weakPorts._collection$_length > 0 || this.isPaused)
        init.globalState.isolates.$indexSet(0, this.id, this);
      else
        this._shutdown$0();
    },
    _shutdown$0: function() {
      init.globalState.isolates.remove$1(0, this.id);
      var t1 = this.doneHandlers;
      if (t1 != null)
        for (t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();)
          t1._current.send$1(null);
    }
  },
  _IsolateContext_handlePing_closure: {
    "^": "Closure:16;responsePort_0",
    call$0: function() {
      this.responsePort_0.send$1(null);
    }
  },
  _EventLoop: {
    "^": "Object;events,_activeJsAsyncCount",
    dequeue$0: function() {
      var t1, t2, t3, t4, result;
      t1 = this.events;
      t2 = t1._head;
      if (t2 === t1._tail)
        return;
      t1._modificationCount = t1._modificationCount + 1;
      t3 = t1._table;
      t4 = t3.length;
      if (t2 >= t4)
        return H.ioore(t3, t2);
      result = t3[t2];
      t3[t2] = null;
      t1._head = (t2 + 1 & t4 - 1) >>> 0;
      return result;
    },
    runIteration$0: function() {
      var $event, t1, t2;
      $event = this.dequeue$0();
      if ($event == null) {
        if (init.globalState.rootContext != null && init.globalState.isolates.containsKey$1(init.globalState.rootContext.id) && init.globalState.fromCommandLine === true && init.globalState.rootContext.ports._collection$_length === 0)
          H.throwExpression(P.Exception_Exception("Program exited with open ReceivePorts."));
        t1 = init.globalState;
        if (t1.isWorker === true && t1.isolates._collection$_length === 0 && t1.topEventLoop._activeJsAsyncCount === 0) {
          t1 = t1.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "close"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        }
        return false;
      }
      $event.process$0();
      return true;
    },
    _runHelper$0: function() {
      if ($.get$globalWindow() != null)
        new H._EventLoop__runHelper_next(this).call$0();
      else
        for (; this.runIteration$0();)
          ;
    },
    run$0: function() {
      var e, trace, exception, t1, t2;
      if (init.globalState.isWorker !== true)
        this._runHelper$0();
      else
        try {
          this._runHelper$0();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          trace = new H._StackTrace(exception, null);
          t1 = init.globalState.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        }

    }
  },
  _EventLoop__runHelper_next: {
    "^": "Closure:0;this_0",
    call$0: function() {
      if (!this.this_0.runIteration$0())
        return;
      P.Timer_Timer(C.Duration_0, this);
    }
  },
  _IsolateEvent: {
    "^": "Object;isolate,fn,message",
    process$0: function() {
      var t1 = this.isolate;
      if (t1.isPaused) {
        t1.delayedEvents.push(this);
        return;
      }
      t1.eval$1(this.fn);
    }
  },
  _MainManagerStub: {
    "^": "Object;"
  },
  IsolateNatives__processWorkerMessage_closure: {
    "^": "Closure:16;entryPoint_0,args_1,message_2,isSpawnUri_3,startPaused_4,replyTo_5",
    call$0: function() {
      H.IsolateNatives__startIsolate(this.entryPoint_0, this.args_1, this.message_2, this.isSpawnUri_3, this.startPaused_4, this.replyTo_5);
    }
  },
  IsolateNatives__startIsolate_runStartFunction: {
    "^": "Closure:0;topLevel_0,args_1,message_2,isSpawnUri_3",
    call$0: function() {
      var t1, t2, t3;
      if (this.isSpawnUri_3 !== true)
        this.topLevel_0.call$1(this.message_2);
      else {
        t1 = this.topLevel_0;
        t2 = H.getDynamicRuntimeType();
        t3 = H.buildFunctionType(t2, [t2, t2])._isTest$1(t1);
        if (t3)
          t1.call$2(this.args_1, this.message_2);
        else {
          t2 = H.buildFunctionType(t2, [t2])._isTest$1(t1);
          if (t2)
            t1.call$1(this.args_1);
          else
            t1.call$0();
        }
      }
    }
  },
  _BaseSendPort: {
    "^": "Object;",
    $isSendPort: true,
    $isCapability: true
  },
  _NativeJsSendPort: {
    "^": "_BaseSendPort;_receivePort,_isolateId",
    send$1: function(message) {
      var t1, t2, isolate, t3, shouldSerialize, msg;
      t1 = {};
      t2 = this._isolateId;
      isolate = init.globalState.isolates.$index(0, t2);
      if (isolate == null)
        return;
      t3 = this._receivePort;
      if (t3.get$_isClosed())
        return;
      shouldSerialize = init.globalState.currentContext != null && init.globalState.currentContext.id !== t2;
      t1.msg_0 = message;
      if (shouldSerialize) {
        msg = H._serializeMessage(message);
        t1.msg_0 = msg;
        t2 = msg;
      } else
        t2 = message;
      if (isolate.get$controlPort() === t3) {
        t1 = J.getInterceptor$asx(t2);
        switch (t1.$index(t2, 0)) {
          case "pause":
            isolate.addPause$2(t1.$index(t2, 1), t1.$index(t2, 2));
            break;
          case "resume":
            isolate.removePause$1(t1.$index(t2, 1));
            break;
          case "add-ondone":
            isolate.addDoneListener$1(t1.$index(t2, 1));
            break;
          case "remove-ondone":
            isolate.removeDoneListener$1(t1.$index(t2, 1));
            break;
          case "set-errors-fatal":
            isolate.setErrorsFatal$2(t1.$index(t2, 1), t1.$index(t2, 2));
            break;
          case "ping":
            isolate.handlePing$2(t1.$index(t2, 1), t1.$index(t2, 2));
            break;
          default:
            P.print("UNKNOWN MESSAGE: " + H.S(t2));
        }
        return;
      }
      t2 = init.globalState.topEventLoop;
      t3 = "receive " + H.S(message);
      t2.events._collection$_add$1(new H._IsolateEvent(isolate, new H._NativeJsSendPort_send_closure(t1, this, shouldSerialize), t3));
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return !!J.getInterceptor(other).$is_NativeJsSendPort && J.$eq(this._receivePort, other._receivePort);
    },
    get$hashCode: function(_) {
      return this._receivePort.get$_id();
    },
    $is_NativeJsSendPort: true,
    $isSendPort: true,
    $isCapability: true
  },
  _NativeJsSendPort_send_closure: {
    "^": "Closure:16;box_0,this_1,shouldSerialize_2",
    call$0: function() {
      var t1, t2;
      t1 = this.this_1._receivePort;
      if (!t1.get$_isClosed()) {
        if (this.shouldSerialize_2) {
          t2 = this.box_0;
          t2.msg_0 = H._deserializeMessage(t2.msg_0);
        }
        t1.__isolate_helper$_add$1(this.box_0.msg_0);
      }
    }
  },
  _WorkerSendPort: {
    "^": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
    send$1: function(message) {
      var workerMessage, manager;
      workerMessage = H._serializeMessage(H.fillLiteralMap(["command", "message", "port", this, "msg", message], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      if (init.globalState.isWorker === true) {
        init.globalState.mainManager.toString;
        self.postMessage(workerMessage);
      } else {
        manager = init.globalState.managers.$index(0, this._workerId);
        if (manager != null)
          manager.postMessage(workerMessage);
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return !!J.getInterceptor(other).$is_WorkerSendPort && J.$eq(this._workerId, other._workerId) && J.$eq(this._isolateId, other._isolateId) && J.$eq(this._receivePortId, other._receivePortId);
    },
    get$hashCode: function(_) {
      var t1, t2, t3;
      t1 = this._workerId;
      if (typeof t1 !== "number")
        return t1.$shl();
      t2 = this._isolateId;
      if (typeof t2 !== "number")
        return t2.$shl();
      t3 = this._receivePortId;
      if (typeof t3 !== "number")
        return H.iae(t3);
      return (t1 << 16 ^ t2 << 8 ^ t3) >>> 0;
    },
    $is_WorkerSendPort: true,
    $isSendPort: true,
    $isCapability: true
  },
  RawReceivePortImpl: {
    "^": "Object;_id<,_handler,_isClosed<",
    _handler$1: function(arg0) {
      return this._handler.call$1(arg0);
    },
    __isolate_helper$_add$1: function(dataEvent) {
      if (this._isClosed)
        return;
      this._handler$1(dataEvent);
    },
    static: {"^": "RawReceivePortImpl__nextFreeId"}
  },
  _JsSerializer: {
    "^": "_Serializer;_nextFreeRefId,_visited",
    visitSendPort$1: function(x) {
      if (!!x.$is_NativeJsSendPort)
        return ["sendport", init.globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
      if (!!x.$is_WorkerSendPort)
        return ["sendport", x._workerId, x._isolateId, x._receivePortId];
      throw H.wrapException("Illegal underlying port " + H.S(x));
    },
    visitCapability$1: function(x) {
      if (!!x.$isCapabilityImpl)
        return ["capability", x._id];
      throw H.wrapException("Capability not serializable: " + H.S(x));
    }
  },
  _JsCopier: {
    "^": "_Copier;_visited",
    visitSendPort$1: function(x) {
      if (!!x.$is_NativeJsSendPort)
        return new H._NativeJsSendPort(x._receivePort, x._isolateId);
      if (!!x.$is_WorkerSendPort)
        return new H._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
      throw H.wrapException("Illegal underlying port " + H.S(x));
    },
    visitCapability$1: function(x) {
      if (!!x.$isCapabilityImpl)
        return new H.CapabilityImpl(x._id);
      throw H.wrapException("Capability not serializable: " + H.S(x));
    }
  },
  _JsDeserializer: {
    "^": "_Deserializer;_deserialized",
    deserializeSendPort$1: function(list) {
      var t1, managerId, isolateId, receivePortId, isolate, receivePort;
      t1 = J.getInterceptor$asx(list);
      managerId = t1.$index(list, 1);
      isolateId = t1.$index(list, 2);
      receivePortId = t1.$index(list, 3);
      if (J.$eq(managerId, init.globalState.currentManagerId)) {
        isolate = init.globalState.isolates.$index(0, isolateId);
        if (isolate == null)
          return;
        receivePort = isolate.lookup$1(receivePortId);
        if (receivePort == null)
          return;
        return new H._NativeJsSendPort(receivePort, isolateId);
      } else
        return new H._WorkerSendPort(managerId, receivePortId, isolateId);
    },
    deserializeCapability$1: function(list) {
      return new H.CapabilityImpl(J.$index$asx(list, 1));
    }
  },
  _JsVisitedMap: {
    "^": "Object;tagged",
    $index: function(_, object) {
      return object.__MessageTraverser__attached_info__;
    },
    $indexSet: function(_, object, info) {
      this.tagged.push(object);
      object.__MessageTraverser__attached_info__ = info;
    },
    reset$0: function(_) {
      this.tagged = [];
    },
    cleanup$0: function() {
      var $length, i, t1;
      for ($length = this.tagged.length, i = 0; i < $length; ++i) {
        t1 = this.tagged;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1[i].__MessageTraverser__attached_info__ = null;
      }
      this.tagged = null;
    }
  },
  _MessageTraverserVisitedMap: {
    "^": "Object;",
    $index: function(_, object) {
      return;
    },
    $indexSet: function(_, object, info) {
    },
    reset$0: function(_) {
    },
    cleanup$0: function() {
    }
  },
  _MessageTraverser: {
    "^": "Object;",
    traverse$1: function(x) {
      var result;
      if (H._MessageTraverser_isPrimitive(x))
        return this.visitPrimitive$1(x);
      this._visited.reset$0(0);
      result = null;
      try {
        result = this._dispatch$1(x);
      } finally {
        this._visited.cleanup$0();
      }
      return result;
    },
    _dispatch$1: function(x) {
      var t1;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return this.visitPrimitive$1(x);
      t1 = J.getInterceptor(x);
      if (!!t1.$isList)
        return this.visitList$1(x);
      if (!!t1.$isMap)
        return this.visitMap$1(x);
      if (!!t1.$isSendPort)
        return this.visitSendPort$1(x);
      if (!!t1.$isCapability)
        return this.visitCapability$1(x);
      return this.visitObject$1(x);
    },
    visitObject$1: function(x) {
      throw H.wrapException("Message serialization: Illegal value " + H.S(x) + " passed");
    }
  },
  _Copier: {
    "^": "_MessageTraverser;",
    visitPrimitive$1: function(x) {
      return x;
    },
    visitList$1: function(list) {
      var copy, len, i;
      copy = this._visited.$index(0, list);
      if (copy != null)
        return copy;
      len = J.get$length$asx(list);
      copy = Array(len);
      copy.fixed$length = init;
      this._visited.$indexSet(0, list, copy);
      for (i = 0; i < len; ++i) {
        if (i >= list.length)
          return H.ioore(list, i);
        copy[i] = this._dispatch$1(list[i]);
      }
      return copy;
    },
    visitMap$1: function(map) {
      var t1, copy;
      t1 = {};
      copy = this._visited.$index(0, map);
      t1.copy_0 = copy;
      if (copy != null)
        return copy;
      copy = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1.copy_0 = copy;
      this._visited.$indexSet(0, map, copy);
      map.forEach$1(0, new H._Copier_visitMap_closure(t1, this));
      return t1.copy_0;
    },
    visitSendPort$1: function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    visitCapability$1: function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }
  },
  _Copier_visitMap_closure: {
    "^": "Closure:15;box_0,this_1",
    call$2: function(key, val) {
      var t1 = this.this_1;
      J.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
    }
  },
  _Serializer: {
    "^": "_MessageTraverser;",
    visitPrimitive$1: function(x) {
      return x;
    },
    visitList$1: function(list) {
      var copyId, id;
      copyId = this._visited.$index(0, list);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = id + 1;
      this._visited.$indexSet(0, list, id);
      return ["list", id, this._serializeList$1(list)];
    },
    visitMap$1: function(map) {
      var copyId, id, t1, keys;
      copyId = this._visited.$index(0, map);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = id + 1;
      this._visited.$indexSet(0, map, id);
      t1 = map.get$keys();
      keys = this._serializeList$1(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)));
      t1 = map.get$values(map);
      return ["map", id, keys, this._serializeList$1(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)))];
    },
    _serializeList$1: function(list) {
      var len, result, i, t1;
      len = J.get$length$asx(list);
      result = [];
      C.JSArray_methods.set$length(result, len);
      for (i = 0; i < len; ++i) {
        if (i >= list.length)
          return H.ioore(list, i);
        t1 = this._dispatch$1(list[i]);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
      }
      return result;
    },
    visitSendPort$1: function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    visitCapability$1: function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }
  },
  _Deserializer: {
    "^": "Object;",
    deserialize$1: function(x) {
      if (H._Deserializer_isPrimitive(x))
        return x;
      this._deserialized = P.HashMap_HashMap(null, null, null, null, null);
      return this._deserializeHelper$1(x);
    },
    _deserializeHelper$1: function(x) {
      var t1, id;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return x;
      t1 = J.getInterceptor$asx(x);
      switch (t1.$index(x, 0)) {
        case "ref":
          id = t1.$index(x, 1);
          return this._deserialized.$index(0, id);
        case "list":
          return this._deserializeList$1(x);
        case "map":
          return this._deserializeMap$1(x);
        case "sendport":
          return this.deserializeSendPort$1(x);
        case "capability":
          return this.deserializeCapability$1(x);
        default:
          return this.deserializeObject$1(x);
      }
    },
    _deserializeList$1: function(x) {
      var t1, id, dartList, len, i;
      t1 = J.getInterceptor$asx(x);
      id = t1.$index(x, 1);
      dartList = t1.$index(x, 2);
      this._deserialized.$indexSet(0, id, dartList);
      t1 = J.getInterceptor$asx(dartList);
      len = t1.get$length(dartList);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i)
        t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
      return dartList;
    },
    _deserializeMap$1: function(x) {
      var result, t1, id, keys, values, len, t2, i;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1 = J.getInterceptor$asx(x);
      id = t1.$index(x, 1);
      this._deserialized.$indexSet(0, id, result);
      keys = t1.$index(x, 2);
      values = t1.$index(x, 3);
      t1 = J.getInterceptor$asx(keys);
      len = t1.get$length(keys);
      if (typeof len !== "number")
        return H.iae(len);
      t2 = J.getInterceptor$asx(values);
      i = 0;
      for (; i < len; ++i)
        result.$indexSet(0, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
      return result;
    },
    deserializeObject$1: function(x) {
      throw H.wrapException("Unexpected serialized object");
    }
  },
  TimerImpl: {
    "^": "Object;_once,_inEventLoop,_handle",
    cancel$0: function() {
      if ($.get$globalThis().setTimeout != null) {
        if (this._inEventLoop)
          throw H.wrapException(P.UnsupportedError$("Timer in event loop cannot be canceled."));
        if (this._handle == null)
          return;
        H.leaveJsAsync();
        if (this._once)
          $.get$globalThis().clearTimeout(this._handle);
        else
          $.get$globalThis().clearInterval(this._handle);
        this._handle = null;
      } else
        throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
    },
    TimerImpl$2: function(milliseconds, callback) {
      var t1, t2;
      if (milliseconds === 0)
        t1 = $.get$globalThis().setTimeout == null || init.globalState.isWorker === true;
      else
        t1 = false;
      if (t1) {
        this._handle = 1;
        t1 = init.globalState.topEventLoop;
        t2 = init.globalState.currentContext;
        t1.events._collection$_add$1(new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
        this._inEventLoop = true;
      } else {
        t1 = $.get$globalThis();
        if (t1.setTimeout != null) {
          t2 = init.globalState.topEventLoop;
          t2._activeJsAsyncCount = t2._activeJsAsyncCount + 1;
          this._handle = t1.setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
        } else
          throw H.wrapException(P.UnsupportedError$("Timer greater than 0."));
      }
    },
    static: {TimerImpl$: function(milliseconds, callback) {
        var t1 = new H.TimerImpl(true, false, null);
        t1.TimerImpl$2(milliseconds, callback);
        return t1;
      }}
  },
  TimerImpl_internalCallback: {
    "^": "Closure:0;this_0,callback_1",
    call$0: function() {
      this.this_0._handle = null;
      this.callback_1.call$0();
    }
  },
  TimerImpl_internalCallback0: {
    "^": "Closure:0;this_2,callback_3",
    call$0: function() {
      this.this_2._handle = null;
      H.leaveJsAsync();
      this.callback_3.call$0();
    }
  },
  CapabilityImpl: {
    "^": "Object;_id<",
    get$hashCode: function(_) {
      var hash = this._id;
      if (typeof hash !== "number")
        return hash.$shr();
      hash = C.JSNumber_methods._shrOtherPositive$1(hash, 0) ^ C.JSNumber_methods._tdivFast$1(hash, 4294967296);
      hash = (~hash >>> 0) + (hash << 15 >>> 0) & 4294967295;
      hash = ((hash ^ hash >>> 12) >>> 0) * 5 & 4294967295;
      hash = ((hash ^ hash >>> 4) >>> 0) * 2057 & 4294967295;
      return (hash ^ hash >>> 16) >>> 0;
    },
    $eq: function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (other === this)
        return true;
      if (!!J.getInterceptor(other).$isCapabilityImpl) {
        t1 = this._id;
        t2 = other._id;
        return t1 == null ? t2 == null : t1 === t2;
      }
      return false;
    },
    $isCapabilityImpl: true,
    $isCapability: true
  }
}],
["_js_helper", "dart:_js_helper", , H, {
  "^": "",
  isJsIndexable: function(object, record) {
    var result;
    if (record != null) {
      result = record.x;
      if (result != null)
        return result;
    }
    return !!J.getInterceptor(object).$isJavaScriptIndexingBehavior;
  },
  S: function(value) {
    var res;
    if (typeof value === "string")
      return value;
    if (typeof value === "number") {
      if (value !== 0)
        return "" + value;
    } else if (true === value)
      return "true";
    else if (false === value)
      return "false";
    else if (value == null)
      return "null";
    res = J.toString$0(value);
    if (typeof res !== "string")
      throw H.wrapException(P.ArgumentError$(value));
    return res;
  },
  Primitives_objectHashCode: function(object) {
    var hash = object.$identityHash;
    if (hash == null) {
      hash = Math.random() * 0x3fffffff | 0;
      object.$identityHash = hash;
    }
    return hash;
  },
  Primitives__throwFormatException: [function(string) {
    throw H.wrapException(P.FormatException$(string));
  }, "call$1", "Primitives__throwFormatException$closure", 2, 0, 1],
  Primitives_parseInt: function(source, radix, handleError) {
    var match, t1;
    handleError = H.Primitives__throwFormatException$closure();
    if (typeof source !== "string")
      H.throwExpression(P.ArgumentError$(source));
    match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
    if (match != null) {
      t1 = match.length;
      if (2 >= t1)
        return H.ioore(match, 2);
      if (match[2] != null)
        return parseInt(source, 16);
      if (3 >= t1)
        return H.ioore(match, 3);
      if (match[3] != null)
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    if (match == null)
      return handleError.call$1(source);
    return parseInt(source, 10);
  },
  Primitives_objectTypeName: function(object) {
    var $name, decompiled;
    $name = C.JS_CONST_IX5(J.getInterceptor(object));
    if ($name === "Object") {
      decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
      if (typeof decompiled === "string")
        $name = decompiled;
    }
    if (J.getInterceptor$s($name).codeUnitAt$1($name, 0) === 36)
      $name = C.JSString_methods.substring$1($name, 1);
    return $name + H.joinArguments(H.getRuntimeTypeInfo(object), 0, null);
  },
  Primitives_objectToString: function(object) {
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  },
  Primitives__fromCharCodeApply: function(array) {
    var end, t1, result, i, subarray, t2;
    end = array.length;
    for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
      if (t1)
        subarray = array;
      else {
        t2 = i + 500;
        t2 = t2 < end ? t2 : end;
        subarray = array.slice(i, t2);
      }
      result += String.fromCharCode.apply(null, subarray);
    }
    return result;
  },
  Primitives_stringFromCodePoints: function(codePoints) {
    var a, t1, i;
    a = [];
    a.$builtinTypeInfo = [J.JSInt];
    for (t1 = new H.ListIterator(codePoints, codePoints.length, 0, null); t1.moveNext$0();) {
      i = t1._current;
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i <= 65535)
        a.push(i);
      else if (i <= 1114111) {
        a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
        a.push(56320 + (i & 1023));
      } else
        throw H.wrapException(P.ArgumentError$(i));
    }
    return H.Primitives__fromCharCodeApply(a);
  },
  Primitives_stringFromCharCodes: function(charCodes) {
    var t1, i;
    for (t1 = new H.ListIterator(charCodes, charCodes.length, 0, null); t1.moveNext$0();) {
      i = t1._current;
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i < 0)
        throw H.wrapException(P.ArgumentError$(i));
      if (i > 65535)
        return H.Primitives_stringFromCodePoints(charCodes);
    }
    return H.Primitives__fromCharCodeApply(charCodes);
  },
  Primitives_lazyAsJsDate: function(receiver) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    return receiver.date;
  },
  Primitives_getProperty: function(object, key) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    return object[key];
  },
  Primitives_setProperty: function(object, key, value) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    object[key] = value;
  },
  iae: function(argument) {
    throw H.wrapException(P.ArgumentError$(argument));
  },
  ioore: function(receiver, index) {
    if (receiver == null)
      J.get$length$asx(receiver);
    if (typeof index !== "number" || Math.floor(index) !== index)
      H.iae(index);
    throw H.wrapException(P.RangeError$value(index));
  },
  wrapException: function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper;
    return wrapper;
  },
  toStringWrapper: function() {
    return J.toString$0(this.dartException);
  },
  throwExpression: function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper;
    throw wrapper;
  },
  unwrapException: function(ex) {
    var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
    t1 = new H.unwrapException_saveStackTrace(ex);
    if (ex == null)
      return;
    if (typeof ex !== "object")
      return ex;
    if ("dartException" in ex)
      return t1.call$1(ex.dartException);
    else if (!("message" in ex))
      return ex;
    message = ex.message;
    if ("number" in ex && typeof ex.number == "number") {
      number = ex.number;
      ieErrorCode = number & 65535;
      if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
        switch (ieErrorCode) {
          case 438:
            return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
          case 445:
          case 5007:
            t2 = H.S(message) + " (Error " + ieErrorCode + ")";
            return t1.call$1(new H.NullError(t2, null));
        }
    }
    if (ex instanceof TypeError) {
      t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
      t3 = $.get$TypeErrorDecoder_notClosurePattern();
      t4 = $.get$TypeErrorDecoder_nullCallPattern();
      nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
      t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
      t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
      t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
      $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
      t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
      t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
      match = t2.matchTypeError$1(message);
      if (match != null)
        return t1.call$1(H.JsNoSuchMethodError$(message, match));
      else {
        match = t3.matchTypeError$1(message);
        if (match != null) {
          match.method = "call";
          return t1.call$1(H.JsNoSuchMethodError$(message, match));
        } else {
          match = t4.matchTypeError$1(message);
          if (match == null) {
            match = nullLiteralCall.matchTypeError$1(message);
            if (match == null) {
              match = t5.matchTypeError$1(message);
              if (match == null) {
                match = t6.matchTypeError$1(message);
                if (match == null) {
                  match = t7.matchTypeError$1(message);
                  if (match == null) {
                    match = nullLiteralCall.matchTypeError$1(message);
                    if (match == null) {
                      match = t8.matchTypeError$1(message);
                      if (match == null) {
                        match = t9.matchTypeError$1(message);
                        t2 = match != null;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
          if (t2) {
            t2 = match == null ? null : match.method;
            return t1.call$1(new H.NullError(message, t2));
          }
        }
      }
      t2 = typeof message === "string" ? message : "";
      return t1.call$1(new H.UnknownJsTypeError(t2));
    }
    if (ex instanceof RangeError) {
      if (typeof message === "string" && message.indexOf("call stack") !== -1)
        return new P.StackOverflowError();
      return t1.call$1(new P.ArgumentError(null));
    }
    if (typeof InternalError == "function" && ex instanceof InternalError)
      if (typeof message === "string" && message === "too much recursion")
        return new P.StackOverflowError();
    return ex;
  },
  objectHashCode: function(object) {
    if (object == null || typeof object != 'object')
      return J.get$hashCode$(object);
    else
      return H.Primitives_objectHashCode(object);
  },
  fillLiteralMap: function(keyValuePairs, result) {
    var $length, index, index0, index1;
    $length = keyValuePairs.length;
    for (index = 0; index < $length; index = index1) {
      index0 = index + 1;
      index1 = index0 + 1;
      result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
    }
    return result;
  },
  invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
    var t1 = J.getInterceptor(numberOfArguments);
    if (t1.$eq(numberOfArguments, 0))
      return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
    else if (t1.$eq(numberOfArguments, 1))
      return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
    else if (t1.$eq(numberOfArguments, 2))
      return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
    else if (t1.$eq(numberOfArguments, 3))
      return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
    else if (t1.$eq(numberOfArguments, 4))
      return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
    else
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
  },
  convertDartClosureToJS: function(closure, arity) {
    var $function;
    if (closure == null)
      return;
    $function = closure.$identity;
    if (!!$function)
      return $function;
    $function = (function(closure, arity, context, invoke) {  return function(a1, a2, a3, a4) {     return invoke(closure, context, arity, a1, a2, a3, a4);  };})(closure,arity,init.globalState.currentContext,H.invokeClosure);
    closure.$identity = $function;
    return $function;
  },
  Closure_fromTearOff: function(receiver, functions, reflectionInfo, isStatic, jsArguments, propertyName) {
    var $function, callName, functionType, $prototype, $constructor, t1, isIntercepted, trampoline, signatureFunction, getReceiver, i, stub, stubCallName, t2;
    $function = functions[0];
    $function.$stubName;
    callName = $function.$callName;
    $function.$reflectionInfo = reflectionInfo;
    functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
    $prototype = isStatic ? Object.create(new H.TearOffClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, null).constructor.prototype);
    $prototype.$initialize = $prototype.constructor;
    if (isStatic)
      $constructor = function(){this.$initialize()};
    else if (typeof dart_precompiled == "function") {
      t1 = function(a,b,c,d) {this.$initialize(a,b,c,d)};
      $constructor = t1;
    } else {
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t1, 1);
      t1 = new Function("a", "b", "c", "d", "this.$initialize(a,b,c,d);" + t1);
      $constructor = t1;
    }
    $prototype.constructor = $constructor;
    $constructor.prototype = $prototype;
    t1 = !isStatic;
    if (t1) {
      isIntercepted = jsArguments.length == 1 && true;
      trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
      trampoline.$reflectionInfo = reflectionInfo;
    } else {
      $prototype.$name = propertyName;
      trampoline = $function;
      isIntercepted = false;
    }
    if (typeof functionType == "number")
      signatureFunction = (function(s){return function(){return init.metadata[s]}})(functionType);
    else if (t1 && typeof functionType == "function") {
      getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
      signatureFunction = function(f,r){return function(){return f.apply({$receiver:r(this)},arguments)}}(functionType,getReceiver);
    } else
      throw H.wrapException("Error in reflectionInfo.");
    $prototype.$signature = signatureFunction;
    $prototype[callName] = trampoline;
    for (t1 = functions.length, i = 1; i < t1; ++i) {
      stub = functions[i];
      stubCallName = stub.$callName;
      if (stubCallName != null) {
        t2 = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
        $prototype[stubCallName] = t2;
      }
    }
    $prototype["call*"] = trampoline;
    return $constructor;
  },
  Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
    var getSelf = H.BoundClosure_selfOf;
    switch (isSuperCall ? -1 : arity) {
      case 0:
        return function(n,S){return function(){return S(this)[n]()}}(stubName,getSelf);
      case 1:
        return function(n,S){return function(a){return S(this)[n](a)}}(stubName,getSelf);
      case 2:
        return function(n,S){return function(a,b){return S(this)[n](a,b)}}(stubName,getSelf);
      case 3:
        return function(n,S){return function(a,b,c){return S(this)[n](a,b,c)}}(stubName,getSelf);
      case 4:
        return function(n,S){return function(a,b,c,d){return S(this)[n](a,b,c,d)}}(stubName,getSelf);
      case 5:
        return function(n,S){return function(a,b,c,d,e){return S(this)[n](a,b,c,d,e)}}(stubName,getSelf);
      default:
        return function(f,s){return function(){return f.apply(s(this),arguments)}}($function,getSelf);
    }
  },
  Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
    var stubName, arity, lookedUpFunction, t1, t2, $arguments;
    if (isIntercepted)
      return H.Closure_forwardInterceptedCallTo(receiver, $function);
    stubName = $function.$stubName;
    arity = $function.length;
    lookedUpFunction = receiver[stubName];
    t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
    if (typeof dart_precompiled == "function" || !t1 || arity >= 27)
      return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
    if (arity === 0) {
      t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null) {
        t1 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t1;
      }
      t1 = "return function(){return this." + H.S(t1) + "." + H.S(stubName) + "();";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2) + "}")();
    }
    $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
    t1 = "return function(" + $arguments + "){return this.";
    t2 = $.BoundClosure_selfFieldNameCache;
    if (t2 == null) {
      t2 = H.BoundClosure_computeFieldNamed("self");
      $.BoundClosure_selfFieldNameCache = t2;
    }
    t2 = t1 + H.S(t2) + "." + H.S(stubName) + "(" + $arguments + ");";
    t1 = $.Closure_functionCounter;
    $.Closure_functionCounter = J.$add$ns(t1, 1);
    return new Function(t2 + H.S(t1) + "}")();
  },
  Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
    var getSelf, getReceiver;
    getSelf = H.BoundClosure_selfOf;
    getReceiver = H.BoundClosure_receiverOf;
    switch (isSuperCall ? -1 : arity) {
      case 0:
        throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
      case 1:
        return function(n,s,r){return function(){return s(this)[n](r(this))}}($name,getSelf,getReceiver);
      case 2:
        return function(n,s,r){return function(a){return s(this)[n](r(this),a)}}($name,getSelf,getReceiver);
      case 3:
        return function(n,s,r){return function(a,b){return s(this)[n](r(this),a,b)}}($name,getSelf,getReceiver);
      case 4:
        return function(n,s,r){return function(a,b,c){return s(this)[n](r(this),a,b,c)}}($name,getSelf,getReceiver);
      case 5:
        return function(n,s,r){return function(a,b,c,d){return s(this)[n](r(this),a,b,c,d)}}($name,getSelf,getReceiver);
      case 6:
        return function(n,s,r){return function(a,b,c,d,e){return s(this)[n](r(this),a,b,c,d,e)}}($name,getSelf,getReceiver);
      default:
        return function(f,s,r,a){return function(){a=[r(this)];Array.prototype.push.apply(a,arguments);return f.apply(s(this),a)}}($function,getSelf,getReceiver);
    }
  },
  Closure_forwardInterceptedCallTo: function(receiver, $function) {
    var selfField, t1, stubName, arity, isCsp, lookedUpFunction, t2, $arguments;
    selfField = H.BoundClosure_selfFieldName();
    t1 = $.BoundClosure_receiverFieldNameCache;
    if (t1 == null) {
      t1 = H.BoundClosure_computeFieldNamed("receiver");
      $.BoundClosure_receiverFieldNameCache = t1;
    }
    stubName = $function.$stubName;
    arity = $function.length;
    isCsp = typeof dart_precompiled == "function";
    lookedUpFunction = receiver[stubName];
    t2 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
    if (isCsp || !t2 || arity >= 28)
      return H.Closure_cspForwardInterceptedCall(arity, !t2, stubName, $function);
    if (arity === 1) {
      t1 = "return function(){return this." + H.S(selfField) + "." + H.S(stubName) + "(this." + H.S(t1) + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2) + "}")();
    }
    $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
    t1 = "return function(" + $arguments + "){return this." + H.S(selfField) + "." + H.S(stubName) + "(this." + H.S(t1) + ", " + $arguments + ");";
    t2 = $.Closure_functionCounter;
    $.Closure_functionCounter = J.$add$ns(t2, 1);
    return new Function(t1 + H.S(t2) + "}")();
  },
  closureFromTearOff: function(receiver, functions, reflectionInfo, isStatic, jsArguments, $name) {
    functions.fixed$length = init;
    reflectionInfo.fixed$length = init;
    return H.Closure_fromTearOff(receiver, functions, reflectionInfo, !!isStatic, jsArguments, $name);
  },
  propertyTypeCastError: function(value, property) {
    var t1 = J.getInterceptor$asx(property);
    throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
  },
  interceptedTypeCast: function(value, property) {
    var t1;
    if (value != null)
      t1 = typeof value === "object" && J.getInterceptor(value)[property];
    else
      t1 = true;
    if (t1)
      return value;
    H.propertyTypeCastError(value, property);
  },
  throwCyclicInit: function(staticName) {
    throw H.wrapException(P.CyclicInitializationError$("Cyclic initialization for static " + H.S(staticName)));
  },
  buildFunctionType: function(returnType, parameterTypes, optionalParameterTypes) {
    return new H.RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, null);
  },
  getDynamicRuntimeType: function() {
    return C.C_DynamicRuntimeType;
  },
  setRuntimeTypeInfo: function(target, typeInfo) {
    if (target != null)
      target.$builtinTypeInfo = typeInfo;
    return target;
  },
  getRuntimeTypeInfo: function(target) {
    if (target == null)
      return;
    return target.$builtinTypeInfo;
  },
  getRuntimeTypeArguments: function(target, substitutionName) {
    return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
  },
  getRuntimeTypeArgument: function(target, substitutionName, index) {
    var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
    return $arguments == null ? null : $arguments[index];
  },
  getTypeArgumentByIndex: function(target, index) {
    var rti = H.getRuntimeTypeInfo(target);
    return rti == null ? null : rti[index];
  },
  runtimeTypeToString: function(type, onTypeVariable) {
    if (type == null)
      return "dynamic";
    else if (typeof type === "object" && type !== null && type.constructor === Array)
      return type[0].builtin$cls + H.joinArguments(type, 1, onTypeVariable);
    else if (typeof type == "function")
      return type.builtin$cls;
    else if (typeof type === "number" && Math.floor(type) === type)
      if (onTypeVariable == null)
        return C.JSInt_methods.toString$0(type);
      else
        return onTypeVariable.call$1(type);
    else
      return;
  },
  joinArguments: function(types, startIndex, onTypeVariable) {
    var buffer, index, firstArgument, allDynamic, argument, str;
    if (types == null)
      return "";
    buffer = P.StringBuffer$("");
    for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
      if (firstArgument)
        firstArgument = false;
      else
        buffer._contents = buffer._contents + ", ";
      argument = types[index];
      if (argument != null)
        allDynamic = false;
      str = H.runtimeTypeToString(argument, onTypeVariable);
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
    }
    return allDynamic ? "" : "<" + H.S(buffer) + ">";
  },
  substitute: function(substitution, $arguments) {
    if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
      $arguments = substitution;
    else if (typeof substitution == "function") {
      substitution = H.invokeOn(substitution, null, $arguments);
      if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
        $arguments = substitution;
      else if (typeof substitution == "function")
        $arguments = H.invokeOn(substitution, null, $arguments);
    }
    return $arguments;
  },
  areSubtypes: function(s, t) {
    var len, i;
    if (s == null || t == null)
      return true;
    len = s.length;
    for (i = 0; i < len; ++i)
      if (!H.isSubtype(s[i], t[i]))
        return false;
    return true;
  },
  computeSignature: function(signature, context, contextName) {
    return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
  },
  isSubtype: function(s, t) {
    var targetSignatureFunction, t1, typeOfS, t2, typeOfT, $name, substitution;
    if (s === t)
      return true;
    if (s == null || t == null)
      return true;
    if ("func" in t) {
      if (!("func" in s)) {
        if ("$is_" + H.S(t.func) in s)
          return true;
        targetSignatureFunction = s.$signature;
        if (targetSignatureFunction == null)
          return false;
        s = targetSignatureFunction.apply(s, null);
      }
      return H.isFunctionSubtype(s, t);
    }
    if (t.builtin$cls === "Function" && "func" in s)
      return true;
    t1 = typeof s === "object" && s !== null && s.constructor === Array;
    typeOfS = t1 ? s[0] : s;
    t2 = typeof t === "object" && t !== null && t.constructor === Array;
    typeOfT = t2 ? t[0] : t;
    $name = H.runtimeTypeToString(typeOfT, null);
    if (typeOfT !== typeOfS) {
      if (!("$is" + H.S($name) in typeOfS))
        return false;
      substitution = typeOfS["$as" + H.S(H.runtimeTypeToString(typeOfT, null))];
    } else
      substitution = null;
    if (!t1 && substitution == null || !t2)
      return true;
    t1 = t1 ? s.slice(1) : null;
    t2 = t2 ? t.slice(1) : null;
    return H.areSubtypes(H.substitute(substitution, t1), t2);
  },
  areAssignable: function(s, t, allowShorter) {
    var sLength, tLength, i, t1, t2;
    if (t == null && s == null)
      return true;
    if (t == null)
      return allowShorter;
    if (s == null)
      return false;
    sLength = s.length;
    tLength = t.length;
    if (allowShorter) {
      if (sLength < tLength)
        return false;
    } else if (sLength !== tLength)
      return false;
    for (i = 0; i < tLength; ++i) {
      t1 = s[i];
      t2 = t[i];
      if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
        return false;
    }
    return true;
  },
  areAssignableMaps: function(s, t) {
    var t1, names, i, $name, tType, sType;
    if (t == null)
      return true;
    if (s == null)
      return false;
    t1 = Object.getOwnPropertyNames(t);
    t1.fixed$length = init;
    names = t1;
    for (t1 = names.length, i = 0; i < t1; ++i) {
      $name = names[i];
      if (!Object.hasOwnProperty.call(s, $name))
        return false;
      tType = t[$name];
      sType = s[$name];
      if (!(H.isSubtype(tType, sType) || H.isSubtype(sType, tType)))
        return false;
    }
    return true;
  },
  isFunctionSubtype: function(s, t) {
    var sReturnType, tReturnType, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
    if (!("func" in s))
      return false;
    if ("void" in s) {
      if (!("void" in t) && "ret" in t)
        return false;
    } else if (!("void" in t)) {
      sReturnType = s.ret;
      tReturnType = t.ret;
      if (!(H.isSubtype(sReturnType, tReturnType) || H.isSubtype(tReturnType, sReturnType)))
        return false;
    }
    sParameterTypes = s.args;
    tParameterTypes = t.args;
    sOptionalParameterTypes = s.opt;
    tOptionalParameterTypes = t.opt;
    sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
    tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
    sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
    tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
    if (sParametersLen > tParametersLen)
      return false;
    if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
      return false;
    if (sParametersLen === tParametersLen) {
      if (!H.areAssignable(sParameterTypes, tParameterTypes, false))
        return false;
      if (!H.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true))
        return false;
    } else {
      for (pos = 0; pos < sParametersLen; ++pos) {
        t1 = sParameterTypes[pos];
        t2 = tParameterTypes[pos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tOptionalParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
    }
    return H.areAssignableMaps(s.named, t.named);
  },
  invokeOn: function($function, receiver, $arguments) {
    return $function.apply(receiver, $arguments);
  },
  toStringForNativeObject: function(obj) {
    var t1 = $.getTagFunction;
    return "Instance of " + (t1 == null ? "<Unknown>" : t1.call$1(obj));
  },
  hashCodeForNativeObject: function(object) {
    return H.Primitives_objectHashCode(object);
  },
  defineProperty: function(obj, property, value) {
    Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
  },
  lookupAndCacheInterceptor: function(obj) {
    var tag, record, interceptor, interceptorClass, mark, t1;
    tag = $.getTagFunction.call$1(obj);
    record = $.dispatchRecordsForInstanceTags[tag];
    if (record != null) {
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    interceptor = $.interceptorsForUncacheableTags[tag];
    if (interceptor != null)
      return interceptor;
    interceptorClass = init.interceptorsByTag[tag];
    if (interceptorClass == null) {
      tag = $.alternateTagFunction.call$2(obj, tag);
      if (tag != null) {
        record = $.dispatchRecordsForInstanceTags[tag];
        if (record != null) {
          Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
          return record.i;
        }
        interceptor = $.interceptorsForUncacheableTags[tag];
        if (interceptor != null)
          return interceptor;
        interceptorClass = init.interceptorsByTag[tag];
      }
    }
    if (interceptorClass == null)
      return;
    interceptor = interceptorClass.prototype;
    mark = tag[0];
    if (mark === "!") {
      record = H.makeLeafDispatchRecord(interceptor);
      $.dispatchRecordsForInstanceTags[tag] = record;
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    if (mark === "~") {
      $.interceptorsForUncacheableTags[tag] = interceptor;
      return interceptor;
    }
    if (mark === "-") {
      t1 = H.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    }
    if (mark === "+")
      return H.patchInteriorProto(obj, interceptor);
    if (mark === "*")
      throw H.wrapException(P.UnimplementedError$(tag));
    if (init.leafTags[tag] === true) {
      t1 = H.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    } else
      return H.patchInteriorProto(obj, interceptor);
  },
  patchInteriorProto: function(obj, interceptor) {
    var proto, record;
    proto = Object.getPrototypeOf(obj);
    record = J.makeDispatchRecord(interceptor, proto, null, null);
    Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
    return interceptor;
  },
  makeLeafDispatchRecord: function(interceptor) {
    return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  },
  makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
    var interceptor = interceptorClass.prototype;
    if (init.leafTags[tag] === true)
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    else
      return J.makeDispatchRecord(interceptor, proto, null, null);
  },
  initNativeDispatch: function() {
    if (true === $.initNativeDispatchFlag)
      return;
    $.initNativeDispatchFlag = true;
    H.initNativeDispatchContinue();
  },
  initNativeDispatchContinue: function() {
    var map, tags, i, tag, proto, record, interceptorClass;
    $.dispatchRecordsForInstanceTags = Object.create(null);
    $.interceptorsForUncacheableTags = Object.create(null);
    H.initHooks();
    map = init.interceptorsByTag;
    tags = Object.getOwnPropertyNames(map);
    if (typeof window != "undefined") {
      window;
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        proto = $.prototypeForTagFunction.call$1(tag);
        if (proto != null) {
          record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
          if (record != null)
            Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        }
      }
    }
    for (i = 0; i < tags.length; ++i) {
      tag = tags[i];
      if (/^[A-Za-z_]/.test(tag)) {
        interceptorClass = map[tag];
        map["!" + tag] = interceptorClass;
        map["~" + tag] = interceptorClass;
        map["-" + tag] = interceptorClass;
        map["+" + tag] = interceptorClass;
        map["*" + tag] = interceptorClass;
      }
    }
  },
  initHooks: function() {
    var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
    hooks = C.JS_CONST_aQP();
    hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_rr7, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_gkc, H.applyHooksTransformer(C.JS_CONST_U4w, H.applyHooksTransformer(C.JS_CONST_QJm(C.JS_CONST_IX5), hooks)))))));
    if (typeof dartNativeDispatchHooksTransformer != "undefined") {
      transformers = dartNativeDispatchHooksTransformer;
      if (typeof transformers == "function")
        transformers = [transformers];
      if (transformers.constructor == Array)
        for (i = 0; i < transformers.length; ++i) {
          transformer = transformers[i];
          if (typeof transformer == "function")
            hooks = transformer(hooks) || hooks;
        }
    }
    getTag = hooks.getTag;
    getUnknownTag = hooks.getUnknownTag;
    prototypeForTag = hooks.prototypeForTag;
    $.getTagFunction = new H.initHooks_closure(getTag);
    $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
    $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
  },
  applyHooksTransformer: function(transformer, hooks) {
    return transformer(hooks) || hooks;
  },
  stringContainsUnchecked: function(receiver, other, startIndex) {
    return C.JSString_methods.indexOf$2(receiver, other, startIndex) !== -1;
  },
  stringReplaceFirstUnchecked: function(receiver, from, to) {
    return receiver.replace(from, to.replace("$", "$$$$"));
  },
  ReflectionInfo: {
    "^": "Object;jsFunction,data,isAccessor,requiredParameterCount,optionalParameterCount,areOptionalParametersNamed,functionType,cachedSortedIndices",
    static: {"^": "ReflectionInfo_REQUIRED_PARAMETERS_INFO,ReflectionInfo_OPTIONAL_PARAMETERS_INFO,ReflectionInfo_FUNCTION_TYPE_INDEX,ReflectionInfo_FIRST_DEFAULT_ARGUMENT", ReflectionInfo_ReflectionInfo: function(jsFunction) {
        var data, requiredParametersInfo, requiredParameterCount, optionalParametersInfo;
        data = jsFunction.$reflectionInfo;
        if (data == null)
          return;
        data.fixed$length = init;
        data = data;
        requiredParametersInfo = data[0];
        requiredParameterCount = requiredParametersInfo >> 1;
        optionalParametersInfo = data[1];
        return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 1) === 1, requiredParameterCount, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2], null);
      }}
  },
  TypeErrorDecoder: {
    "^": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
    matchTypeError$1: function(message) {
      var match, result, t1;
      match = new RegExp(this._pattern).exec(message);
      if (match == null)
        return;
      result = {};
      t1 = this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    },
    static: {"^": "TypeErrorDecoder_noSuchMethodPattern,TypeErrorDecoder_notClosurePattern,TypeErrorDecoder_nullCallPattern,TypeErrorDecoder_nullLiteralCallPattern,TypeErrorDecoder_undefinedCallPattern,TypeErrorDecoder_undefinedLiteralCallPattern,TypeErrorDecoder_nullPropertyPattern,TypeErrorDecoder_nullLiteralPropertyPattern,TypeErrorDecoder_undefinedPropertyPattern,TypeErrorDecoder_undefinedLiteralPropertyPattern", TypeErrorDecoder_extractPattern: function(message) {
        var match, $arguments, argumentsExpr, expr, method, receiver;
        message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
        match = message.match(/\\\$[a-zA-Z]+\\\$/g);
        if (match == null)
          match = [];
        $arguments = match.indexOf("\\$arguments\\$");
        argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
        expr = match.indexOf("\\$expr\\$");
        method = match.indexOf("\\$method\\$");
        receiver = match.indexOf("\\$receiver\\$");
        return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
      }, TypeErrorDecoder_provokeCallErrorOn: function(expression) {
        return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
      }, TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
        return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
      }}
  },
  NullError: {
    "^": "Error;_message,_method",
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NullError: " + H.S(this._message);
      return "NullError: Cannot call \"" + H.S(t1) + "\" on null";
    },
    $isError: true
  },
  JsNoSuchMethodError: {
    "^": "Error;_message,_method,_receiver",
    toString$0: function(_) {
      var t1, t2;
      t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this._message);
      t2 = this._receiver;
      if (t2 == null)
        return "NoSuchMethodError: Cannot call \"" + H.S(t1) + "\" (" + H.S(this._message) + ")";
      return "NoSuchMethodError: Cannot call \"" + H.S(t1) + "\" on \"" + H.S(t2) + "\" (" + H.S(this._message) + ")";
    },
    $isError: true,
    static: {JsNoSuchMethodError$: function(_message, match) {
        var t1, t2;
        t1 = match == null;
        t2 = t1 ? null : match.method;
        t1 = t1 ? null : match.receiver;
        return new H.JsNoSuchMethodError(_message, t2, t1);
      }}
  },
  UnknownJsTypeError: {
    "^": "Error;_message",
    toString$0: function(_) {
      var t1 = this._message;
      return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
    }
  },
  unwrapException_saveStackTrace: {
    "^": "Closure:14;ex_0",
    call$1: function(error) {
      if (!!J.getInterceptor(error).$isError)
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex_0;
      return error;
    }
  },
  _StackTrace: {
    "^": "Object;_exception,_trace",
    toString$0: function(_) {
      var t1, trace;
      t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = typeof t1 === "object" ? t1.stack : null;
      t1 = trace == null ? "" : trace;
      this._trace = t1;
      return t1;
    }
  },
  invokeClosure_closure: {
    "^": "Closure:16;closure_0",
    call$0: function() {
      return this.closure_0.call$0();
    }
  },
  invokeClosure_closure0: {
    "^": "Closure:16;closure_1,arg1_2",
    call$0: function() {
      return this.closure_1.call$1(this.arg1_2);
    }
  },
  invokeClosure_closure1: {
    "^": "Closure:16;closure_3,arg1_4,arg2_5",
    call$0: function() {
      return this.closure_3.call$2(this.arg1_4, this.arg2_5);
    }
  },
  invokeClosure_closure2: {
    "^": "Closure:16;closure_6,arg1_7,arg2_8,arg3_9",
    call$0: function() {
      return this.closure_6.call$3(this.arg1_7, this.arg2_8, this.arg3_9);
    }
  },
  invokeClosure_closure3: {
    "^": "Closure:16;closure_10,arg1_11,arg2_12,arg3_13,arg4_14",
    call$0: function() {
      return this.closure_10.call$4(this.arg1_11, this.arg2_12, this.arg3_13, this.arg4_14);
    }
  },
  Closure: {
    "^": "Object;",
    toString$0: function(_) {
      return "Closure";
    }
  },
  TearOffClosure: {
    "^": "Closure;"
  },
  BoundClosure: {
    "^": "TearOffClosure;_self,__js_helper$_target,_receiver,__js_helper$_name",
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!J.getInterceptor(other).$isBoundClosure)
        return false;
      return this._self === other._self && this.__js_helper$_target === other.__js_helper$_target && this._receiver === other._receiver;
    },
    get$hashCode: function(_) {
      var t1, receiverHashCode;
      t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      t1 = H.Primitives_objectHashCode(this.__js_helper$_target);
      if (typeof receiverHashCode !== "number")
        return receiverHashCode.$xor();
      return (receiverHashCode ^ t1) >>> 0;
    },
    $isBoundClosure: true,
    static: {"^": "BoundClosure_selfFieldNameCache,BoundClosure_receiverFieldNameCache", BoundClosure_selfOf: function(closure) {
        return closure._self;
      }, BoundClosure_receiverOf: function(closure) {
        return closure._receiver;
      }, BoundClosure_selfFieldName: function() {
        var t1 = $.BoundClosure_selfFieldNameCache;
        if (t1 == null) {
          t1 = H.BoundClosure_computeFieldNamed("self");
          $.BoundClosure_selfFieldNameCache = t1;
        }
        return t1;
      }, BoundClosure_computeFieldNamed: function(fieldName) {
        var template, t1, names, i, $name;
        template = new H.BoundClosure("self", "target", "receiver", "name");
        t1 = Object.getOwnPropertyNames(template);
        t1.fixed$length = init;
        names = t1;
        for (t1 = names.length, i = 0; i < t1; ++i) {
          $name = names[i];
          if (template[$name] === fieldName)
            return $name;
        }
      }}
  },
  CastErrorImplementation: {
    "^": "Error;message",
    toString$0: function(_) {
      return this.message;
    },
    $isError: true,
    static: {CastErrorImplementation$: function(actualType, expectedType) {
        return new H.CastErrorImplementation("CastError: Casting value of type " + H.S(actualType) + " to incompatible type " + H.S(expectedType));
      }}
  },
  RuntimeError: {
    "^": "Error;message",
    toString$0: function(_) {
      return "RuntimeError: " + H.S(this.message);
    },
    static: {RuntimeError$: function(message) {
        return new H.RuntimeError(message);
      }}
  },
  RuntimeType: {
    "^": "Object;"
  },
  RuntimeFunctionType: {
    "^": "RuntimeType;returnType,parameterTypes,optionalParameterTypes,namedParameters",
    _isTest$1: function(expression) {
      var functionTypeObject = this._extractFunctionTypeObjectFrom$1(expression);
      return functionTypeObject == null ? false : H.isFunctionSubtype(functionTypeObject, this.toRti$0());
    },
    _extractFunctionTypeObjectFrom$1: function(o) {
      var interceptor = J.getInterceptor(o);
      return "$signature" in interceptor ? interceptor.$signature() : null;
    },
    toRti$0: function() {
      var result, t1, t2, namedRti, keys, i, $name;
      result = { "func": "dynafunc" };
      t1 = this.returnType;
      t2 = J.getInterceptor(t1);
      if (!!t2.$isVoidRuntimeType)
        result.void = true;
      else if (!t2.$isDynamicRuntimeType)
        result.ret = t1.toRti$0();
      t1 = this.parameterTypes;
      if (t1 != null && t1.length !== 0)
        result.args = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.optionalParameterTypes;
      if (t1 != null && t1.length !== 0)
        result.opt = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.namedParameters;
      if (t1 != null) {
        namedRti = {};
        keys = H.extractKeys(t1);
        for (t2 = keys.length, i = 0; i < t2; ++i) {
          $name = keys[i];
          namedRti[$name] = t1[$name].toRti$0();
        }
        result.named = namedRti;
      }
      return result;
    },
    toString$0: function(_) {
      var t1, t2, result, needsComma, i, type, keys, $name;
      t1 = this.parameterTypes;
      if (t1 != null)
        for (t2 = t1.length, result = "(", needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
          type = t1[i];
          if (needsComma)
            result += ", ";
          result += H.S(type);
        }
      else {
        result = "(";
        needsComma = false;
      }
      t1 = this.optionalParameterTypes;
      if (t1 != null && t1.length !== 0) {
        result = (needsComma ? result + ", " : result) + "[";
        for (t2 = t1.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
          type = t1[i];
          if (needsComma)
            result += ", ";
          result += H.S(type);
        }
        result += "]";
      } else {
        t1 = this.namedParameters;
        if (t1 != null) {
          result = (needsComma ? result + ", " : result) + "{";
          keys = H.extractKeys(t1);
          for (t2 = keys.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            $name = keys[i];
            if (needsComma)
              result += ", ";
            result += H.S(t1[$name].toRti$0()) + " " + $name;
          }
          result += "}";
        }
      }
      return result + (") -> " + H.S(this.returnType));
    },
    static: {"^": "RuntimeFunctionType_inAssert", RuntimeFunctionType_listToRti: function(list) {
        var result, t1, i;
        list = list;
        result = [];
        for (t1 = list.length, i = 0; i < t1; ++i)
          result.push(list[i].toRti$0());
        return result;
      }}
  },
  DynamicRuntimeType: {
    "^": "RuntimeType;",
    toString$0: function(_) {
      return "dynamic";
    },
    toRti$0: function() {
      return;
    },
    $isDynamicRuntimeType: true
  },
  TypeImpl: {
    "^": "Object;_typeName,_unmangledName",
    toString$0: function(_) {
      var t1, unmangledName, unmangledName0;
      t1 = this._unmangledName;
      if (t1 != null)
        return t1;
      unmangledName = this._typeName;
      unmangledName0 = init.mangledGlobalNames[unmangledName];
      unmangledName = unmangledName0 == null ? unmangledName : unmangledName0;
      this._unmangledName = unmangledName;
      return unmangledName;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this._typeName);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return !!J.getInterceptor(other).$isTypeImpl && J.$eq(this._typeName, other._typeName);
    },
    $isTypeImpl: true
  },
  initHooks_closure: {
    "^": "Closure:14;getTag_0",
    call$1: function(o) {
      return this.getTag_0(o);
    }
  },
  initHooks_closure0: {
    "^": "Closure:17;getUnknownTag_1",
    call$2: function(o, tag) {
      return this.getUnknownTag_1(o, tag);
    }
  },
  initHooks_closure1: {
    "^": "Closure:1;prototypeForTag_2",
    call$1: function(tag) {
      return this.prototypeForTag_2(tag);
    }
  }
}],
["dart._internal", "dart:_internal", , H, {
  "^": "",
  IterableMixinWorkaround_forEach: function(iterable, f) {
    var t1;
    for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
      f.call$1(t1._current);
  },
  IterableMixinWorkaround_any: function(iterable, f) {
    var t1;
    for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
      if (f.call$1(t1._current) === true)
        return true;
    return false;
  },
  IterableMixinWorkaround_firstWhere: function(iterable, test, orElse) {
    var t1, element;
    for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();) {
      element = t1._current;
      if (test.call$1(element) === true)
        return element;
    }
    throw H.wrapException(P.StateError$("No matching element"));
  },
  IterableMixinWorkaround_toStringIterable: function(iterable, leftDelimiter, rightDelimiter) {
    var result, i, t1;
    for (i = 0; t1 = $.get$IterableMixinWorkaround__toStringList(), i < t1.length; ++i)
      if (t1[i] === iterable)
        return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
    result = P.StringBuffer$("");
    try {
      $.get$IterableMixinWorkaround__toStringList().push(iterable);
      result.write$1(leftDelimiter);
      result.writeAll$2(iterable, ", ");
      result.write$1(rightDelimiter);
    } finally {
      t1 = $.get$IterableMixinWorkaround__toStringList();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
    }
    return result.get$_contents();
  },
  IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
    var $length;
    if (start < 0 || start > list.length)
      H.throwExpression(P.RangeError$range(start, 0, list.length));
    if (end < start || end > list.length)
      H.throwExpression(P.RangeError$range(end, start, list.length));
    $length = end - start;
    if ($length === 0)
      return;
    if (skipCount + $length > from.length)
      throw H.wrapException(new P.StateError("Not enough elements"));
    H.Lists_copy(from, skipCount, list, start, $length);
  },
  Lists_copy: function(src, srcStart, dst, dstStart, count) {
    var i, j, t1, t2;
    if (srcStart < dstStart)
      for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length; i >= srcStart; --i, --j) {
        if (i >= t1)
          return H.ioore(src, i);
        C.JSArray_methods.$indexSet(dst, j, src[i]);
      }
    else
      for (t1 = srcStart + count, t2 = src.length, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
        if (i >= t2)
          return H.ioore(src, i);
        C.JSArray_methods.$indexSet(dst, j, src[i]);
      }
  },
  Lists_indexOf: function(a, element, startIndex, endIndex) {
    var i;
    if (startIndex >= a.length)
      return -1;
    for (i = startIndex; i < endIndex; ++i) {
      if (i >= a.length)
        return H.ioore(a, i);
      if (J.$eq(a[i], element))
        return i;
    }
    return -1;
  },
  Sort__doSort: function(a, left, right, compare) {
    if (right - left <= 32)
      H.Sort__insertionSort(a, left, right, compare);
    else
      H.Sort__dualPivotQuicksort(a, left, right, compare);
  },
  Sort__insertionSort: function(a, left, right, compare) {
    var i, t1, el, j, t2, j0;
    for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
      el = t1.$index(a, i);
      j = i;
      while (true) {
        if (j > left) {
          t2 = j - 1;
          if (t2 < 0 || t2 >= a.length)
            return H.ioore(a, t2);
          t2 = J.$gt$n(compare.call$2(a[t2], el), 0);
        } else
          t2 = false;
        if (!t2)
          break;
        j0 = j - 1;
        if (j0 < 0 || j0 >= a.length)
          return H.ioore(a, j0);
        t1.$indexSet(a, j, a[j0]);
        j = j0;
      }
      t1.$indexSet(a, j, el);
    }
  },
  Sort__dualPivotQuicksort: function(a, left, right, compare) {
    var sixth, index1, index5, index3, index2, index4, t1, el1, t2, el2, el3, el4, el5, t0, less, great, k, ak, comp, t3, great0, less0, pivots_are_equal;
    sixth = C.JSInt_methods._tdivFast$1(right - left + 1, 6);
    index1 = left + sixth;
    index5 = right - sixth;
    index3 = C.JSInt_methods._tdivFast$1(left + right, 2);
    index2 = index3 - sixth;
    index4 = index3 + sixth;
    t1 = J.getInterceptor$asx(a);
    el1 = t1.$index(a, index1);
    t2 = a.length;
    if (index2 < 0 || index2 >= t2)
      return H.ioore(a, index2);
    el2 = a[index2];
    if (index3 < 0 || index3 >= t2)
      return H.ioore(a, index3);
    el3 = a[index3];
    if (index4 < 0 || index4 >= t2)
      return H.ioore(a, index4);
    el4 = a[index4];
    if (index5 < 0 || index5 >= t2)
      return H.ioore(a, index5);
    el5 = a[index5];
    if (J.$gt$n(compare.call$2(el1, el2), 0)) {
      t0 = el2;
      el2 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el4, el5), 0)) {
      t0 = el5;
      el5 = el4;
      el4 = t0;
    }
    if (J.$gt$n(compare.call$2(el1, el3), 0)) {
      t0 = el3;
      el3 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el3), 0)) {
      t0 = el3;
      el3 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el1, el4), 0)) {
      t0 = el4;
      el4 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el3, el4), 0)) {
      t0 = el4;
      el4 = el3;
      el3 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el5), 0)) {
      t0 = el5;
      el5 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el3), 0)) {
      t0 = el3;
      el3 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el4, el5), 0)) {
      t0 = el5;
      el5 = el4;
      el4 = t0;
    }
    t1.$indexSet(a, index1, el1);
    t1.$indexSet(a, index3, el3);
    t1.$indexSet(a, index5, el5);
    if (left < 0 || left >= a.length)
      return H.ioore(a, left);
    t1.$indexSet(a, index2, a[left]);
    if (right < 0 || right >= a.length)
      return H.ioore(a, right);
    t1.$indexSet(a, index4, a[right]);
    less = left + 1;
    great = right - 1;
    if (J.$eq(compare.call$2(el2, el4), 0)) {
      for (k = less; k <= great; ++k) {
        if (k >= a.length)
          return H.ioore(a, k);
        ak = a[k];
        comp = compare.call$2(ak, el2);
        t2 = J.getInterceptor(comp);
        if (t2.$eq(comp, 0))
          continue;
        if (t2.$lt(comp, 0)) {
          if (k !== less) {
            if (less >= a.length)
              return H.ioore(a, less);
            t1.$indexSet(a, k, a[less]);
            t1.$indexSet(a, less, ak);
          }
          ++less;
        } else
          for (; true;) {
            if (great < 0 || great >= a.length)
              return H.ioore(a, great);
            comp = compare.call$2(a[great], el2);
            t2 = J.getInterceptor$n(comp);
            if (t2.$gt(comp, 0)) {
              --great;
              continue;
            } else {
              t2 = t2.$lt(comp, 0);
              t3 = a.length;
              great0 = great - 1;
              if (t2) {
                if (less >= t3)
                  return H.ioore(a, less);
                t1.$indexSet(a, k, a[less]);
                less0 = less + 1;
                if (great >= a.length)
                  return H.ioore(a, great);
                t1.$indexSet(a, less, a[great]);
                t1.$indexSet(a, great, ak);
                great = great0;
                less = less0;
                break;
              } else {
                if (great >= t3)
                  return H.ioore(a, great);
                t1.$indexSet(a, k, a[great]);
                t1.$indexSet(a, great, ak);
                great = great0;
                break;
              }
            }
          }
      }
      pivots_are_equal = true;
    } else {
      for (k = less; k <= great; ++k) {
        if (k >= a.length)
          return H.ioore(a, k);
        ak = a[k];
        if (J.$lt$n(compare.call$2(ak, el2), 0)) {
          if (k !== less) {
            if (less >= a.length)
              return H.ioore(a, less);
            t1.$indexSet(a, k, a[less]);
            t1.$indexSet(a, less, ak);
          }
          ++less;
        } else if (J.$gt$n(compare.call$2(ak, el4), 0))
          for (; true;) {
            if (great < 0 || great >= a.length)
              return H.ioore(a, great);
            if (J.$gt$n(compare.call$2(a[great], el4), 0)) {
              --great;
              if (great < k)
                break;
              continue;
            } else {
              if (great >= a.length)
                return H.ioore(a, great);
              t2 = J.$lt$n(compare.call$2(a[great], el2), 0);
              great0 = great - 1;
              t3 = a.length;
              if (t2) {
                if (less >= t3)
                  return H.ioore(a, less);
                t1.$indexSet(a, k, a[less]);
                less0 = less + 1;
                if (great >= a.length)
                  return H.ioore(a, great);
                t1.$indexSet(a, less, a[great]);
                t1.$indexSet(a, great, ak);
                great = great0;
                less = less0;
              } else {
                if (great >= t3)
                  return H.ioore(a, great);
                t1.$indexSet(a, k, a[great]);
                t1.$indexSet(a, great, ak);
                great = great0;
              }
              break;
            }
          }
      }
      pivots_are_equal = false;
    }
    t2 = less - 1;
    if (t2 >= a.length)
      return H.ioore(a, t2);
    t1.$indexSet(a, left, a[t2]);
    t1.$indexSet(a, t2, el2);
    t2 = great + 1;
    if (t2 < 0 || t2 >= a.length)
      return H.ioore(a, t2);
    t1.$indexSet(a, right, a[t2]);
    t1.$indexSet(a, t2, el4);
    H.Sort__doSort(a, left, less - 2, compare);
    H.Sort__doSort(a, great + 2, right, compare);
    if (pivots_are_equal)
      return;
    if (less < index1 && great > index5) {
      while (true) {
        if (less >= a.length)
          return H.ioore(a, less);
        if (!J.$eq(compare.call$2(a[less], el2), 0))
          break;
        ++less;
      }
      while (true) {
        if (great < 0 || great >= a.length)
          return H.ioore(a, great);
        if (!J.$eq(compare.call$2(a[great], el4), 0))
          break;
        --great;
      }
      for (k = less; k <= great; ++k) {
        if (k >= a.length)
          return H.ioore(a, k);
        ak = a[k];
        if (J.$eq(compare.call$2(ak, el2), 0)) {
          if (k !== less) {
            if (less >= a.length)
              return H.ioore(a, less);
            t1.$indexSet(a, k, a[less]);
            t1.$indexSet(a, less, ak);
          }
          ++less;
        } else if (J.$eq(compare.call$2(ak, el4), 0))
          for (; true;) {
            if (great < 0 || great >= a.length)
              return H.ioore(a, great);
            if (J.$eq(compare.call$2(a[great], el4), 0)) {
              --great;
              if (great < k)
                break;
              continue;
            } else {
              if (great >= a.length)
                return H.ioore(a, great);
              t2 = J.$lt$n(compare.call$2(a[great], el2), 0);
              great0 = great - 1;
              t3 = a.length;
              if (t2) {
                if (less >= t3)
                  return H.ioore(a, less);
                t1.$indexSet(a, k, a[less]);
                less0 = less + 1;
                if (great >= a.length)
                  return H.ioore(a, great);
                t1.$indexSet(a, less, a[great]);
                t1.$indexSet(a, great, ak);
                great = great0;
                less = less0;
              } else {
                if (great >= t3)
                  return H.ioore(a, great);
                t1.$indexSet(a, k, a[great]);
                t1.$indexSet(a, great, ak);
                great = great0;
              }
              break;
            }
          }
      }
      H.Sort__doSort(a, less, great, compare);
    } else
      H.Sort__doSort(a, less, great, compare);
  },
  Symbol_getName: function(symbol) {
    return symbol.get$__internal$_name();
  },
  ListIterable: {
    "^": "IterableBase;",
    get$iterator: function(_) {
      return new H.ListIterator(this, this.get$length(this), 0, null);
    },
    forEach$1: function(_, action) {
      var $length, i;
      $length = this.get$length(this);
      for (i = 0; i < $length; ++i) {
        action.call$1(this.elementAt$1(0, i));
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    },
    contains$1: function(_, element) {
      var $length, i;
      $length = this.get$length(this);
      for (i = 0; i < $length; ++i) {
        if (J.$eq(this.elementAt$1(0, i), element))
          return true;
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return false;
    },
    any$1: function(_, test) {
      var $length, i;
      $length = this.get$length(this);
      for (i = 0; i < $length; ++i) {
        if (test.call$1(this.elementAt$1(0, i)) === true)
          return true;
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return false;
    },
    toList$1$growable: function(_, growable) {
      var result, i, t1;
      if (growable) {
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
        C.JSArray_methods.set$length(result, this.get$length(this));
      } else
        result = H.setRuntimeTypeInfo(Array(this.get$length(this)), [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
      for (i = 0; i < this.get$length(this); ++i) {
        t1 = this.elementAt$1(0, i);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    $isEfficientLength: true
  },
  ListIterator: {
    "^": "Object;_iterable,_length,_index,_current",
    get$current: function() {
      return this._current;
    },
    moveNext$0: function() {
      var t1, t2, $length, t3;
      t1 = this._iterable;
      t2 = J.getInterceptor$asx(t1);
      $length = t2.get$length(t1);
      if (this._length !== $length)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = this._index;
      if (t3 >= $length) {
        this._current = null;
        return false;
      }
      this._current = t2.elementAt$1(t1, t3);
      this._index = this._index + 1;
      return true;
    }
  },
  MappedIterable: {
    "^": "IterableBase;_iterable,_f",
    get$iterator: function(_) {
      var t1 = this._iterable;
      t1 = new H.MappedIterator(null, t1.get$iterator(t1), this._f);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    get$length: function(_) {
      var t1 = this._iterable;
      return t1.get$length(t1);
    },
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    static: {MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
        if (!!iterable.$isEfficientLength)
          return H.setRuntimeTypeInfo(new H.EfficientLengthMappedIterable(iterable, $function), [$S, $T]);
        return H.setRuntimeTypeInfo(new H.MappedIterable(iterable, $function), [$S, $T]);
      }}
  },
  EfficientLengthMappedIterable: {
    "^": "MappedIterable;_iterable,_f",
    $isEfficientLength: true
  },
  MappedIterator: {
    "^": "Iterator;_current,_iterator,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: function() {
      var t1 = this._iterator;
      if (t1.moveNext$0()) {
        this._current = this._f$1(t1.get$current());
        return true;
      }
      this._current = null;
      return false;
    },
    get$current: function() {
      return this._current;
    }
  },
  MappedListIterable: {
    "^": "ListIterable;_source,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      return this._f$1(J.elementAt$1$ax(this._source, index));
    },
    $asListIterable: function($S, $T) {
      return [$T];
    },
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    $isEfficientLength: true
  },
  WhereIterable: {
    "^": "IterableBase;_iterable,_f",
    get$iterator: function(_) {
      var t1 = new H.WhereIterator(J.get$iterator$ax(this._iterable), this._f);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }
  },
  WhereIterator: {
    "^": "Iterator;_iterator,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: function() {
      for (var t1 = this._iterator; t1.moveNext$0();)
        if (this._f$1(t1.get$current()) === true)
          return true;
      return false;
    },
    get$current: function() {
      return this._iterator.get$current();
    }
  },
  FixedLengthListMixin: {
    "^": "Object;",
    set$length: function(receiver, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  },
  ReversedListIterable: {
    "^": "ListIterable;_source",
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      var t1, t2;
      t1 = this._source;
      t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  }
}],
["dart._js_names", "dart:_js_names", , H, {
  "^": "",
  extractKeys: function(victim) {
    var t1 = H.setRuntimeTypeInfo((function(victim, hasOwnProperty) {
  var result = [];
  for (var key in victim) {
    if (hasOwnProperty.call(victim, key)) result.push(key);
  }
  return result;
})(victim, Object.prototype.hasOwnProperty), [null]);
    t1.fixed$length = init;
    return t1;
  }
}],
["dart.async", "dart:async", , P, {
  "^": "",
  _registerErrorHandler: function(errorHandler, zone) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    if (t1) {
      zone.toString;
      return errorHandler;
    } else {
      zone.toString;
      return errorHandler;
    }
  },
  _asyncRunCallbackLoop: function() {
    var entry = $._nextCallback;
    for (; entry != null;) {
      entry.callback$0();
      entry = entry.next;
      $._nextCallback = entry;
    }
    $._lastCallback = null;
  },
  _asyncRunCallback: [function() {
    var exception;
    try {
      P._asyncRunCallbackLoop();
    } catch (exception) {
      H.unwrapException(exception);
      P._createTimer(C.Duration_0, P._asyncRunCallback$closure());
      $._nextCallback = $._nextCallback.next;
      throw exception;
    }

  }, "call$0", "_asyncRunCallback$closure", 0, 0, 0],
  _scheduleAsyncCallback: function(callback) {
    var t1, t2;
    t1 = $._lastCallback;
    if (t1 == null) {
      t1 = new P._AsyncCallbackEntry(callback, null);
      $._lastCallback = t1;
      $._nextCallback = t1;
      P._createTimer(C.Duration_0, P._asyncRunCallback$closure());
    } else {
      t2 = new P._AsyncCallbackEntry(callback, null);
      t1.next = t2;
      $._lastCallback = t2;
    }
  },
  scheduleMicrotask: function(callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone) {
      t1.toString;
      P._rootScheduleMicrotask(t1, null, t1, callback);
      return;
    }
    P._rootScheduleMicrotask(t1, null, t1, t1.bindCallback$2$runGuarded(callback, true));
  },
  StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
    return sync ? new P._NoCallbackSyncStreamController(null, 0, null) : new P._NoCallbackAsyncStreamController(null, 0, null);
  },
  _runGuarded: function(notificationHandler) {
    var result, e, s, exception, t1;
    if (notificationHandler == null)
      return;
    try {
      result = notificationHandler.call$0();
      if (!!J.getInterceptor(result).$isFuture)
        return result;
      return;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      t1 = $.Zone__current;
      t1.toString;
      P._rootHandleUncaughtError(t1, null, t1, e, s);
    }

  },
  _nullDataHandler: [function(value) {
  }, "call$1", "_nullDataHandler$closure", 2, 0, 2],
  _nullErrorHandler: [function(error, stackTrace) {
    var t1 = $.Zone__current;
    t1.toString;
    P._rootHandleUncaughtError(t1, null, t1, error, stackTrace);
  }, function(error) {
    return P._nullErrorHandler(error, null);
  }, null, "call$2", "call$1", "_nullErrorHandler$closure", 2, 2, 3, 4],
  _nullDoneHandler: [function() {
  }, "call$0", "_nullDoneHandler$closure", 0, 0, 0],
  _runUserCode: function(userCode, onSuccess, onError) {
    var e, s, exception, t1;
    try {
      onSuccess.call$1(userCode.call$0());
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      onError.call$2(e, s);
    }

  },
  _cancelAndError: function(subscription, future, error, stackTrace) {
    var cancelFuture = subscription.cancel$0();
    if (!!J.getInterceptor(cancelFuture).$isFuture)
      cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
    else
      future._completeError$2(error, stackTrace);
  },
  _cancelAndErrorClosure: function(subscription, future) {
    return new P._cancelAndErrorClosure_closure(subscription, future);
  },
  _cancelAndValue: function(subscription, future, value) {
    var cancelFuture = subscription.cancel$0();
    if (!!J.getInterceptor(cancelFuture).$isFuture)
      cancelFuture.whenComplete$1(new P._cancelAndValue_closure(future, value));
    else
      future._complete$1(value);
  },
  Timer_Timer: function(duration, callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone) {
      t1.toString;
      return P._rootCreateTimer(t1, null, t1, duration, callback);
    }
    return P._rootCreateTimer(t1, null, t1, duration, t1.bindCallback$2$runGuarded(callback, true));
  },
  _createTimer: function(duration, callback) {
    var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
    return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
  },
  Zone__enter: function(zone) {
    var previous = $.Zone__current;
    $.Zone__current = zone;
    return previous;
  },
  _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
    P._rootRun($self, null, $self, new P._rootHandleUncaughtError_closure(error, stackTrace));
  },
  _rootRun: function($self, $parent, zone, f) {
    var old, t1;
    if ($.Zone__current === zone)
      return f.call$0();
    old = P.Zone__enter(zone);
    try {
      t1 = f.call$0();
      return t1;
    } finally {
      $.Zone__current = old;
    }
  },
  _rootRunUnary: function($self, $parent, zone, f, arg) {
    var old, t1;
    if ($.Zone__current === zone)
      return f.call$1(arg);
    old = P.Zone__enter(zone);
    try {
      t1 = f.call$1(arg);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  },
  _rootRunBinary: function($self, $parent, zone, f, arg1, arg2) {
    var old, t1;
    if ($.Zone__current === zone)
      return f.call$2(arg1, arg2);
    old = P.Zone__enter(zone);
    try {
      t1 = f.call$2(arg1, arg2);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  },
  _rootScheduleMicrotask: function($self, $parent, zone, f) {
    P._scheduleAsyncCallback(C.C__RootZone !== zone ? zone.bindCallback$1(f) : f);
  },
  _rootCreateTimer: function($self, $parent, zone, duration, callback) {
    return P._createTimer(duration, C.C__RootZone !== zone ? zone.bindCallback$1(callback) : callback);
  },
  _AsyncError: {
    "^": "Object;error>,stackTrace<",
    $isError: true
  },
  _BroadcastSubscription: {
    "^": "_ControllerSubscription;_eventState,_async$_next@,_async$_previous?,_controller,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    get$_controller: function() {
      return this._controller;
    },
    _expectsEvent$1: function(eventId) {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 1) === eventId;
    },
    _onPause$0: [function() {
    }, "call$0", "get$_onPause", 0, 0, 0],
    _onResume$0: [function() {
    }, "call$0", "get$_onResume", 0, 0, 0],
    static: {"^": "_BroadcastSubscription__STATE_EVENT_ID,_BroadcastSubscription__STATE_FIRING,_BroadcastSubscription__STATE_REMOVE_AFTER_FIRING"}
  },
  _BroadcastStreamController: {
    "^": "Object;_async$_next@,_async$_previous?",
    _ensureDoneFuture$0: function() {
      var t1 = this._doneFuture;
      if (t1 != null)
        return t1;
      t1 = P._Future$(null);
      this._doneFuture = t1;
      return t1;
    },
    _removeListener$1: function(subscription) {
      var previous, next;
      previous = subscription._async$_previous;
      next = subscription._async$_next;
      previous.set$_async$_next(next);
      next.set$_async$_previous(previous);
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
    },
    _async$_subscribe$1: function(cancelOnError) {
      var t1, t2, subscription;
      if ((this._state & 4) !== 0)
        throw H.wrapException(new P.StateError("Subscribing to closed stream"));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      subscription = new P._BroadcastSubscription(null, null, null, this, null, null, null, t1, t2, null, null);
      subscription.$builtinTypeInfo = this.$builtinTypeInfo;
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
      t2 = this._async$_previous;
      subscription._async$_previous = t2;
      subscription._async$_next = this;
      t2.set$_async$_next(subscription);
      this._async$_previous = subscription;
      subscription._eventState = this._state & 1;
      if (this._async$_next === subscription)
        P._runGuarded(this._onListen);
      return subscription;
    },
    _recordCancel$1: function(subscription) {
      var t1;
      if (subscription.get$_async$_next() === subscription)
        return;
      t1 = subscription._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      if ((t1 & 2) !== 0)
        subscription._eventState = t1 | 4;
      else {
        this._removeListener$1(subscription);
        if ((this._state & 2) === 0 && this._async$_next === this)
          this._callOnCancel$0();
      }
    },
    _recordPause$1: function(subscription) {
    },
    _recordResume$1: function(subscription) {
    },
    _addEventError$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add new events after calling close");
      return new P.StateError("Cannot add new events while doing an addStream");
    },
    add$1: function(_, data) {
      if (this._state >= 4)
        throw H.wrapException(this._addEventError$0());
      this._sendData$1(data);
    },
    addError$2: function(error, stackTrace) {
      if (this._state >= 4)
        throw H.wrapException(this._addEventError$0());
      this._sendError$2(error, stackTrace);
    },
    close$0: function(_) {
      var t1, doneFuture;
      t1 = this._state;
      if ((t1 & 4) !== 0)
        return this._doneFuture;
      if (t1 >= 4)
        throw H.wrapException(this._addEventError$0());
      this._state = t1 | 4;
      doneFuture = this._ensureDoneFuture$0();
      this._sendDone$0();
      return doneFuture;
    },
    get$done: function() {
      return this._ensureDoneFuture$0();
    },
    _add$1: function(data) {
      this._sendData$1(data);
    },
    _forEachListener$1: function(action) {
      var t1, link, id, link0;
      t1 = this._state;
      if ((t1 & 2) !== 0)
        throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
      link = this._async$_next;
      if (link === this)
        return;
      id = t1 & 1;
      this._state = t1 ^ 3;
      for (; link !== this;)
        if (link._expectsEvent$1(id)) {
          t1 = link._eventState;
          if (typeof t1 !== "number")
            return t1.$or();
          link._eventState = t1 | 2;
          action.call$1(link);
          t1 = link._eventState;
          if (typeof t1 !== "number")
            return t1.$xor();
          t1 ^= 1;
          link._eventState = t1;
          link0 = link._async$_next;
          if ((t1 & 4) !== 0)
            this._removeListener$1(link);
          t1 = link._eventState;
          if (typeof t1 !== "number")
            return t1.$and();
          link._eventState = t1 & 4294967293;
          link = link0;
        } else
          link = link._async$_next;
      this._state = this._state & 4294967293;
      if (this._async$_next === this)
        this._callOnCancel$0();
    },
    _callOnCancel$0: function() {
      if ((this._state & 4) !== 0 && this._doneFuture._state === 0)
        this._doneFuture._asyncComplete$1(null);
      P._runGuarded(this._onCancel);
    }
  },
  _SyncBroadcastStreamController: {
    "^": "_BroadcastStreamController;",
    _sendData$1: function(data) {
      var t1 = this._async$_next;
      if (t1 === this)
        return;
      if (t1.get$_async$_next() === this) {
        this._state = this._state | 2;
        t1._add$1(data);
        this._state = this._state & 4294967293;
        if (this._async$_next === this)
          this._callOnCancel$0();
        return;
      }
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(this, data));
    },
    _sendError$2: function(error, stackTrace) {
      if (this._async$_next === this)
        return;
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
    },
    _sendDone$0: function() {
      if (this._async$_next !== this)
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(this));
      else
        this._doneFuture._asyncComplete$1(null);
    }
  },
  _SyncBroadcastStreamController__sendData_closure: {
    "^": "Closure;this_0,data_1",
    call$1: function(subscription) {
      subscription._add$1(this.data_1);
    },
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  _SyncBroadcastStreamController__sendError_closure: {
    "^": "Closure;this_0,error_1,stackTrace_2",
    call$1: function(subscription) {
      subscription._addError$2(this.error_1, this.stackTrace_2);
    },
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  _SyncBroadcastStreamController__sendDone_closure: {
    "^": "Closure;this_0",
    call$1: function(subscription) {
      subscription._close$0();
    },
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BroadcastSubscription", args: [[P._BroadcastSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  _AsBroadcastStreamController: {
    "^": "_SyncBroadcastStreamController;_pending,_onListen,_onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
    _addPendingEvent$1: function($event) {
      var t1 = this._pending;
      if (t1 == null) {
        t1 = new P._StreamImplEvents(null, null, 0);
        this._pending = t1;
      }
      t1.add$1(0, $event);
    },
    add$1: [function(_, data) {
      var t1 = this._state;
      if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
        this._addPendingEvent$1(new P._DelayedData(data, null));
        return;
      }
      P._BroadcastStreamController.prototype.add$1.call(this, this, data);
      while (true) {
        t1 = this._pending;
        if (!(t1 != null && t1.lastPendingEvent != null))
          break;
        t1.handleNext$1(this);
      }
    }, "call$1", "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T", void: true, args: [T]};
      }, this.$receiver, "_AsBroadcastStreamController");
    }],
    addError$2: [function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
        this._addPendingEvent$1(new P._DelayedError(error, stackTrace, null));
        return;
      }
      P._BroadcastStreamController.prototype.addError$2.call(this, error, stackTrace);
      while (true) {
        t1 = this._pending;
        if (!(t1 != null && t1.lastPendingEvent != null))
          break;
        t1.handleNext$1(this);
      }
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2", "call$1", "get$addError", 2, 2, 18, 4],
    close$0: [function(_) {
      var t1 = this._state;
      if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
        this._addPendingEvent$1(C.C__DelayedDone);
        this._state = this._state | 4;
        return P._BroadcastStreamController.prototype.get$done.call(this);
      }
      return P._BroadcastStreamController.prototype.close$0.call(this, this);
    }, "call$0", "get$close", 0, 0, 19],
    _callOnCancel$0: function() {
      var t1 = this._pending;
      if (t1 != null && t1.lastPendingEvent != null) {
        if (t1._state === 1)
          t1._state = 3;
        t1.lastPendingEvent = null;
        t1.firstPendingEvent = null;
        this._pending = null;
      }
      P._BroadcastStreamController.prototype._callOnCancel$0.call(this);
    }
  },
  Future: {
    "^": "Object;",
    $isFuture: true
  },
  _Future: {
    "^": "Object;_state,_zone<,_resultOrListeners,_nextListener<,_onValueCallback,_errorTestCallback,_onErrorCallback,_whenCompleteActionCallback",
    get$_isComplete: function() {
      return this._state >= 4;
    },
    get$_hasValue: function() {
      return this._state === 4;
    },
    get$_hasError: function() {
      return this._state === 8;
    },
    set$_isChained: function(value) {
      if (value)
        this._state = 2;
      else
        this._state = 0;
    },
    then$2$onError: function(f, onError) {
      var t1, result;
      t1 = $.Zone__current;
      t1.toString;
      result = H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, f, null, P._registerErrorHandler(onError, t1), null), [null]);
      this._addListener$1(result);
      return result;
    },
    whenComplete$1: function(action) {
      var t1, result;
      t1 = $.Zone__current;
      t1.toString;
      result = new P._Future(0, t1, null, null, null, null, null, action);
      result.$builtinTypeInfo = this.$builtinTypeInfo;
      this._addListener$1(result);
      return result;
    },
    get$_value: function() {
      return this._resultOrListeners;
    },
    get$_error: function() {
      return this._resultOrListeners;
    },
    _setValue$1: function(value) {
      this._state = 4;
      this._resultOrListeners = value;
    },
    _setError$2: function(error, stackTrace) {
      this._state = 8;
      this._resultOrListeners = new P._AsyncError(error, stackTrace);
    },
    _addListener$1: function(listener) {
      var t1;
      if (this._state >= 4) {
        t1 = this._zone;
        t1.toString;
        P._rootScheduleMicrotask(t1, null, t1, new P._Future__addListener_closure(this, listener));
      } else {
        listener._nextListener = this._resultOrListeners;
        this._resultOrListeners = listener;
      }
    },
    _removeListeners$0: function() {
      var current, prev, next;
      current = this._resultOrListeners;
      this._resultOrListeners = null;
      for (prev = null; current != null; prev = current, current = next) {
        next = current.get$_nextListener();
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1: function(value) {
      var t1, listeners;
      t1 = J.getInterceptor(value);
      if (!!t1.$isFuture)
        if (!!t1.$is_Future)
          P._Future__chainCoreFuture(value, this);
        else
          P._Future__chainForeignFuture(value, this);
      else {
        listeners = this._removeListeners$0();
        this._setValue$1(value);
        P._Future__propagateToListeners(this, listeners);
      }
    },
    _completeWithValue$1: function(value) {
      var listeners = this._removeListeners$0();
      this._setValue$1(value);
      P._Future__propagateToListeners(this, listeners);
    },
    _completeError$2: [function(error, stackTrace) {
      var listeners = this._removeListeners$0();
      this._setError$2(error, stackTrace);
      P._Future__propagateToListeners(this, listeners);
    }, function(error) {
      return this._completeError$2(error, null);
    }, "_completeError$1", "call$2", "call$1", "get$_completeError", 2, 2, 3, 4],
    _asyncComplete$1: function(value) {
      var t1;
      if (this._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      this._state = 1;
      t1 = this._zone;
      t1.toString;
      P._rootScheduleMicrotask(t1, null, t1, new P._Future__asyncComplete_closure(this, value));
    },
    $is_Future: true,
    $isFuture: true,
    static: {"^": "_Future__INCOMPLETE,_Future__PENDING_COMPLETE,_Future__CHAINED,_Future__VALUE,_Future__ERROR", _Future$: function($T) {
        return H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [$T]);
      }, _Future__chainForeignFuture: function(source, target) {
        target._state = 2;
        source.then$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target));
      }, _Future__chainCoreFuture: function(source, target) {
        target._state = 2;
        if (source._state >= 4)
          P._Future__propagateToListeners(source, target);
        else
          source._addListener$1(target);
      }, _Future__propagateMultipleListeners: function(source, listeners) {
        var listeners0;
        do {
          listeners0 = listeners.get$_nextListener();
          listeners._nextListener = null;
          P._Future__propagateToListeners(source, listeners);
          if (listeners0 != null) {
            listeners = listeners0;
            continue;
          } else
            break;
        } while (true);
      }, _Future__propagateToListeners: function(source, listeners) {
        var t1, t2, t3, hasError, asyncError, t4, sourceValue, t5, zone, oldZone, chainSource, listeners0;
        t1 = {};
        t1.source_4 = source;
        for (t2 = source; true;) {
          t3 = {};
          if (!t2.get$_isComplete())
            return;
          hasError = t1.source_4.get$_hasError();
          if (hasError && listeners == null) {
            t2 = t1.source_4;
            asyncError = t2.get$_error();
            t2 = t2._zone;
            t3 = J.get$error$x(asyncError);
            t4 = asyncError.get$stackTrace();
            t2.toString;
            P._rootHandleUncaughtError(t2, null, t2, t3, t4);
            return;
          }
          if (listeners == null)
            return;
          if (listeners._nextListener != null) {
            P._Future__propagateMultipleListeners(t1.source_4, listeners);
            return;
          }
          t3.listenerHasValue_1 = true;
          sourceValue = t1.source_4.get$_hasValue() ? t1.source_4.get$_value() : null;
          t3.listenerValueOrError_2 = sourceValue;
          t3.isPropagationAborted_3 = false;
          t2 = !hasError;
          if (t2) {
            t4 = listeners._state === 2;
            if ((t4 ? null : listeners._onValueCallback) == null) {
              t5 = (t4 ? null : listeners._whenCompleteActionCallback) != null;
              t4 = t5;
            } else
              t4 = true;
          } else
            t4 = true;
          if (t4) {
            zone = listeners._zone;
            if (hasError) {
              t4 = t1.source_4.get$_zone();
              t4.toString;
              zone.toString;
              t4 = zone == null ? t4 != null : zone !== t4;
            } else
              t4 = false;
            if (t4) {
              t2 = t1.source_4;
              asyncError = t2.get$_error();
              t2 = t2._zone;
              t3 = J.get$error$x(asyncError);
              t4 = asyncError.get$stackTrace();
              t2.toString;
              P._rootHandleUncaughtError(t2, null, t2, t3, t4);
              return;
            }
            oldZone = $.Zone__current;
            if (oldZone == null ? zone != null : oldZone !== zone)
              $.Zone__current = zone;
            else
              oldZone = null;
            if (t2) {
              if ((listeners._state === 2 ? null : listeners._onValueCallback) != null)
                t3.listenerHasValue_1 = new P._Future__propagateToListeners_handleValueCallback(t3, listeners, sourceValue, zone).call$0();
            } else
              new P._Future__propagateToListeners_handleError(t1, t3, listeners, zone).call$0();
            if ((listeners._state === 2 ? null : listeners._whenCompleteActionCallback) != null)
              new P._Future__propagateToListeners_handleWhenCompleteCallback(t1, t3, hasError, listeners, zone).call$0();
            if (oldZone != null)
              $.Zone__current = oldZone;
            if (t3.isPropagationAborted_3)
              return;
            if (t3.listenerHasValue_1 === true) {
              t2 = t3.listenerValueOrError_2;
              t2 = (sourceValue == null ? t2 != null : sourceValue !== t2) && !!J.getInterceptor(t2).$isFuture;
            } else
              t2 = false;
            if (t2) {
              chainSource = t3.listenerValueOrError_2;
              if (!!J.getInterceptor(chainSource).$is_Future)
                if (chainSource._state >= 4) {
                  listeners._state = 2;
                  t1.source_4 = chainSource;
                  t2 = chainSource;
                  continue;
                } else
                  P._Future__chainCoreFuture(chainSource, listeners);
              else
                P._Future__chainForeignFuture(chainSource, listeners);
              return;
            }
          }
          if (t3.listenerHasValue_1 === true) {
            listeners0 = listeners._removeListeners$0();
            t2 = t3.listenerValueOrError_2;
            listeners._state = 4;
            listeners._resultOrListeners = t2;
          } else {
            listeners0 = listeners._removeListeners$0();
            asyncError = t3.listenerValueOrError_2;
            t2 = J.get$error$x(asyncError);
            t3 = asyncError.get$stackTrace();
            listeners._state = 8;
            listeners._resultOrListeners = new P._AsyncError(t2, t3);
          }
          t1.source_4 = listeners;
          t2 = listeners;
          listeners = listeners0;
        }
      }}
  },
  _Future__addListener_closure: {
    "^": "Closure:16;this_0,listener_1",
    call$0: function() {
      P._Future__propagateToListeners(this.this_0, this.listener_1);
    }
  },
  _Future__chainForeignFuture_closure: {
    "^": "Closure:14;target_0",
    call$1: function(value) {
      this.target_0._completeWithValue$1(value);
    }
  },
  _Future__chainForeignFuture_closure0: {
    "^": "Closure:20;target_1",
    call$2: function(error, stackTrace) {
      this.target_1._completeError$2(error, stackTrace);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    }
  },
  _Future__asyncComplete_closure0: {
    "^": "Closure:16;this_0,coreFuture_1",
    call$0: function() {
      P._Future__chainCoreFuture(this.coreFuture_1, this.this_0);
    }
  },
  _Future__asyncComplete_closure: {
    "^": "Closure:16;this_2,value_3",
    call$0: function() {
      this.this_2._completeWithValue$1(this.value_3);
    }
  },
  _Future__propagateToListeners_handleValueCallback: {
    "^": "Closure:21;box_1,listener_3,sourceValue_4,zone_5",
    call$0: function() {
      var e, s, t1, t2, exception;
      try {
        t1 = this.zone_5;
        t2 = this.listener_3;
        t2 = t2._state === 2 ? null : t2._onValueCallback;
        t1.toString;
        this.box_1.listenerValueOrError_2 = P._rootRunUnary(t1, null, t1, t2, this.sourceValue_4);
        return true;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        this.box_1.listenerValueOrError_2 = new P._AsyncError(e, s);
        return false;
      }

    }
  },
  _Future__propagateToListeners_handleError: {
    "^": "Closure:0;box_2,box_1,listener_6,zone_7",
    call$0: function() {
      var asyncError, test, matchesTest, e, s, errorCallback, e0, s0, t1, t2, t3, exception, listenerValueOrError, t4;
      asyncError = this.box_2.source_4.get$_error();
      t1 = this.listener_6;
      test = t1._state === 2 ? null : t1._errorTestCallback;
      matchesTest = true;
      if (test != null)
        try {
          t2 = this.zone_7;
          t3 = J.get$error$x(asyncError);
          t2.toString;
          matchesTest = P._rootRunUnary(t2, null, t2, test, t3);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = new H._StackTrace(exception, null);
          t1 = J.get$error$x(asyncError);
          t2 = e;
          listenerValueOrError = (t1 == null ? t2 == null : t1 === t2) ? asyncError : new P._AsyncError(e, s);
          t1 = this.box_1;
          t1.listenerValueOrError_2 = listenerValueOrError;
          t1.listenerHasValue_1 = false;
          return;
        }

      errorCallback = t1._state === 2 ? null : t1._onErrorCallback;
      if (matchesTest === true && errorCallback != null) {
        try {
          t1 = errorCallback;
          t2 = H.getDynamicRuntimeType();
          t2 = H.buildFunctionType(t2, [t2, t2])._isTest$1(t1);
          t3 = this.zone_7;
          t4 = this.box_1;
          if (t2) {
            t1 = J.get$error$x(asyncError);
            t2 = asyncError.get$stackTrace();
            t3.toString;
            t4.listenerValueOrError_2 = P._rootRunBinary(t3, null, t3, errorCallback, t1, t2);
          } else {
            t1 = J.get$error$x(asyncError);
            t3.toString;
            t4.listenerValueOrError_2 = P._rootRunUnary(t3, null, t3, errorCallback, t1);
          }
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e0 = t1;
          s0 = new H._StackTrace(exception, null);
          t1 = J.get$error$x(asyncError);
          t2 = e0;
          listenerValueOrError = (t1 == null ? t2 == null : t1 === t2) ? asyncError : new P._AsyncError(e0, s0);
          t1 = this.box_1;
          t1.listenerValueOrError_2 = listenerValueOrError;
          t1.listenerHasValue_1 = false;
          return;
        }

        this.box_1.listenerHasValue_1 = true;
      } else {
        t1 = this.box_1;
        t1.listenerValueOrError_2 = asyncError;
        t1.listenerHasValue_1 = false;
      }
    }
  },
  _Future__propagateToListeners_handleWhenCompleteCallback: {
    "^": "Closure:0;box_2,box_1,hasError_8,listener_9,zone_10",
    call$0: function() {
      var t1, e, s, t2, t3, exception;
      t1 = {};
      t1.completeResult_0 = null;
      try {
        t2 = this.zone_10;
        t3 = this.listener_9;
        t3 = t3._state === 2 ? null : t3._whenCompleteActionCallback;
        t2.toString;
        t1.completeResult_0 = P._rootRun(t2, null, t2, t3);
      } catch (exception) {
        t2 = H.unwrapException(exception);
        e = t2;
        s = new H._StackTrace(exception, null);
        if (this.hasError_8) {
          t2 = J.get$error$x(this.box_2.source_4.get$_error());
          t3 = e;
          t3 = t2 == null ? t3 == null : t2 === t3;
          t2 = t3;
        } else
          t2 = false;
        t3 = this.box_1;
        if (t2)
          t3.listenerValueOrError_2 = this.box_2.source_4.get$_error();
        else
          t3.listenerValueOrError_2 = new P._AsyncError(e, s);
        t3.listenerHasValue_1 = false;
      }

      if (!!J.getInterceptor(t1.completeResult_0).$isFuture) {
        t2 = this.listener_9;
        t2.set$_isChained(true);
        this.box_1.isPropagationAborted_3 = true;
        t1.completeResult_0.then$2$onError(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(this.box_2, t2), new P._Future__propagateToListeners_handleWhenCompleteCallback_closure0(t1, t2));
      }
    }
  },
  _Future__propagateToListeners_handleWhenCompleteCallback_closure: {
    "^": "Closure:14;box_2,listener_11",
    call$1: function(ignored) {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_11);
    }
  },
  _Future__propagateToListeners_handleWhenCompleteCallback_closure0: {
    "^": "Closure:20;box_0,listener_12",
    call$2: function(error, stackTrace) {
      var t1, completeResult;
      t1 = this.box_0;
      if (!J.getInterceptor(t1.completeResult_0).$is_Future) {
        completeResult = P._Future$(null);
        t1.completeResult_0 = completeResult;
        completeResult._setError$2(error, stackTrace);
      }
      P._Future__propagateToListeners(t1.completeResult_0, this.listener_12);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    }
  },
  _AsyncCallbackEntry: {
    "^": "Object;callback,next",
    callback$0: function() {
      return this.callback.call$0();
    }
  },
  Stream: {
    "^": "Object;",
    get$isBroadcast: function() {
      return false;
    },
    asBroadcastStream$2$onCancel$onListen: function(onCancel, onListen) {
      var t1, t2;
      if (this.get$isBroadcast())
        return this;
      t1 = H.getRuntimeTypeArgument(this, "Stream", 0);
      t2 = $.Zone__current;
      t2.toString;
      t2 = H.setRuntimeTypeInfo(new P._AsBroadcastStream(this, onListen, onCancel, t2, null, null), [t1]);
      t2._AsBroadcastStream$3(this, onListen, onCancel, t1);
      return t2;
    },
    asBroadcastStream$0: function() {
      return this.asBroadcastStream$2$onCancel$onListen(null, null);
    },
    contains$1: function(_, needle) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_contains_closure(t1, this, needle, future), true, new P.Stream_contains_closure0(future), future.get$_completeError());
      return future;
    },
    forEach$1: function(_, action) {
      var t1, future;
      t1 = {};
      future = P._Future$(null);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
      return future;
    },
    any$1: function(_, test) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_any_closure(t1, this, test, future), true, new P.Stream_any_closure0(future), future.get$_completeError());
      return future;
    },
    get$length: function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSInt);
      t1.count_0 = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  },
  Stream_contains_closure: {
    "^": "Closure;box_0,this_1,needle_2,future_3",
    call$1: function(element) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_contains__closure(this.needle_2, element), new P.Stream_contains__closure0(t1, t2), P._cancelAndErrorClosure(t1.subscription_0, t2));
    },
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_contains__closure: {
    "^": "Closure:16;needle_4,element_5",
    call$0: function() {
      return J.$eq(this.element_5, this.needle_4);
    }
  },
  Stream_contains__closure0: {
    "^": "Closure:22;box_0,future_6",
    call$1: function(isMatch) {
      if (isMatch === true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, true);
    }
  },
  Stream_contains_closure0: {
    "^": "Closure:16;future_7",
    call$0: function() {
      this.future_7._complete$1(false);
    }
  },
  Stream_forEach_closure: {
    "^": "Closure;box_0,this_1,action_2,future_3",
    call$1: function(element) {
      P._runUserCode(new P.Stream_forEach__closure(this.action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this.box_0.subscription_0, this.future_3));
    },
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_forEach__closure: {
    "^": "Closure:16;action_4,element_5",
    call$0: function() {
      return this.action_4.call$1(this.element_5);
    }
  },
  Stream_forEach__closure0: {
    "^": "Closure:14;",
    call$1: function(_) {
    }
  },
  Stream_forEach_closure0: {
    "^": "Closure:16;future_6",
    call$0: function() {
      this.future_6._complete$1(null);
    }
  },
  Stream_any_closure: {
    "^": "Closure;box_0,this_1,test_2,future_3",
    call$1: function(element) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_any__closure(this.test_2, element), new P.Stream_any__closure0(t1, t2), P._cancelAndErrorClosure(t1.subscription_0, t2));
    },
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_any__closure: {
    "^": "Closure:16;test_4,element_5",
    call$0: function() {
      return this.test_4.call$1(this.element_5);
    }
  },
  Stream_any__closure0: {
    "^": "Closure:22;box_0,future_6",
    call$1: function(isMatch) {
      if (isMatch === true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, true);
    }
  },
  Stream_any_closure0: {
    "^": "Closure:16;future_7",
    call$0: function() {
      this.future_7._complete$1(false);
    }
  },
  Stream_length_closure: {
    "^": "Closure:14;box_0",
    call$1: function(_) {
      var t1 = this.box_0;
      t1.count_0 = t1.count_0 + 1;
    }
  },
  Stream_length_closure0: {
    "^": "Closure:16;box_0,future_1",
    call$0: function() {
      this.future_1._complete$1(this.box_0.count_0);
    }
  },
  StreamSubscription: {
    "^": "Object;"
  },
  _StreamController: {
    "^": "Object;",
    get$_pendingEvents: function() {
      if ((this._state & 8) === 0)
        return this._varData;
      return this._varData.get$varData();
    },
    _ensurePendingEvents$0: function() {
      if ((this._state & 8) === 0) {
        var t1 = this._varData;
        if (t1 == null) {
          t1 = new P._StreamImplEvents(null, null, 0);
          this._varData = t1;
        }
        return t1;
      }
      t1 = this._varData.get$varData();
      return t1;
    },
    get$_subscription: function() {
      if ((this._state & 8) !== 0)
        return this._varData.get$varData();
      return this._varData;
    },
    _badEventState$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    },
    add$1: function(_, value) {
      if (this._state >= 4)
        throw H.wrapException(this._badEventState$0());
      this._add$1(value);
    },
    _add$1: function(value) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendData$1(value);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new P._DelayedData(value, null));
    },
    _async$_subscribe$1: function(cancelOnError) {
      var t1, t2, subscription, pendingEvents, addState;
      if ((this._state & 3) !== 0)
        throw H.wrapException(new P.StateError("Stream has already been listened to."));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      subscription = H.setRuntimeTypeInfo(new P._ControllerSubscription(this, null, null, null, t1, t2, null, null), [null]);
      pendingEvents = this.get$_pendingEvents();
      t2 = this._state | 1;
      this._state = t2;
      if ((t2 & 8) !== 0) {
        addState = this._varData;
        addState.set$varData(subscription);
        addState.resume$0();
      } else
        this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
      return subscription;
    },
    _recordCancel$1: function(subscription) {
      var t1, future;
      if ((this._state & 8) !== 0)
        this._varData.cancel$0();
      this._varData = null;
      this._state = this._state & 4294967286 | 2;
      t1 = new P._StreamController__recordCancel_complete(this);
      future = P._runGuarded(this.get$_onCancel());
      if (future != null)
        future = future.whenComplete$1(t1);
      else
        t1.call$0();
      return future;
    },
    _recordPause$1: function(subscription) {
      if ((this._state & 8) !== 0)
        this._varData.pause$0(0);
      P._runGuarded(this.get$_onPause());
    },
    _recordResume$1: function(subscription) {
      if ((this._state & 8) !== 0)
        this._varData.resume$0();
      P._runGuarded(this.get$_onResume());
    }
  },
  _StreamController__subscribe_closure: {
    "^": "Closure:16;this_0",
    call$0: function() {
      P._runGuarded(this.this_0.get$_onListen());
    }
  },
  _StreamController__recordCancel_complete: {
    "^": "Closure:0;this_0",
    call$0: function() {
      var t1 = this.this_0._doneFuture;
      if (t1 != null && t1._state === 0)
        t1._asyncComplete$1(null);
    }
  },
  _SyncStreamControllerDispatch: {
    "^": "Object;",
    _sendData$1: function(data) {
      this.get$_subscription()._add$1(data);
    }
  },
  _AsyncStreamControllerDispatch: {
    "^": "Object;",
    _sendData$1: function(data) {
      this.get$_subscription()._addPending$1(new P._DelayedData(data, null));
    }
  },
  _NoCallbacks: {
    "^": "Object;",
    get$_onListen: function() {
      return;
    },
    get$_onPause: function() {
      return;
    },
    get$_onResume: function() {
      return;
    },
    get$_onCancel: function() {
      return;
    }
  },
  _NoCallbackAsyncStreamController: {
    "^": "_StreamController__AsyncStreamControllerDispatch+_NoCallbacks;_varData,_state,_doneFuture"
  },
  _StreamController__AsyncStreamControllerDispatch: {
    "^": "_StreamController+_AsyncStreamControllerDispatch;",
    $as_StreamController: function() {
      return [null];
    }
  },
  _NoCallbackSyncStreamController: {
    "^": "_StreamController__SyncStreamControllerDispatch+_NoCallbacks;_varData,_state,_doneFuture"
  },
  _StreamController__SyncStreamControllerDispatch: {
    "^": "_StreamController+_SyncStreamControllerDispatch;",
    $as_StreamController: function() {
      return [null];
    }
  },
  _ControllerStream: {
    "^": "_StreamImpl;_controller",
    _createSubscription$1: function(cancelOnError) {
      return this._controller._async$_subscribe$1(cancelOnError);
    },
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!J.getInterceptor(other).$is_ControllerStream)
        return false;
      return other._controller === this._controller;
    },
    $is_ControllerStream: true
  },
  _ControllerSubscription: {
    "^": "_BufferingStreamSubscription;_controller<,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    _onCancel$0: function() {
      return this.get$_controller()._recordCancel$1(this);
    },
    _onPause$0: [function() {
      this.get$_controller()._recordPause$1(this);
    }, "call$0", "get$_onPause", 0, 0, 0],
    _onResume$0: [function() {
      this.get$_controller()._recordResume$1(this);
    }, "call$0", "get$_onResume", 0, 0, 0]
  },
  _EventSink: {
    "^": "Object;"
  },
  _BufferingStreamSubscription: {
    "^": "Object;_async$_onData,_onError,_onDone,_zone<,_state,_cancelFuture,_pending",
    _setPendingEvents$1: function(pendingEvents) {
      if (pendingEvents == null)
        return;
      this._pending = pendingEvents;
      if (!pendingEvents.get$isEmpty(pendingEvents)) {
        this._state = (this._state | 64) >>> 0;
        pendingEvents.schedule$1(this);
      }
    },
    onData$1: function(handleData) {
      this._zone.toString;
      this._async$_onData = handleData;
    },
    onError$1: function(_, handleError) {
      if (handleError == null)
        handleError = P._nullErrorHandler$closure();
      this._onError = P._registerErrorHandler(handleError, this._zone);
    },
    onDone$1: function(handleDone) {
      if (handleDone == null)
        handleDone = P._nullDoneHandler$closure();
      this._zone.toString;
      this._onDone = handleDone;
    },
    pause$1: function(_, resumeSignal) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      this._state = (t1 + 128 | 4) >>> 0;
      if (t1 < 128 && this._pending != null)
        this._pending.cancelSchedule$0();
      if ((t1 & 4) === 0 && (this._state & 32) === 0)
        this._guardCallback$1(this.get$_onPause());
    },
    pause$0: function($receiver) {
      return this.pause$1($receiver, null);
    },
    resume$0: function() {
      var t1, t2;
      t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 -= 128;
        this._state = t1;
        if (t1 < 128) {
          if ((t1 & 64) !== 0) {
            t2 = this._pending;
            t2 = !t2.get$isEmpty(t2);
          } else
            t2 = false;
          if (t2)
            this._pending.schedule$1(this);
          else {
            t1 = (t1 & 4294967291) >>> 0;
            this._state = t1;
            if ((t1 & 32) === 0)
              this._guardCallback$1(this.get$_onResume());
          }
        }
      }
    },
    cancel$0: function() {
      var t1 = (this._state & 4294967279) >>> 0;
      this._state = t1;
      if ((t1 & 8) !== 0)
        return this._cancelFuture;
      this._cancel$0();
      return this._cancelFuture;
    },
    _cancel$0: function() {
      var t1 = (this._state | 8) >>> 0;
      this._state = t1;
      if ((t1 & 64) !== 0)
        this._pending.cancelSchedule$0();
      if ((this._state & 32) === 0)
        this._pending = null;
      this._cancelFuture = this._onCancel$0();
    },
    _add$1: function(data) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendData$1(data);
      else
        this._addPending$1(new P._DelayedData(data, null));
    },
    _addError$2: function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new P._DelayedError(error, stackTrace, null));
    },
    _close$0: function() {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      this._state = t1;
      if (t1 < 32)
        this._sendDone$0();
      else
        this._addPending$1(C.C__DelayedDone);
    },
    _onPause$0: [function() {
    }, "call$0", "get$_onPause", 0, 0, 0],
    _onResume$0: [function() {
    }, "call$0", "get$_onResume", 0, 0, 0],
    _onCancel$0: function() {
    },
    _addPending$1: function($event) {
      var pending, t1;
      pending = this._pending;
      if (pending == null) {
        pending = new P._StreamImplEvents(null, null, 0);
        this._pending = pending;
      }
      pending.add$1(0, $event);
      t1 = this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        this._state = t1;
        if (t1 < 128)
          this._pending.schedule$1(this);
      }
    },
    _sendData$1: function(data) {
      var t1 = this._state;
      this._state = (t1 | 32) >>> 0;
      this._zone.runUnaryGuarded$2(this._async$_onData, data);
      this._state = (this._state & 4294967263) >>> 0;
      this._checkState$1((t1 & 4) !== 0);
    },
    _sendError$2: function(error, stackTrace) {
      var t1, t2;
      t1 = this._state;
      t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        this._state = (t1 | 16) >>> 0;
        this._cancel$0();
        t1 = this._cancelFuture;
        if (!!J.getInterceptor(t1).$isFuture)
          t1.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        this._checkState$1((t1 & 4) !== 0);
      }
    },
    _sendDone$0: function() {
      var t1, t2;
      t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
      this._cancel$0();
      this._state = (this._state | 16) >>> 0;
      t2 = this._cancelFuture;
      if (!!J.getInterceptor(t2).$isFuture)
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1: function(callback) {
      var t1 = this._state;
      this._state = (t1 | 32) >>> 0;
      callback.call$0();
      this._state = (this._state & 4294967263) >>> 0;
      this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1: function(wasInputPaused) {
      var t1, t2, isInputPaused;
      t1 = this._state;
      if ((t1 & 64) !== 0) {
        t2 = this._pending;
        t2 = t2.get$isEmpty(t2);
      } else
        t2 = false;
      if (t2) {
        t1 = (t1 & 4294967231) >>> 0;
        this._state = t1;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t2 = this._pending;
            t2 = t2 == null || t2.get$isEmpty(t2);
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t1 = (t1 & 4294967291) >>> 0;
          this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          this._onPause$0();
        else
          this._onResume$0();
        t1 = (this._state & 4294967263) >>> 0;
        this._state = t1;
      }
      if ((t1 & 64) !== 0 && t1 < 128)
        this._pending.schedule$1(this);
    },
    static: {"^": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR,_BufferingStreamSubscription__STATE_CLOSED,_BufferingStreamSubscription__STATE_INPUT_PAUSED,_BufferingStreamSubscription__STATE_CANCELED,_BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL,_BufferingStreamSubscription__STATE_IN_CALLBACK,_BufferingStreamSubscription__STATE_HAS_PENDING,_BufferingStreamSubscription__STATE_PAUSE_COUNT,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT"}
  },
  _BufferingStreamSubscription__sendError_sendError: {
    "^": "Closure:0;this_0,error_1,stackTrace_2",
    call$0: function() {
      var t1, t2, t3, t4, t5;
      t1 = this.this_0;
      t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 32) >>> 0;
      t2 = t1._zone;
      t3 = $.Zone__current;
      t2.toString;
      t3.toString;
      if (t3 == null ? t2 != null : t3 !== t2)
        P._rootHandleUncaughtError(t3, null, t3, this.error_1, this.stackTrace_2);
      else {
        t3 = t1._onError;
        t4 = H.getDynamicRuntimeType();
        t4 = H.buildFunctionType(t4, [t4, t4])._isTest$1(t3);
        t5 = this.error_1;
        if (t4)
          t2.runBinaryGuarded$3(t3, t5, this.stackTrace_2);
        else
          t2.runUnaryGuarded$2(t3, t5);
      }
      t1._state = (t1._state & 4294967263) >>> 0;
    }
  },
  _BufferingStreamSubscription__sendDone_sendDone: {
    "^": "Closure:0;this_0",
    call$0: function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    }
  },
  _StreamImpl: {
    "^": "Stream;",
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var subscription = this._createSubscription$1(true === cancelOnError);
      subscription.onData$1(onData);
      subscription.onError$1(0, onError);
      subscription.onDone$1(onDone);
      return subscription;
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    _createSubscription$1: function(cancelOnError) {
      var t1, t2;
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      return new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null);
    }
  },
  _DelayedEvent: {
    "^": "Object;next@"
  },
  _DelayedData: {
    "^": "_DelayedEvent;value,next",
    perform$1: function(dispatch) {
      dispatch._sendData$1(this.value);
    }
  },
  _DelayedError: {
    "^": "_DelayedEvent;error>,stackTrace<,next",
    perform$1: function(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }
  },
  _DelayedDone: {
    "^": "Object;",
    perform$1: function(dispatch) {
      dispatch._sendDone$0();
    },
    get$next: function() {
      return;
    },
    set$next: function(_) {
      throw H.wrapException(new P.StateError("No events after a done."));
    }
  },
  _PendingEvents: {
    "^": "Object;",
    schedule$1: function(dispatch) {
      var t1 = this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
      this._state = 1;
    },
    cancelSchedule$0: function() {
      if (this._state === 1)
        this._state = 3;
    }
  },
  _PendingEvents_schedule_closure: {
    "^": "Closure:16;this_0,dispatch_1",
    call$0: function() {
      var t1, oldState;
      t1 = this.this_0;
      oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch_1);
    }
  },
  _StreamImplEvents: {
    "^": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
    get$isEmpty: function(_) {
      return this.lastPendingEvent == null;
    },
    add$1: function(_, $event) {
      var t1 = this.lastPendingEvent;
      if (t1 == null) {
        this.lastPendingEvent = $event;
        this.firstPendingEvent = $event;
      } else {
        t1.set$next($event);
        this.lastPendingEvent = $event;
      }
    },
    handleNext$1: function(dispatch) {
      var $event, t1;
      $event = this.firstPendingEvent;
      t1 = $event.get$next();
      this.firstPendingEvent = t1;
      if (t1 == null)
        this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }
  },
  _DummyStreamSubscription: {
    "^": "Object;_pauseCounter",
    cancel$0: function() {
      return;
    }
  },
  _AsBroadcastStream: {
    "^": "Stream;_async$_source,_onListenHandler,_onCancelHandler,_zone<,_controller,_subscription",
    get$isBroadcast: function() {
      return true;
    },
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1, t2, t3, result;
      t1 = this._controller;
      if (t1 == null)
        return new P._DummyStreamSubscription(0);
      if (this._subscription == null) {
        t1 = t1.get$add(t1);
        t2 = this._controller.get$addError();
        t3 = this._controller;
        this._subscription = this._async$_source.listen$3$onDone$onError(t1, t3.get$close(t3), t2);
      }
      result = this._controller._async$_subscribe$1(true === cancelOnError);
      result.onData$1(onData);
      result.onError$1(0, onError);
      result.onDone$1(onDone);
      return result;
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    _onCancel$0: [function() {
      var t1, shutdown, t2;
      t1 = this._controller;
      shutdown = t1 == null || (t1._state & 4) !== 0;
      t1 = this._onCancelHandler;
      if (t1 != null) {
        t2 = this._zone;
        t2.toString;
        P._rootRunUnary(t2, null, t2, t1, new P._BroadcastSubscriptionWrapper(this));
      }
      if (shutdown) {
        t1 = this._subscription;
        if (t1 != null) {
          t1.cancel$0();
          this._subscription = null;
        }
      }
    }, "call$0", "get$_onCancel", 0, 0, 0],
    _onListen$0: [function() {
      var t1, t2;
      t1 = this._onListenHandler;
      if (t1 != null) {
        t2 = this._zone;
        t2.toString;
        P._rootRunUnary(t2, null, t2, t1, new P._BroadcastSubscriptionWrapper(this));
      }
    }, "call$0", "get$_onListen", 0, 0, 0],
    _async$_cancelSubscription$0: function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      this._subscription = null;
      this._controller = null;
      t1.cancel$0();
    },
    _AsBroadcastStream$3: function(_source, onListenHandler, onCancelHandler, $T) {
      var t1 = H.setRuntimeTypeInfo(new P._AsBroadcastStreamController(null, this.get$_onListen(), this.get$_onCancel(), 0, null, null, null, null), [$T]);
      t1._async$_previous = t1;
      t1._async$_next = t1;
      this._controller = t1;
    }
  },
  _BroadcastSubscriptionWrapper: {
    "^": "Object;_stream",
    cancel$0: function() {
      this._stream._async$_cancelSubscription$0();
      return;
    }
  },
  _cancelAndError_closure: {
    "^": "Closure:16;future_0,error_1,stackTrace_2",
    call$0: function() {
      return this.future_0._completeError$2(this.error_1, this.stackTrace_2);
    }
  },
  _cancelAndErrorClosure_closure: {
    "^": "Closure:23;subscription_0,future_1",
    call$2: function(error, stackTrace) {
      return P._cancelAndError(this.subscription_0, this.future_1, error, stackTrace);
    }
  },
  _cancelAndValue_closure: {
    "^": "Closure:16;future_0,value_1",
    call$0: function() {
      return this.future_0._complete$1(this.value_1);
    }
  },
  _BaseZone: {
    "^": "Object;",
    runGuarded$1: function(f) {
      var e, s, t1, exception;
      try {
        t1 = this.run$1(f);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    },
    runUnaryGuarded$2: function(f, arg) {
      var e, s, t1, exception;
      try {
        t1 = this.runUnary$2(f, arg);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    },
    runBinaryGuarded$3: function(f, arg1, arg2) {
      var e, s, t1, exception;
      try {
        t1 = this.runBinary$3(f, arg1, arg2);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    },
    bindCallback$2$runGuarded: function(f, runGuarded) {
      var registered = this.registerCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindCallback_closure(this, registered);
      else
        return new P._BaseZone_bindCallback_closure0(this, registered);
    },
    bindCallback$1: function(f) {
      return this.bindCallback$2$runGuarded(f, true);
    },
    bindUnaryCallback$2$runGuarded: function(f, runGuarded) {
      var registered = this.registerUnaryCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindUnaryCallback_closure(this, registered);
      else
        return new P._BaseZone_bindUnaryCallback_closure0(this, registered);
    }
  },
  _BaseZone_bindCallback_closure: {
    "^": "Closure:16;this_0,registered_1",
    call$0: function() {
      return this.this_0.runGuarded$1(this.registered_1);
    }
  },
  _BaseZone_bindCallback_closure0: {
    "^": "Closure:16;this_2,registered_3",
    call$0: function() {
      return this.this_2.run$1(this.registered_3);
    }
  },
  _BaseZone_bindUnaryCallback_closure: {
    "^": "Closure:14;this_0,registered_1",
    call$1: function(arg) {
      return this.this_0.runUnaryGuarded$2(this.registered_1, arg);
    }
  },
  _BaseZone_bindUnaryCallback_closure0: {
    "^": "Closure:14;this_2,registered_3",
    call$1: function(arg) {
      return this.this_2.runUnary$2(this.registered_3, arg);
    }
  },
  _rootHandleUncaughtError_closure: {
    "^": "Closure:16;error_0,stackTrace_1",
    call$0: function() {
      P._scheduleAsyncCallback(new P._rootHandleUncaughtError__closure(this.error_0, this.stackTrace_1));
    }
  },
  _rootHandleUncaughtError__closure: {
    "^": "Closure:16;error_2,stackTrace_3",
    call$0: function() {
      var t1, trace;
      t1 = this.error_2;
      P.print("Uncaught Error: " + H.S(t1));
      trace = this.stackTrace_3;
      if (trace == null && !!J.getInterceptor(t1).$isError)
        trace = t1.get$stackTrace();
      if (trace != null)
        P.print("Stack Trace: \n" + H.S(trace) + "\n");
      throw H.wrapException(t1);
    }
  },
  _RootZone: {
    "^": "_BaseZone;",
    $index: function(_, key) {
      return;
    },
    handleUncaughtError$2: function(error, stackTrace) {
      return P._rootHandleUncaughtError(this, null, this, error, stackTrace);
    },
    run$1: function(f) {
      return P._rootRun(this, null, this, f);
    },
    runUnary$2: function(f, arg) {
      return P._rootRunUnary(this, null, this, f, arg);
    },
    runBinary$3: function(f, arg1, arg2) {
      return P._rootRunBinary(this, null, this, f, arg1, arg2);
    },
    registerCallback$1: function(f) {
      return f;
    },
    registerUnaryCallback$1: function(f) {
      return f;
    }
  }
}],
["dart.collection", "dart:collection", , P, {
  "^": "",
  _HashSet__newHashTable: function() {
    var table = Object.create(null);
    table["<non-identifier-key>"] = table;
    delete table["<non-identifier-key>"];
    return table;
  },
  _defaultEquals: [function(a, b) {
    return J.$eq(a, b);
  }, "call$2", "_defaultEquals$closure", 4, 0, 5],
  _defaultHashCode: [function(a) {
    return J.get$hashCode$(a);
  }, "call$1", "_defaultHashCode$closure", 2, 0, 6],
  HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
    return H.setRuntimeTypeInfo(new P._HashMap(0, null, null, null, null), [$K, $V]);
  },
  HashSet_HashSet$identity: function($E) {
    return H.setRuntimeTypeInfo(new P._IdentityHashSet(0, null, null, null, null), [$E]);
  },
  _iterableToString: function(iterable) {
    var parts, t1;
    if ($.get$_toStringVisiting().contains$1(0, iterable))
      return "(...)";
    $.get$_toStringVisiting().add$1(0, iterable);
    parts = [];
    try {
      P._iterablePartsToStrings(iterable, parts);
    } finally {
      $.get$_toStringVisiting().remove$1(0, iterable);
    }
    t1 = P.StringBuffer$("(");
    t1.writeAll$2(parts, ", ");
    t1.write$1(")");
    return t1._contents;
  },
  _iterablePartsToStrings: function(iterable, parts) {
    var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
    it = iterable.get$iterator(iterable);
    $length = 0;
    count = 0;
    while (true) {
      if (!($length < 80 || count < 3))
        break;
      if (!it.moveNext$0())
        return;
      next = H.S(it.get$current());
      parts.push(next);
      $length += next.length + 2;
      ++count;
    }
    if (!it.moveNext$0()) {
      if (count <= 5)
        return;
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      ultimateString = parts.pop();
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      penultimateString = parts.pop();
    } else {
      penultimate = it.get$current();
      ++count;
      if (!it.moveNext$0()) {
        if (count <= 4) {
          parts.push(H.S(penultimate));
          return;
        }
        ultimateString = H.S(penultimate);
        if (0 >= parts.length)
          return H.ioore(parts, 0);
        penultimateString = parts.pop();
        $length += ultimateString.length + 2;
      } else {
        ultimate = it.get$current();
        ++count;
        for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
          ultimate0 = it.get$current();
          ++count;
          if (count > 100) {
            while (true) {
              if (!($length > 75 && count > 3))
                break;
              if (0 >= parts.length)
                return H.ioore(parts, 0);
              $length -= parts.pop().length + 2;
              --count;
            }
            parts.push("...");
            return;
          }
        }
        penultimateString = H.S(penultimate);
        ultimateString = H.S(ultimate);
        $length += ultimateString.length + penultimateString.length + 4;
      }
    }
    if (count > parts.length + 2) {
      $length += 5;
      elision = "...";
    } else
      elision = null;
    while (true) {
      if (!($length > 80 && parts.length > 3))
        break;
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      $length -= parts.pop().length + 2;
      if (elision == null) {
        $length += 5;
        elision = "...";
      }
    }
    if (elision != null)
      parts.push(elision);
    parts.push(penultimateString);
    parts.push(ultimateString);
  },
  LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
    return H.setRuntimeTypeInfo(new P._LinkedHashMap(0, null, null, null, null, null, 0), [$K, $V]);
  },
  LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
    return H.setRuntimeTypeInfo(new P._LinkedHashSet(0, null, null, null, null, null, 0), [$E]);
  },
  Maps_mapToString: function(m) {
    var t1, result, i, t2;
    t1 = {};
    for (i = 0; t2 = $.get$Maps__toStringList(), i < t2.length; ++i)
      if (t2[i] === m)
        return "{...}";
    result = P.StringBuffer$("");
    try {
      $.get$Maps__toStringList().push(m);
      result.write$1("{");
      t1.first_0 = true;
      J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
      result.write$1("}");
    } finally {
      t1 = $.get$Maps__toStringList();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
    }
    return result.get$_contents();
  },
  _HashMap: {
    "^": "Object;_collection$_length,_strings,_nums,_rest,_keys",
    get$length: function(_) {
      return this._collection$_length;
    },
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._HashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    containsKey$1: function(key) {
      var strings, rest;
      if (key !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[key] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      }
    },
    $index: function(_, key) {
      var strings, t1, entry, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          t1 = null;
        else {
          entry = strings[key];
          t1 = entry === strings ? null : entry;
        }
        return t1;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          t1 = null;
        else {
          entry = nums[key];
          t1 = entry === nums ? null : entry;
        }
        return t1;
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      }
    },
    $indexSet: function(_, key, value) {
      var strings, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._HashMap__newHashTable();
          this._strings = strings;
        }
        this._addHashTableEntry$3(strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          nums = P._HashMap__newHashTable();
          this._nums = nums;
        }
        this._addHashTableEntry$3(nums, key, value);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._HashMap__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null) {
          P._HashMap__setTableEntry(rest, hash, [key, value]);
          this._collection$_length = this._collection$_length + 1;
          this._keys = null;
        } else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            this._collection$_length = this._collection$_length + 1;
            this._keys = null;
          }
        }
      }
    },
    forEach$1: function(_, action) {
      var keys, $length, i, key;
      keys = this._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        key = keys[i];
        action.call$2(key, this.$index(0, key));
        if (keys !== this._keys)
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    },
    _computeKeys$0: function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._keys;
      if (t1 != null)
        return t1;
      result = Array(this._collection$_length);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._keys = result;
      return result;
    },
    _addHashTableEntry$3: function(table, key, value) {
      if (table[key] == null) {
        this._collection$_length = this._collection$_length + 1;
        this._keys = null;
      }
      P._HashMap__setTableEntry(table, key, value);
    },
    _computeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq(bucket[i], key))
          return i;
      return -1;
    },
    $isMap: true,
    static: {_HashMap__setTableEntry: function(table, key, value) {
        if (value == null)
          table[key] = table;
        else
          table[key] = value;
      }, _HashMap__newHashTable: function() {
        var table = Object.create(null);
        P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
        delete table["<non-identifier-key>"];
        return table;
      }}
  },
  _HashMap_values_closure: {
    "^": "Closure:14;this_0",
    call$1: function(each) {
      return this.this_0.$index(0, each);
    }
  },
  HashMapKeyIterable: {
    "^": "IterableBase;_map",
    get$length: function(_) {
      return this._map._collection$_length;
    },
    get$iterator: function(_) {
      var t1 = this._map;
      return new P.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
    },
    contains$1: function(_, element) {
      return this._map.containsKey$1(element);
    },
    forEach$1: function(_, f) {
      var t1, keys, $length, i;
      t1 = this._map;
      keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    },
    $isEfficientLength: true
  },
  HashMapKeyIterator: {
    "^": "Object;_map,_keys,_offset,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var keys, offset, t1;
      keys = this._keys;
      offset = this._offset;
      t1 = this._map;
      if (keys !== t1._keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = keys[offset];
        this._offset = offset + 1;
        return true;
      }
    }
  },
  _LinkedHashMap: {
    "^": "Object;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
    get$length: function(_) {
      return this._collection$_length;
    },
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._LinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    containsKey$1: function(key) {
      var strings, nums, rest;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      }
    },
    $index: function(_, key) {
      var strings, cell, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return;
        cell = strings[key];
        return cell == null ? null : cell.get$_collection$_value();
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return;
        cell = nums[key];
        return cell == null ? null : cell.get$_collection$_value();
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].get$_collection$_value();
      }
    },
    $indexSet: function(_, key, value) {
      var strings, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._LinkedHashMap__newHashTable();
          this._strings = strings;
        }
        this._addHashTableEntry$3(strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          nums = P._LinkedHashMap__newHashTable();
          this._nums = nums;
        }
        this._addHashTableEntry$3(nums, key, value);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._LinkedHashMap__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$2(key, value)];
        else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].set$_collection$_value(value);
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      }
    },
    remove$1: function(_, key) {
      var rest, bucket, index, cell;
      if (typeof key === "string" && key !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, key);
      else if (typeof key === "number" && (key & 0x3ffffff) === key)
        return this._removeHashTableEntry$2(this._nums, key);
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this._unlinkCell$1(cell);
        return cell.get$_collection$_value();
      }
    },
    forEach$1: function(_, action) {
      var cell, modifications;
      cell = this._first;
      modifications = this._modifications;
      for (; cell != null;) {
        action.call$2(cell.get$_key(), cell._collection$_value);
        if (modifications !== this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3: function(table, key, value) {
      var cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.set$_collection$_value(value);
    },
    _removeHashTableEntry$2: function(table, key) {
      var cell;
      if (table == null)
        return;
      cell = table[key];
      if (cell == null)
        return;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.get$_collection$_value();
    },
    _newLinkedCell$2: function(key, value) {
      var cell, last;
      cell = new P.LinkedHashMapCell(key, value, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._collection$_length = this._collection$_length + 1;
      this._modifications = this._modifications + 1 & 67108863;
      return cell;
    },
    _unlinkCell$1: function(cell) {
      var previous, next;
      previous = cell.get$_previous();
      next = cell.get$_next();
      if (previous == null)
        this._first = next;
      else
        previous.set$_next(next);
      if (next == null)
        this._last = previous;
      else
        next.set$_previous(previous);
      this._collection$_length = this._collection$_length - 1;
      this._modifications = this._modifications + 1 & 67108863;
    },
    _computeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_key(), key))
          return i;
      return -1;
    },
    toString$0: function(_) {
      return P.Maps_mapToString(this);
    },
    $isMap: true,
    static: {_LinkedHashMap__newHashTable: function() {
        var table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        return table;
      }}
  },
  _LinkedHashMap_values_closure: {
    "^": "Closure:14;this_0",
    call$1: function(each) {
      return this.this_0.$index(0, each);
    }
  },
  LinkedHashMapCell: {
    "^": "Object;_key<,_collection$_value@,_next@,_previous@"
  },
  LinkedHashMapKeyIterable: {
    "^": "IterableBase;_map",
    get$length: function(_) {
      return this._map._collection$_length;
    },
    get$iterator: function(_) {
      var t1, t2;
      t1 = this._map;
      t2 = new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
      t2._cell = t1._first;
      return t2;
    },
    contains$1: function(_, element) {
      return this._map.containsKey$1(element);
    },
    forEach$1: function(_, f) {
      var t1, cell, modifications;
      t1 = this._map;
      cell = t1._first;
      modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.get$_key());
        if (modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        cell = cell._next;
      }
    },
    $isEfficientLength: true
  },
  LinkedHashMapKeyIterator: {
    "^": "Object;_map,_modifications,_cell,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t1 = this._map;
      if (this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_key();
          this._cell = t1._next;
          return true;
        }
      }
    }
  },
  _HashSet: {
    "^": "_HashSetBase;",
    get$iterator: function(_) {
      return new P.HashSetIterator(this, this._computeElements$0(), 0, null);
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    contains$1: function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        return nums == null ? false : nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    },
    lookup$1: function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(0, object) ? object : null;
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return;
      return J.$index$asx(bucket, index);
    },
    add$1: function(_, element) {
      var rest, hash, bucket;
      rest = this._rest;
      if (rest == null) {
        rest = P._HashSet__newHashTable();
        this._rest = rest;
      }
      hash = this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      this._collection$_length = this._collection$_length + 1;
      this._elements = null;
      return true;
    },
    remove$1: function(_, object) {
      var rest, bucket, index;
      rest = this._rest;
      if (rest == null)
        return false;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      this._collection$_length = this._collection$_length - 1;
      this._elements = null;
      bucket.splice(index, 1);
      return true;
    },
    _computeElements$0: function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._elements;
      if (t1 != null)
        return t1;
      result = Array(this._collection$_length);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._elements = result;
      return result;
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i], element))
          return i;
      return -1;
    },
    $isEfficientLength: true
  },
  _IdentityHashSet: {
    "^": "_HashSet;_collection$_length,_strings,_nums,_rest,_elements",
    _computeHashCode$1: function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i];
        if (t1 == null ? element == null : t1 === element)
          return i;
      }
      return -1;
    }
  },
  HashSetIterator: {
    "^": "Object;_set,_elements,_offset,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var elements, offset, t1;
      elements = this._elements;
      offset = this._offset;
      t1 = this._set;
      if (elements !== t1._elements)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = elements[offset];
        this._offset = offset + 1;
        return true;
      }
    }
  },
  _LinkedHashSet: {
    "^": "_HashSetBase;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
    get$iterator: function(_) {
      var t1 = new P.LinkedHashSetIterator(this, this._modifications, null, null);
      t1._cell = this._first;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    contains$1: function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    },
    lookup$1: function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(0, object) ? object : null;
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return;
        return J.$index$asx(bucket, index).get$_element();
      }
    },
    forEach$1: function(_, action) {
      var cell, modifications;
      cell = this._first;
      modifications = this._modifications;
      for (; cell != null;) {
        action.call$1(cell.get$_element());
        if (modifications !== this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell._next;
      }
    },
    add$1: function(_, element) {
      var strings, nums, rest, hash, bucket;
      if (typeof element === "string" && element !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._LinkedHashSet__newHashTable();
          this._strings = strings;
        }
        return this._addHashTableEntry$2(strings, element);
      } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
        nums = this._nums;
        if (nums == null) {
          nums = P._LinkedHashSet__newHashTable();
          this._nums = nums;
        }
        return this._addHashTableEntry$2(nums, element);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._LinkedHashSet__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._newLinkedCell$1(element));
        }
        return true;
      }
    },
    remove$1: function(_, object) {
      var rest, bucket, index;
      if (typeof object === "string" && object !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, object);
      else if (typeof object === "number" && (object & 0x3ffffff) === object)
        return this._removeHashTableEntry$2(this._nums, object);
      else {
        rest = this._rest;
        if (rest == null)
          return false;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._unlinkCell$1(bucket.splice(index, 1)[0]);
        return true;
      }
    },
    _addHashTableEntry$2: function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._newLinkedCell$1(element);
      return true;
    },
    _removeHashTableEntry$2: function(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _newLinkedCell$1: function(element) {
      var cell, last;
      cell = new P.LinkedHashSetCell(element, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._collection$_length = this._collection$_length + 1;
      this._modifications = this._modifications + 1 & 67108863;
      return cell;
    },
    _unlinkCell$1: function(cell) {
      var previous, next;
      previous = cell.get$_previous();
      next = cell.get$_next();
      if (previous == null)
        this._first = next;
      else
        previous.set$_next(next);
      if (next == null)
        this._last = previous;
      else
        next.set$_previous(previous);
      this._collection$_length = this._collection$_length - 1;
      this._modifications = this._modifications + 1 & 67108863;
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_element(), element))
          return i;
      return -1;
    },
    $isEfficientLength: true,
    static: {_LinkedHashSet__newHashTable: function() {
        var table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        return table;
      }}
  },
  LinkedHashSetCell: {
    "^": "Object;_element<,_next@,_previous@"
  },
  LinkedHashSetIterator: {
    "^": "Object;_set,_modifications,_cell,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t1 = this._set;
      if (this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_element();
          this._cell = t1._next;
          return true;
        }
      }
    }
  },
  _HashSetBase: {
    "^": "IterableBase;",
    toString$0: function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    },
    $isEfficientLength: true
  },
  IterableBase: {
    "^": "Object;",
    contains$1: function(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq(t1.get$current(), element))
          return true;
      return false;
    },
    forEach$1: function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current());
    },
    any$1: function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (f.call$1(t1.get$current()) === true)
          return true;
      return false;
    },
    get$length: function(_) {
      var it, count;
      it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    elementAt$1: function(_, index) {
      var t1, remaining, element;
      if (index < 0)
        throw H.wrapException(P.RangeError$value(index));
      for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0();) {
        element = t1.get$current();
        if (remaining === 0)
          return element;
        --remaining;
      }
      throw H.wrapException(P.RangeError$value(index));
    },
    toString$0: function(_) {
      return P._iterableToString(this);
    }
  },
  ListMixin: {
    "^": "Object;",
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver), 0, null);
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1: function(receiver, action) {
      var $length, i;
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (i >= receiver.length)
          return H.ioore(receiver, i);
        action.call$1(receiver[i]);
        if ($length !== receiver.length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    contains$1: function(receiver, element) {
      var $length, t1, t2, i;
      $length = this.get$length(receiver);
      for (t1 = receiver.length, t2 = $length !== t1, i = 0; i < t1; ++i)
        if (t2)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      return false;
    },
    any$1: function(receiver, test) {
      var $length, i;
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (i >= receiver.length)
          return H.ioore(receiver, i);
        if (test.call$1(receiver[i]) === true)
          return true;
        if ($length !== receiver.length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    add$1: function(receiver, element) {
      var t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      if (t1 < 0 || t1 >= receiver.length)
        return H.ioore(receiver, t1);
      receiver[t1] = element;
    },
    toString$0: function(receiver) {
      var result;
      if ($.get$_toStringVisiting().contains$1(0, receiver))
        return "[...]";
      result = P.StringBuffer$("");
      try {
        $.get$_toStringVisiting().add$1(0, receiver);
        result.write$1("[");
        result.writeAll$2(receiver, ", ");
        result.write$1("]");
      } finally {
        $.get$_toStringVisiting().remove$1(0, receiver);
      }
      return result.get$_contents();
    },
    $isList: true,
    $asList: null,
    $isEfficientLength: true
  },
  Maps_mapToString_closure: {
    "^": "Closure:15;box_0,result_1",
    call$2: function(k, v) {
      var t1 = this.box_0;
      if (!t1.first_0)
        this.result_1.write$1(", ");
      t1.first_0 = false;
      t1 = this.result_1;
      t1.write$1(k);
      t1.write$1(": ");
      t1.write$1(v);
    }
  },
  ListQueue: {
    "^": "IterableBase;_table,_head,_tail,_modificationCount",
    get$iterator: function(_) {
      return new P._ListQueueIterator(this, this._tail, this._modificationCount, this._head, null);
    },
    forEach$1: function(_, action) {
      var modificationCount, i, t1;
      modificationCount = this._modificationCount;
      for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
        t1 = this._table;
        if (i < 0 || i >= t1.length)
          return H.ioore(t1, i);
        action.call$1(t1[i]);
        if (modificationCount !== this._modificationCount)
          H.throwExpression(P.ConcurrentModificationError$(this));
      }
    },
    get$length: function(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    add$1: function(_, element) {
      this._collection$_add$1(element);
    },
    toString$0: function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    },
    _collection$_add$1: function(element) {
      var t1, t2, t3;
      t1 = this._table;
      t2 = this._tail;
      t3 = t1.length;
      if (t2 >= t3)
        return H.ioore(t1, t2);
      t1[t2] = element;
      t3 = (t2 + 1 & t3 - 1) >>> 0;
      this._tail = t3;
      if (this._head === t3)
        this._grow$0();
      this._modificationCount = this._modificationCount + 1;
    },
    _grow$0: function() {
      var t1, newTable, t2, split;
      t1 = Array(this._table.length * 2);
      t1.fixed$length = init;
      newTable = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
      t1 = this._table;
      t2 = this._head;
      split = t1.length - t2;
      H.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
      t1 = this._head;
      t2 = this._table;
      H.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
      this._head = 0;
      this._tail = this._table.length;
      this._table = newTable;
    },
    ListQueue$1: function(initialCapacity, $E) {
      var t1 = Array(8);
      t1.fixed$length = init;
      this._table = H.setRuntimeTypeInfo(t1, [$E]);
    },
    $isEfficientLength: true,
    static: {"^": "ListQueue__INITIAL_CAPACITY"}
  },
  _ListQueueIterator: {
    "^": "Object;_queue,_end,_modificationCount,_collection$_position,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var t1, t2, t3;
      t1 = this._queue;
      if (this._modificationCount !== t1._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(t1));
      t2 = this._collection$_position;
      if (t2 === this._end) {
        this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      t3 = t1.length;
      if (t2 >= t3)
        return H.ioore(t1, t2);
      this._collection$_current = t1[t2];
      this._collection$_position = (t2 + 1 & t3 - 1) >>> 0;
      return true;
    }
  }
}],
["dart.core", "dart:core", , P, {
  "^": "",
  _symbolToString: function(symbol) {
    return H.Symbol_getName(symbol);
  },
  Comparable_compare: [function(a, b) {
    return J.compareTo$1$ns(a, b);
  }, "call$2", "Comparable_compare$closure", 4, 0, 7],
  Error_safeToString: function(object) {
    var buffer, t1, i, t2, codeUnit, charCodes;
    if (typeof object === "number" || typeof object === "boolean" || null == object)
      return J.toString$0(object);
    if (typeof object === "string") {
      buffer = new P.StringBuffer("");
      buffer._contents = "\"";
      for (t1 = object.length, i = 0, t2 = "\""; i < t1; ++i) {
        codeUnit = C.JSString_methods.codeUnitAt$1(object, i);
        if (codeUnit <= 31)
          if (codeUnit === 10) {
            t2 = buffer._contents + "\\n";
            buffer._contents = t2;
          } else if (codeUnit === 13) {
            t2 = buffer._contents + "\\r";
            buffer._contents = t2;
          } else if (codeUnit === 9) {
            t2 = buffer._contents + "\\t";
            buffer._contents = t2;
          } else {
            t2 = buffer._contents + "\\x";
            buffer._contents = t2;
            if (codeUnit < 16)
              buffer._contents = t2 + "0";
            else {
              buffer._contents = t2 + "1";
              codeUnit -= 16;
            }
            t2 = codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit;
            charCodes = P.List_List$filled(1, t2, J.JSInt);
            t2 = H.Primitives_stringFromCharCodes(charCodes);
            t2 = buffer._contents + t2;
            buffer._contents = t2;
          }
        else if (codeUnit === 92) {
          t2 = buffer._contents + "\\\\";
          buffer._contents = t2;
        } else if (codeUnit === 34) {
          t2 = buffer._contents + "\\\"";
          buffer._contents = t2;
        } else {
          charCodes = P.List_List$filled(1, codeUnit, J.JSInt);
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          t2 = buffer._contents + t2;
          buffer._contents = t2;
        }
      }
      t1 = t2 + "\"";
      buffer._contents = t1;
      return t1;
    }
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  },
  Exception_Exception: function(message) {
    return new P._ExceptionImplementation(message);
  },
  identical: [function(a, b) {
    return a == null ? b == null : a === b;
  }, "call$2", "identical$closure", 4, 0, 8],
  identityHashCode: [function(object) {
    return H.objectHashCode(object);
  }, "call$1", "identityHashCode$closure", 2, 0, 9],
  List_List$filled: function($length, fill, $E) {
    var result, t1, i;
    result = J.JSArray_JSArray$fixed($length, $E);
    if ($length !== 0 && true)
      for (t1 = result.length, i = 0; i < t1; ++i)
        result[i] = fill;
    return result;
  },
  List_List$from: function(other, growable, $E) {
    var list, t1;
    list = H.setRuntimeTypeInfo([], [$E]);
    for (t1 = J.get$iterator$ax(other); t1.moveNext$0();)
      list.push(t1.get$current());
    if (growable)
      return list;
    list.fixed$length = init;
    return list;
  },
  print: function(object) {
    var line = H.S(object);
    H.printString(line);
  },
  NoSuchMethodError_toString_closure: {
    "^": "Closure:24;box_0",
    call$2: function(key, value) {
      var t1 = this.box_0;
      if (t1.i_1 > 0)
        t1.sb_0.write$1(", ");
      t1.sb_0.write$1(P._symbolToString(key));
    }
  },
  Comparable: {
    "^": "Object;"
  },
  DateTime: {
    "^": "Object;millisecondsSinceEpoch<,isUtc",
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.getInterceptor(other).$isDateTime)
        return false;
      return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
    },
    compareTo$1: function(_, other) {
      return C.JSNumber_methods.compareTo$1(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
    },
    get$hashCode: function(_) {
      return this.millisecondsSinceEpoch;
    },
    toString$0: function(_) {
      var t1, y, m, d, h, min, sec, ms;
      t1 = this.isUtc;
      y = P.DateTime__fourDigits(t1 ? H.Primitives_lazyAsJsDate(this).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(this).getFullYear() + 0);
      m = P.DateTime__twoDigits(t1 ? H.Primitives_lazyAsJsDate(this).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(this).getMonth() + 1);
      d = P.DateTime__twoDigits(t1 ? H.Primitives_lazyAsJsDate(this).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(this).getDate() + 0);
      h = P.DateTime__twoDigits(t1 ? H.Primitives_lazyAsJsDate(this).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(this).getHours() + 0);
      min = P.DateTime__twoDigits(t1 ? H.Primitives_lazyAsJsDate(this).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(this).getMinutes() + 0);
      sec = P.DateTime__twoDigits(t1 ? H.Primitives_lazyAsJsDate(this).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(this).getSeconds() + 0);
      ms = P.DateTime__threeDigits(t1 ? H.Primitives_lazyAsJsDate(this).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(this).getMilliseconds() + 0);
      if (t1)
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    },
    add$1: function(_, duration) {
      return P.DateTime$fromMillisecondsSinceEpoch(C.JSNumber_methods.$add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
    },
    DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
      if (Math.abs(millisecondsSinceEpoch) > 8640000000000000)
        throw H.wrapException(new P.ArgumentError(millisecondsSinceEpoch));
    },
    DateTime$_now$0: function() {
      H.Primitives_lazyAsJsDate(this);
    },
    $isDateTime: true,
    static: {"^": "DateTime_MONDAY,DateTime_TUESDAY,DateTime_WEDNESDAY,DateTime_THURSDAY,DateTime_FRIDAY,DateTime_SATURDAY,DateTime_SUNDAY,DateTime_DAYS_PER_WEEK,DateTime_JANUARY,DateTime_FEBRUARY,DateTime_MARCH,DateTime_APRIL,DateTime_MAY,DateTime_JUNE,DateTime_JULY,DateTime_AUGUST,DateTime_SEPTEMBER,DateTime_OCTOBER,DateTime_NOVEMBER,DateTime_DECEMBER,DateTime_MONTHS_PER_YEAR,DateTime__MAX_MILLISECONDS_SINCE_EPOCH", DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
        var t1 = new P.DateTime(millisecondsSinceEpoch, isUtc);
        t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
        return t1;
      }, DateTime__fourDigits: function(n) {
        var absN, sign;
        absN = Math.abs(n);
        sign = n < 0 ? "-" : "";
        if (absN >= 1000)
          return "" + n;
        if (absN >= 100)
          return sign + "0" + H.S(absN);
        if (absN >= 10)
          return sign + "00" + H.S(absN);
        return sign + "000" + H.S(absN);
      }, DateTime__threeDigits: function(n) {
        if (n >= 100)
          return "" + n;
        if (n >= 10)
          return "0" + n;
        return "00" + n;
      }, DateTime__twoDigits: function(n) {
        if (n >= 10)
          return "" + n;
        return "0" + n;
      }}
  },
  Duration: {
    "^": "Object;_duration<",
    $add: function(_, other) {
      return P.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
    },
    $sub: function(_, other) {
      return P.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
    },
    $mul: function(_, factor) {
      if (typeof factor !== "number")
        return H.iae(factor);
      return P.Duration$(0, 0, C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._duration * factor)), 0, 0, 0);
    },
    $lt: function(_, other) {
      return this._duration < other.get$_duration();
    },
    $gt: function(_, other) {
      return this._duration > other.get$_duration();
    },
    $le: function(_, other) {
      return C.JSInt_methods.$le(this._duration, other.get$_duration());
    },
    $ge: function(_, other) {
      return C.JSInt_methods.$ge(this._duration, other.get$_duration());
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!J.getInterceptor(other).$isDuration)
        return false;
      return this._duration === other._duration;
    },
    get$hashCode: function(_) {
      return this._duration & 0x1FFFFFFF;
    },
    compareTo$1: function(_, other) {
      return C.JSInt_methods.compareTo$1(this._duration, other.get$_duration());
    },
    toString$0: function(_) {
      var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
      t1 = new P.Duration_toString_twoDigits();
      t2 = this._duration;
      if (t2 < 0)
        return "-" + H.S(P.Duration$(0, 0, -t2, 0, 0, 0));
      twoDigitMinutes = t1.call$1(C.JSInt_methods.remainder$1(C.JSInt_methods._tdivFast$1(t2, 60000000), 60));
      twoDigitSeconds = t1.call$1(C.JSInt_methods.remainder$1(C.JSInt_methods._tdivFast$1(t2, 1000000), 60));
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSInt_methods.remainder$1(t2, 1000000));
      return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    },
    $isDuration: true,
    static: {"^": "Duration_MICROSECONDS_PER_MILLISECOND,Duration_MILLISECONDS_PER_SECOND,Duration_SECONDS_PER_MINUTE,Duration_MINUTES_PER_HOUR,Duration_HOURS_PER_DAY,Duration_MICROSECONDS_PER_SECOND,Duration_MICROSECONDS_PER_MINUTE,Duration_MICROSECONDS_PER_HOUR,Duration_MICROSECONDS_PER_DAY,Duration_MILLISECONDS_PER_MINUTE,Duration_MILLISECONDS_PER_HOUR,Duration_MILLISECONDS_PER_DAY,Duration_SECONDS_PER_HOUR,Duration_SECONDS_PER_DAY,Duration_MINUTES_PER_DAY,Duration_ZERO", Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
        return new P.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
      }}
  },
  Duration_toString_sixDigits: {
    "^": "Closure:25;",
    call$1: function(n) {
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n >= 10)
        return "0000" + n;
      return "00000" + n;
    }
  },
  Duration_toString_twoDigits: {
    "^": "Closure:25;",
    call$1: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    }
  },
  Error: {
    "^": "Object;",
    get$stackTrace: function() {
      return new H._StackTrace(this.$thrownJsError, null);
    },
    $isError: true
  },
  NullThrownError: {
    "^": "Error;",
    toString$0: function(_) {
      return "Throw of null.";
    }
  },
  ArgumentError: {
    "^": "Error;message",
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Illegal argument(s): " + H.S(t1);
      return "Illegal argument(s)";
    },
    static: {ArgumentError$: function(message) {
        return new P.ArgumentError(message);
      }}
  },
  RangeError: {
    "^": "ArgumentError;message",
    toString$0: function(_) {
      return "RangeError: " + H.S(this.message);
    },
    static: {RangeError$: function(message) {
        return new P.RangeError(message);
      }, RangeError$value: function(value) {
        return new P.RangeError("value " + H.S(value));
      }, RangeError$range: function(value, start, end) {
        return new P.RangeError("value " + H.S(value) + " not in range " + start + ".." + H.S(end));
      }}
  },
  UnsupportedError: {
    "^": "Error;message",
    toString$0: function(_) {
      return "Unsupported operation: " + this.message;
    },
    static: {UnsupportedError$: function(message) {
        return new P.UnsupportedError(message);
      }}
  },
  UnimplementedError: {
    "^": "Error;message",
    toString$0: function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
    },
    $isError: true,
    static: {UnimplementedError$: function(message) {
        return new P.UnimplementedError(message);
      }}
  },
  StateError: {
    "^": "Error;message",
    toString$0: function(_) {
      return "Bad state: " + this.message;
    },
    static: {StateError$: function(message) {
        return new P.StateError(message);
      }}
  },
  ConcurrentModificationError: {
    "^": "Error;modifiedObject",
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
    },
    static: {ConcurrentModificationError$: function(modifiedObject) {
        return new P.ConcurrentModificationError(modifiedObject);
      }}
  },
  OutOfMemoryError: {
    "^": "Object;",
    toString$0: function(_) {
      return "Out of Memory";
    },
    get$stackTrace: function() {
      return;
    },
    $isError: true
  },
  StackOverflowError: {
    "^": "Object;",
    toString$0: function(_) {
      return "Stack Overflow";
    },
    get$stackTrace: function() {
      return;
    },
    $isError: true
  },
  CyclicInitializationError: {
    "^": "Error;variableName",
    toString$0: function(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    },
    static: {CyclicInitializationError$: function(variableName) {
        return new P.CyclicInitializationError(variableName);
      }}
  },
  _ExceptionImplementation: {
    "^": "Object;message",
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 == null)
        return "Exception";
      return "Exception: " + H.S(t1);
    }
  },
  FormatException: {
    "^": "Object;message",
    toString$0: function(_) {
      return "FormatException: " + H.S(this.message);
    },
    static: {FormatException$: function(message) {
        return new P.FormatException(message);
      }}
  },
  Expando: {
    "^": "Object;name",
    toString$0: function(_) {
      return "Expando:" + H.S(this.name);
    },
    $index: function(_, object) {
      var values = H.Primitives_getProperty(object, "expando$values");
      return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
    },
    $indexSet: function(_, object, value) {
      var values = H.Primitives_getProperty(object, "expando$values");
      if (values == null) {
        values = new P.Object();
        H.Primitives_setProperty(object, "expando$values", values);
      }
      H.Primitives_setProperty(values, this._getKey$0(), value);
    },
    _getKey$0: function() {
      var key, t1;
      key = H.Primitives_getProperty(this, "expando$key");
      if (key == null) {
        t1 = $.Expando__keyCount;
        $.Expando__keyCount = t1 + 1;
        key = "expando$key$" + t1;
        H.Primitives_setProperty(this, "expando$key", key);
      }
      return key;
    },
    static: {"^": "Expando__KEY_PROPERTY_NAME,Expando__EXPANDO_PROPERTY_NAME,Expando__keyCount"}
  },
  Iterator: {
    "^": "Object;"
  },
  Map: {
    "^": "Object;",
    $isMap: true
  },
  Null: {
    "^": "Object;",
    toString$0: function(_) {
      return "null";
    }
  },
  Object: {
    "^": ";",
    $eq: function(_, other) {
      return this === other;
    },
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: function(_) {
      return H.Primitives_objectToString(this);
    }
  },
  StackTrace: {
    "^": "Object;"
  },
  StringBuffer: {
    "^": "Object;_contents<",
    get$length: function(_) {
      return this._contents.length;
    },
    write$1: function(obj) {
      var str = typeof obj === "string" ? obj : H.S(obj);
      this._contents = this._contents + str;
    },
    writeAll$2: function(objects, separator) {
      var iterator, str;
      iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return;
      if (separator.length === 0)
        do {
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        } while (iterator.moveNext$0());
      else {
        this.write$1(iterator.get$current());
        for (; iterator.moveNext$0();) {
          this._contents = this._contents + separator;
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        }
      }
    },
    toString$0: function(_) {
      return this._contents;
    },
    StringBuffer$1: function($content) {
      this._contents = $content;
    },
    static: {StringBuffer$: function($content) {
        var t1 = new P.StringBuffer("");
        t1.StringBuffer$1($content);
        return t1;
      }}
  },
  Symbol: {
    "^": "Object;"
  }
}],
["dart.dom.html", "dart:html", , W, {
  "^": "",
  Blob_Blob: function(blobParts, type, endings) {
    var bag = {};
    bag.type = type;
    return new Blob(blobParts, bag);
  },
  CanvasElement_CanvasElement: function(height, width) {
    var e = document.createElement("canvas", null);
    J.set$width$x(e, width);
    J.set$height$x(e, height);
    return e;
  },
  Element__determineMouseWheelEventType: [function(e) {
    if (e.onwheel !== undefined)
      return "wheel";
    else if (e.onmousewheel !== undefined)
      return "mousewheel";
    else
      return "DOMMouseScroll";
  }, "call$1", "Element__determineMouseWheelEventType$closure", 2, 0, 10],
  Window__isDartLocation: function(thing) {
    var exception;
    try {
      return !!J.getInterceptor(thing).$isLocation;
    } catch (exception) {
      H.unwrapException(exception);
      return false;
    }

  },
  _JenkinsSmiHash_combine: function(hash, value) {
    hash = 536870911 & hash + value;
    hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
    return hash ^ hash >>> 6;
  },
  _convertNativeToDart_EventTarget: function(e) {
    var $window;
    if (e == null)
      return;
    if ("setInterval" in e) {
      $window = W._DOMWindowCrossFrame__createSafe(e);
      if (!!J.getInterceptor($window).$isEventTarget)
        return $window;
      return;
    } else
      return e;
  },
  _wrapZone: function(callback) {
    var t1 = $.Zone__current;
    if (t1 === C.C__RootZone)
      return callback;
    return t1.bindUnaryCallback$2$runGuarded(callback, true);
  },
  HtmlElement: {
    "^": "Element;",
    "%": "HTMLAppletElement|HTMLBRElement|HTMLButtonElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLFieldSetElement|HTMLFontElement|HTMLFrameElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTemplateElement|HTMLTextAreaElement|HTMLTitleElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"
  },
  AnchorElement: {
    "^": "HtmlElement;target=,search=",
    toString$0: function(receiver) {
      return receiver.toString();
    },
    "%": "HTMLAnchorElement"
  },
  Animation: {
    "^": "TimedItem;",
    "%": "Animation"
  },
  AreaElement: {
    "^": "HtmlElement;target=,search=",
    toString$0: function(receiver) {
      return receiver.toString();
    },
    "%": "HTMLAreaElement"
  },
  BaseElement: {
    "^": "HtmlElement;target=",
    "%": "HTMLBaseElement"
  },
  BodyElement: {
    "^": "HtmlElement;",
    get$onLoad: function(receiver) {
      return C.EventStreamProvider_load.forElement$1(receiver);
    },
    $isEventTarget: true,
    "%": "HTMLBodyElement"
  },
  CanvasElement: {
    "^": "HtmlElement;height%,width%",
    getContext$2: function(receiver, contextId, attrs) {
      return receiver.getContext(contextId, P.convertDartToNative_Dictionary(attrs));
    },
    get$context2D: function(receiver) {
      return receiver.getContext("2d");
    },
    $isCanvasElement: true,
    "%": "HTMLCanvasElement"
  },
  CanvasRenderingContext: {
    "^": "Interceptor;",
    "%": ";CanvasRenderingContext"
  },
  CanvasRenderingContext2D: {
    "^": "CanvasRenderingContext;",
    $isCanvasRenderingContext2D: true,
    "%": "CanvasRenderingContext2D"
  },
  CharacterData: {
    "^": "Node;length=",
    "%": "CDATASection|Comment|Text;CharacterData"
  },
  CssStyleDeclaration: {
    "^": "Interceptor_CssStyleDeclarationBase;length=",
    getPropertyValue$1: function(receiver, propertyName) {
      var propValue = receiver.getPropertyValue(propertyName);
      return propValue != null ? propValue : "";
    },
    setProperty$3: function(receiver, propertyName, value, priority) {
      var exception;
      try {
        if (priority == null)
          priority = "";
        receiver.setProperty(propertyName, value, priority);
        if (!!receiver.setAttribute)
          receiver.setAttribute(propertyName, value);
      } catch (exception) {
        H.unwrapException(exception);
      }

    },
    "%": "CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties"
  },
  DeviceOrientationEvent: {
    "^": "Event0;alpha=",
    "%": "DeviceOrientationEvent"
  },
  DomException: {
    "^": "Interceptor;",
    toString$0: function(receiver) {
      return receiver.toString();
    },
    "%": "DOMException"
  },
  Element: {
    "^": "Node;tabIndex%,id=,style=",
    get$client: function(receiver) {
      return P.Rectangle$(receiver.clientLeft, receiver.clientTop, receiver.clientWidth, receiver.clientHeight, null);
    },
    toString$0: function(receiver) {
      return receiver.localName;
    },
    get$onLoad: function(receiver) {
      return C.EventStreamProvider_load.forElement$1(receiver);
    },
    $isEventTarget: true,
    "%": ";Element"
  },
  EmbedElement: {
    "^": "HtmlElement;height%,src},width%",
    "%": "HTMLEmbedElement"
  },
  ErrorEvent: {
    "^": "Event0;error=",
    "%": "ErrorEvent"
  },
  Event0: {
    "^": "Interceptor;",
    get$target: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.target);
    },
    preventDefault$0: function(receiver) {
      return receiver.preventDefault();
    },
    "%": "AudioProcessingEvent|AutocompleteErrorEvent|BeforeLoadEvent|BeforeUnloadEvent|CSSFontFaceLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|HashChangeEvent|IDBVersionChangeEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaKeyEvent|MediaKeyMessageEvent|MediaKeyNeededEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|ResourceProgressEvent|SecurityPolicyViolationEvent|SpeechInputEvent|SpeechRecognitionEvent|SpeechSynthesisEvent|StorageEvent|TrackEvent|TransitionEvent|WebKitAnimationEvent|WebKitTransitionEvent|XMLHttpRequestProgressEvent;Event"
  },
  EventTarget: {
    "^": "Interceptor;",
    addEventListener$3: function(receiver, type, listener, useCapture) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
    },
    dispatchEvent$1: function(receiver, $event) {
      return receiver.dispatchEvent($event);
    },
    removeEventListener$3: function(receiver, type, listener, useCapture) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
    },
    $isEventTarget: true,
    "%": "Screen;EventTarget"
  },
  FormElement: {
    "^": "HtmlElement;length=,target=",
    "%": "HTMLFormElement"
  },
  IFrameElement: {
    "^": "HtmlElement;height%,src},width%",
    "%": "HTMLIFrameElement"
  },
  ImageElement: {
    "^": "HtmlElement;height%,src},width%",
    "%": "HTMLImageElement"
  },
  InputElement: {
    "^": "HtmlElement;height%,src},width%",
    $isEventTarget: true,
    "%": "HTMLInputElement"
  },
  KeyboardEvent: {
    "^": "UIEvent;",
    get$keyCode: function(receiver) {
      return receiver.keyCode;
    },
    "%": "KeyboardEvent"
  },
  Location: {
    "^": "Interceptor;search=",
    toString$0: function(receiver) {
      return receiver.toString();
    },
    $isLocation: true,
    "%": "Location"
  },
  MediaElement: {
    "^": "HtmlElement;error=,src}",
    "%": "HTMLAudioElement;HTMLMediaElement"
  },
  MediaStream: {
    "^": "EventTarget;id=",
    "%": "MediaStream"
  },
  MouseEvent0: {
    "^": "UIEvent;button=",
    get$client: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Point0(receiver.clientX, receiver.clientY), [null]);
    },
    "%": ";DragEvent|MSPointerEvent|MouseEvent|PointerEvent"
  },
  Node: {
    "^": "EventTarget;",
    toString$0: function(receiver) {
      var t1 = receiver.nodeValue;
      return t1 == null ? J.Interceptor.prototype.toString$0.call(this, receiver) : t1;
    },
    contains$1: function(receiver, other) {
      return receiver.contains(other);
    },
    "%": "Attr|Document|DocumentFragment|DocumentType|HTMLDocument|Notation|ShadowRoot|XMLDocument;Node"
  },
  ObjectElement: {
    "^": "HtmlElement;height%,width%",
    "%": "HTMLObjectElement"
  },
  ProcessingInstruction: {
    "^": "CharacterData;target=",
    "%": "ProcessingInstruction"
  },
  ScriptElement: {
    "^": "HtmlElement;src}",
    "%": "HTMLScriptElement"
  },
  SelectElement: {
    "^": "HtmlElement;length=",
    "%": "HTMLSelectElement"
  },
  SourceElement: {
    "^": "HtmlElement;src}",
    "%": "HTMLSourceElement"
  },
  SpeechRecognitionError: {
    "^": "Event0;error=",
    "%": "SpeechRecognitionError"
  },
  TimedItem: {
    "^": "Interceptor;",
    "%": ";TimedItem"
  },
  Touch: {
    "^": "Interceptor;",
    get$target: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.target);
    },
    get$client: function(receiver) {
      return H.setRuntimeTypeInfo(new P.Point0(receiver.clientX, receiver.clientY), [null]);
    },
    "%": "Touch"
  },
  TouchEvent0: {
    "^": "UIEvent;changedTouches=",
    "%": "TouchEvent"
  },
  TouchList: {
    "^": "Interceptor_ListMixin_ImmutableListMixin;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    elementAt$1: function(receiver, index) {
      if (index < 0 || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    },
    $isList: true,
    $asList: function() {
      return [W.Touch];
    },
    $isEfficientLength: true,
    $isJavaScriptIndexingBehavior: true,
    "%": "TouchList"
  },
  TrackElement: {
    "^": "HtmlElement;src}",
    "%": "HTMLTrackElement"
  },
  UIEvent: {
    "^": "Event0;",
    "%": "CompositionEvent|FocusEvent|SVGZoomEvent|TextEvent;UIEvent"
  },
  VideoElement: {
    "^": "MediaElement;height%,width%",
    "%": "HTMLVideoElement"
  },
  WheelEvent: {
    "^": "MouseEvent0;",
    get$deltaY: function(receiver) {
      var detail;
      if (receiver.deltaY !== undefined)
        return receiver.deltaY;
      else if (receiver.wheelDelta !== undefined)
        return -receiver.wheelDelta;
      else if (receiver.detail !== undefined) {
        if (receiver.axis == MouseScrollEvent.VERTICAL_AXIS) {
          detail = receiver.detail;
          if (Math.abs(detail) < 100)
            return -detail * 40;
          return -detail;
        }
        return 0;
      }
      throw H.wrapException(P.UnsupportedError$("deltaY is not supported"));
    },
    get$deltaX: function(receiver) {
      var detail;
      if (receiver.deltaX !== undefined)
        return receiver.deltaX;
      else if (receiver.wheelDeltaX !== undefined)
        return -receiver.wheelDeltaX;
      else if (receiver.detail !== undefined) {
        if (receiver.axis !== undefined && receiver.axis == MouseScrollEvent.HORIZONTAL_AXIS) {
          detail = receiver.detail;
          if (detail < 100)
            return -detail * 40;
          return -detail;
        }
        return 0;
      }
      throw H.wrapException(P.UnsupportedError$("deltaX is not supported"));
    },
    "%": "MouseScrollEvent|MouseWheelEvent|WheelEvent"
  },
  Window: {
    "^": "EventTarget;",
    get$location: function(receiver) {
      var result = receiver.location;
      if (W.Window__isDartLocation(result) === true)
        return result;
      if (null == receiver._location_wrapper)
        receiver._location_wrapper = new W._LocationWrapper(result);
      return receiver._location_wrapper;
    },
    _html$_requestAnimationFrame$1: function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(callback, 1));
    },
    _ensureRequestAnimationFrame$0: function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
        (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
    },
    toString$0: function(receiver) {
      return receiver.toString();
    },
    $isEventTarget: true,
    "%": "DOMWindow|Window"
  },
  _ClientRect: {
    "^": "Interceptor;bottom=,height=,left=,right=,top=,width=",
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
    },
    $eq: function(receiver, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (!t1.$isRectangle)
        return false;
      t2 = receiver.left;
      t3 = t1.get$left(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = receiver.top;
        t3 = t1.get$top(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.width;
          t3 = t1.get$width(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = receiver.height;
            t1 = t1.get$height(other);
            t1 = t2 == null ? t1 == null : t2 === t1;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(receiver) {
      var t1, t2, t3, t4, hash;
      t1 = J.get$hashCode$(receiver.left);
      t2 = J.get$hashCode$(receiver.top);
      t3 = J.get$hashCode$(receiver.width);
      t4 = J.get$hashCode$(receiver.height);
      t4 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4);
      hash = 536870911 & t4 + ((67108863 & t4) << 3 >>> 0);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    $isRectangle: true,
    $asRectangle: function() {
      return [null];
    },
    "%": "ClientRect|DOMRect"
  },
  _HTMLFrameSetElement: {
    "^": "HtmlElement;",
    $isEventTarget: true,
    "%": "HTMLFrameSetElement"
  },
  Interceptor_CssStyleDeclarationBase: {
    "^": "Interceptor+CssStyleDeclarationBase;"
  },
  CssStyleDeclarationBase: {
    "^": "Object;",
    set$cursor: function(receiver, value) {
      this.setProperty$3(receiver, "cursor", value, "");
    },
    set$height: function(receiver, value) {
      this.setProperty$3(receiver, "height", value, "");
    },
    get$outline: function(receiver) {
      return this.getPropertyValue$1(receiver, "outline");
    },
    set$outline: function(receiver, value) {
      this.setProperty$3(receiver, "outline", value, "");
    },
    set$width: function(receiver, value) {
      this.setProperty$3(receiver, "width", value, "");
    }
  },
  Interceptor_ListMixin: {
    "^": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Touch];
    },
    $isEfficientLength: true
  },
  Interceptor_ListMixin_ImmutableListMixin: {
    "^": "Interceptor_ListMixin+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Touch];
    },
    $isEfficientLength: true
  },
  EventStreamProvider: {
    "^": "Object;_eventType",
    forElement$2$useCapture: function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._ElementEventStreamImpl(e, this._eventType, useCapture), [null]);
    },
    forElement$1: function(e) {
      return this.forElement$2$useCapture(e, false);
    }
  },
  _EventStream: {
    "^": "Stream;",
    get$isBroadcast: function() {
      return true;
    },
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = new W._EventStreamSubscription(0, this._target, this._eventType, W._wrapZone(onData), this._useCapture);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      t1._tryResume$0();
      return t1;
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  },
  _ElementEventStreamImpl: {
    "^": "_EventStream;_target,_eventType,_useCapture"
  },
  _EventStreamSubscription: {
    "^": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
    cancel$0: function() {
      if (this._target == null)
        return;
      this._unlisten$0();
      this._target = null;
      this._onData = null;
      return;
    },
    _tryResume$0: function() {
      var t1 = this._onData;
      if (t1 != null && this._pauseCount <= 0)
        J.addEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    },
    _unlisten$0: function() {
      var t1 = this._onData;
      if (t1 != null)
        J.removeEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    }
  },
  _CustomEventStreamProvider: {
    "^": "Object;_eventTypeGetter",
    _eventTypeGetter$1: function(arg0) {
      return this._eventTypeGetter.call$1(arg0);
    },
    forElement$2$useCapture: function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._ElementEventStreamImpl(e, this._eventTypeGetter$1(e), useCapture), [null]);
    },
    forElement$1: function(e) {
      return this.forElement$2$useCapture(e, false);
    }
  },
  ImmutableListMixin: {
    "^": "Object;",
    get$iterator: function(receiver) {
      return new W.FixedSizeListIterator(receiver, this.get$length(receiver), -1, null);
    },
    add$1: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    },
    $isList: true,
    $asList: null,
    $isEfficientLength: true
  },
  FixedSizeListIterator: {
    "^": "Object;_array,_html$_length,_position,_html$_current",
    moveNext$0: function() {
      var nextPosition, t1;
      nextPosition = this._position + 1;
      t1 = this._html$_length;
      if (nextPosition < t1) {
        this._html$_current = J.$index$asx(this._array, nextPosition);
        this._position = nextPosition;
        return true;
      }
      this._html$_current = null;
      this._position = t1;
      return false;
    },
    get$current: function() {
      return this._html$_current;
    }
  },
  _DOMWindowCrossFrame: {
    "^": "Object;_window",
    addEventListener$3: function(_, type, listener, useCapture) {
      return H.throwExpression(P.UnsupportedError$("You can only attach EventListeners to your own window."));
    },
    dispatchEvent$1: function(_, $event) {
      return H.throwExpression(P.UnsupportedError$("You can only attach EventListeners to your own window."));
    },
    removeEventListener$3: function(_, type, listener, useCapture) {
      return H.throwExpression(P.UnsupportedError$("You can only attach EventListeners to your own window."));
    },
    $isEventTarget: true,
    static: {_DOMWindowCrossFrame__createSafe: function(w) {
        if (w === window)
          return w;
        else
          return new W._DOMWindowCrossFrame(w);
      }}
  },
  _LocationWrapper: {
    "^": "Object;_ptr",
    get$search: function(_) {
      return this._ptr.search;
    },
    toString$0: function(_) {
      return this._ptr.toString();
    },
    $isLocation: true
  }
}],
["dart.dom.svg", "dart:svg", , P, {
  "^": "",
  AElement: {
    "^": "GraphicsElement;target=",
    "%": "SVGAElement"
  },
  FEBlendElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEBlendElement"
  },
  FEColorMatrixElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEColorMatrixElement"
  },
  FEComponentTransferElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEComponentTransferElement"
  },
  FECompositeElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFECompositeElement"
  },
  FEConvolveMatrixElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEConvolveMatrixElement"
  },
  FEDiffuseLightingElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEDiffuseLightingElement"
  },
  FEDisplacementMapElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEDisplacementMapElement"
  },
  FEFloodElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEFloodElement"
  },
  FEGaussianBlurElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEGaussianBlurElement"
  },
  FEImageElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEImageElement"
  },
  FEMergeElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEMergeElement"
  },
  FEMorphologyElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEMorphologyElement"
  },
  FEOffsetElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFEOffsetElement"
  },
  FEPointLightElement: {
    "^": "SvgElement;x=,y=",
    "%": "SVGFEPointLightElement"
  },
  FESpecularLightingElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFESpecularLightingElement"
  },
  FESpotLightElement: {
    "^": "SvgElement;x=,y=",
    "%": "SVGFESpotLightElement"
  },
  FETileElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFETileElement"
  },
  FETurbulenceElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFETurbulenceElement"
  },
  FilterElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGFilterElement"
  },
  ForeignObjectElement: {
    "^": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGForeignObjectElement"
  },
  GeometryElement: {
    "^": "GraphicsElement;",
    "%": "SVGCircleElement|SVGEllipseElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement;SVGGeometryElement"
  },
  GraphicsElement: {
    "^": "SvgElement;",
    "%": "SVGClipPathElement|SVGDefsElement|SVGGElement|SVGSwitchElement;SVGGraphicsElement"
  },
  ImageElement0: {
    "^": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGImageElement"
  },
  MaskElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGMaskElement"
  },
  PatternElement: {
    "^": "SvgElement;height=,width=,x=,y=",
    "%": "SVGPatternElement"
  },
  Rect: {
    "^": "Interceptor;x%,y%",
    "%": "SVGRect"
  },
  RectElement: {
    "^": "GeometryElement;height=,width=,x=,y=",
    "%": "SVGRectElement"
  },
  SvgElement: {
    "^": "Element;",
    get$onLoad: function(receiver) {
      return C.EventStreamProvider_load.forElement$1(receiver);
    },
    $isEventTarget: true,
    "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGCursorElement|SVGDescElement|SVGDiscardElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMetadataElement|SVGMissingGlyphElement|SVGRadialGradientElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStyleElement|SVGSymbolElement|SVGTitleElement|SVGVKernElement|SVGViewElement;SVGElement"
  },
  SvgSvgElement: {
    "^": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGSVGElement"
  },
  TextContentElement: {
    "^": "GraphicsElement;",
    "%": "SVGTextPathElement;SVGTextContentElement"
  },
  TextPositioningElement: {
    "^": "TextContentElement;x=,y=",
    "%": "SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTextPositioningElement"
  },
  UseElement: {
    "^": "GraphicsElement;height=,width=,x=,y=",
    "%": "SVGUseElement"
  }
}],
["dart.dom.web_gl", "dart:web_gl", , P, {
  "^": "",
  ContextEvent: {
    "^": "Event0;",
    "%": "WebGLContextEvent"
  },
  RenderingContext: {
    "^": "CanvasRenderingContext;",
    $isRenderingContext: true,
    "%": "WebGLRenderingContext"
  }
}],
["dart.isolate", "dart:isolate", , P, {
  "^": "",
  Capability: {
    "^": "Object;",
    $isCapability: true,
    static: {Capability_Capability: function() {
        return new H.CapabilityImpl((Math.random() * 0x100000000 >>> 0) + (Math.random() * 0x100000000 >>> 0) * 4294967296);
      }}
  }
}],
["dart.math", "dart:math", , P, {
  "^": "",
  _JenkinsSmiHash_combine0: function(hash, value) {
    hash = 536870911 & hash + value;
    hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
    return hash ^ hash >>> 6;
  },
  _JenkinsSmiHash_finish: function(hash) {
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >>> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  min: function(a, b) {
    if (typeof a !== "number")
      throw H.wrapException(P.ArgumentError$(a));
    if (typeof b !== "number")
      throw H.wrapException(P.ArgumentError$(b));
    if (a > b)
      return b;
    if (a < b)
      return a;
    if (typeof b === "number") {
      if (typeof a === "number")
        if (a === 0)
          return (a + b) * a * b;
      if (a === 0 && C.JSDouble_methods.get$isNegative(b) || C.JSDouble_methods.get$isNaN(b))
        return b;
      return a;
    }
    return a;
  },
  max: function(a, b) {
    if (typeof a !== "number")
      throw H.wrapException(P.ArgumentError$(a));
    if (typeof b !== "number")
      throw H.wrapException(P.ArgumentError$(b));
    if (a > b)
      return a;
    if (a < b)
      return b;
    if (typeof b === "number") {
      if (typeof a === "number")
        if (a === 0)
          return a + b;
      if (C.JSDouble_methods.get$isNaN(b))
        return b;
      return a;
    }
    if (b === 0 && C.JSNumber_methods.get$isNegative(a))
      return b;
    return a;
  },
  _JSRandom: {
    "^": "Object;",
    nextInt$1: function(max) {
      if (max <= 0 || max > 4294967296)
        throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + H.S(max)));
      return Math.random() * max >>> 0;
    }
  },
  Point0: {
    "^": "Object;x>,y>",
    toString$0: function(_) {
      return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
    },
    $eq: function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (!t1.$isPoint0)
        return false;
      t2 = this.x;
      t3 = t1.get$x(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = this.y;
        t1 = t1.get$y(other);
        t1 = t2 == null ? t1 == null : t2 === t1;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(this.x);
      t2 = J.get$hashCode$(this.y);
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2));
    },
    $add: function(_, other) {
      var t1, t2, t3, t4;
      t1 = this.x;
      t2 = J.getInterceptor$x(other);
      t3 = t2.get$x(other);
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = this.y;
      t2 = t2.get$y(other);
      if (typeof t4 !== "number")
        return t4.$add();
      if (typeof t2 !== "number")
        return H.iae(t2);
      t2 = new P.Point0(t1 + t3, t4 + t2);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      return t2;
    },
    $sub: function(_, other) {
      var t1, t2, t3, t4;
      t1 = this.x;
      t2 = J.getInterceptor$x(other);
      t3 = t2.get$x(other);
      if (typeof t1 !== "number")
        return t1.$sub();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = this.y;
      t2 = t2.get$y(other);
      if (typeof t4 !== "number")
        return t4.$sub();
      if (typeof t2 !== "number")
        return H.iae(t2);
      t2 = new P.Point0(t1 - t3, t4 - t2);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      return t2;
    },
    $mul: function(_, factor) {
      var t1, t2;
      t1 = this.x;
      if (typeof t1 !== "number")
        return t1.$mul();
      if (typeof factor !== "number")
        return H.iae(factor);
      t2 = this.y;
      if (typeof t2 !== "number")
        return t2.$mul();
      t2 = new P.Point0(t1 * factor, t2 * factor);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      return t2;
    },
    $isPoint0: true
  },
  _RectangleBase: {
    "^": "Object;",
    get$right: function(_) {
      var t1, t2;
      t1 = this.get$left(this);
      t2 = this.get$width(this);
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + t2;
    },
    get$bottom: function(_) {
      var t1, t2;
      t1 = this.get$top(this);
      t2 = this.get$height(this);
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + t2;
    },
    toString$0: function(_) {
      return "Rectangle (" + H.S(this.get$left(this)) + ", " + H.S(this.get$top(this)) + ") " + H.S(this.get$width(this)) + " x " + H.S(this.get$height(this));
    },
    $eq: function(_, other) {
      var t1, t2, t3, t4;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (!t1.$isRectangle)
        return false;
      t2 = this.get$left(this);
      t3 = t1.get$left(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t3 = this.get$top(this);
        t4 = t1.get$top(other);
        if (t3 == null ? t4 == null : t3 === t4) {
          t3 = this.get$width(this);
          if (typeof t2 !== "number")
            return t2.$add();
          if (typeof t3 !== "number")
            return H.iae(t3);
          t1 = t2 + t3 === t1.get$right(other) && J.$add$ns(this.get$top(this), this.get$height(this)) === t1.get$bottom(other);
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1, t2, t3, t4;
      t1 = J.get$hashCode$(this.get$left(this));
      t2 = J.get$hashCode$(this.get$top(this));
      t3 = J.$add$ns(this.get$left(this), this.get$width(this)) & 0x1FFFFFFF;
      t4 = J.$add$ns(this.get$top(this), this.get$height(this)) & 0x1FFFFFFF;
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2), t3), t4));
    }
  },
  Rectangle: {
    "^": "_RectangleBase;left>,top>,width>,height>",
    $isRectangle: true,
    $asRectangle: null,
    static: {Rectangle$: function(left, $top, width, height, $T) {
        var t1, t2;
        if (typeof width !== "number")
          return width.$ge();
        if (width >= 0)
          t1 = width;
        else
          t1 = -width * 0;
        if (typeof height !== "number")
          return height.$ge();
        if (height >= 0)
          t2 = height;
        else
          t2 = -height * 0;
        return H.setRuntimeTypeInfo(new P.Rectangle(left, $top, t1, t2), [$T]);
      }}
  }
}],
["dart.typed_data.implementation", "dart:_native_typed_data", , H, {
  "^": "",
  NativeFloat32List_NativeFloat32List$view: function(buffer, offsetInBytes, $length) {
    if (!J.getInterceptor(buffer).$isNativeByteBuffer)
      H.throwExpression(new P.ArgumentError("Invalid view buffer"));
    return new Float32Array(buffer, offsetInBytes, $length);
  },
  NativeByteBuffer: {
    "^": "Interceptor;",
    $isNativeByteBuffer: true,
    "%": "ArrayBuffer"
  },
  NativeTypedData: {
    "^": "Interceptor;",
    _invalidIndex$2: function(receiver, index, $length) {
      var t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$ge(index, $length))
        throw H.wrapException(P.RangeError$range(index, 0, $length));
      else
        throw H.wrapException(P.ArgumentError$("Invalid list index " + H.S(index)));
    },
    "%": ";ArrayBufferView;NativeTypedArray|NativeTypedArray_ListMixin|NativeTypedArray_ListMixin_FixedLengthListMixin|NativeTypedArrayOfDouble|NativeTypedArray_ListMixin0|NativeTypedArray_ListMixin_FixedLengthListMixin0|NativeTypedArrayOfInt"
  },
  NativeFloat32List: {
    "^": "NativeTypedArrayOfDouble;",
    $index: function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true,
    "%": "Float32Array"
  },
  NativeInt16List: {
    "^": "NativeTypedArrayOfInt;",
    $index: function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    "%": "Int16Array"
  },
  NativeInt32List: {
    "^": "NativeTypedArrayOfInt;",
    $index: function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    "%": "Int32Array"
  },
  NativeUint8List: {
    "^": "NativeTypedArrayOfInt;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    },
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    "%": ";Uint8Array"
  },
  NativeTypedArray: {
    "^": "NativeTypedData;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: true
  },
  NativeTypedArrayOfDouble: {
    "^": "NativeTypedArray_ListMixin_FixedLengthListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true
  },
  NativeTypedArray_ListMixin: {
    "^": "NativeTypedArray+ListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true
  },
  NativeTypedArray_ListMixin_FixedLengthListMixin: {
    "^": "NativeTypedArray_ListMixin+FixedLengthListMixin;"
  },
  NativeTypedArrayOfInt: {
    "^": "NativeTypedArray_ListMixin_FixedLengthListMixin0;",
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true
  },
  NativeTypedArray_ListMixin0: {
    "^": "NativeTypedArray+ListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true
  },
  NativeTypedArray_ListMixin_FixedLengthListMixin0: {
    "^": "NativeTypedArray_ListMixin0+FixedLengthListMixin;"
  }
}],
["dart2js._js_primitives", "dart:_js_primitives", , H, {
  "^": "",
  printString: function(string) {
    if (typeof dartPrint == "function") {
      dartPrint(string);
      return;
    }
    if (typeof console == "object" && typeof console.log == "function") {
      console.log(string);
      return;
    }
    if (typeof window == "object")
      return;
    if (typeof print == "function") {
      print(string);
      return;
    }
    throw "Unable to print message: " + String(string);
  }
}],
["html_common", "dart:html_common", , P, {
  "^": "",
  convertDartToNative_Dictionary: function(dict) {
    var object = {};
    dict.forEach$1(0, new P.convertDartToNative_Dictionary_closure(object));
    return object;
  },
  convertDartToNative_Dictionary_closure: {
    "^": "Closure:26;object_0",
    call$2: function(key, value) {
      this.object_0[key] = value;
    }
  }
}],
["stagexl", "package:stagexl/stagexl.dart", , Z, {
  "^": "",
  TransitionFunction_linear: [function(ratio) {
    return ratio;
  }, "call$1", "TransitionFunction_linear$closure", 2, 0, 11],
  _dispatchBroadcastEvent: function(broadcastEvent, subscriptions) {
    var $length, i, subscription, t1;
    $length = subscriptions.length;
    for (i = 0; i < $length; ++i) {
      if (i < 0 || i >= subscriptions.length)
        return H.ioore(subscriptions, i);
      subscription = subscriptions[i];
      if (!subscription._canceled) {
        broadcastEvent._stopsPropagation = false;
        broadcastEvent._stopsImmediatePropagation = false;
        t1 = subscription._eventStream._stagexl$_target;
        broadcastEvent._stagexl$_target = t1;
        broadcastEvent._currentTarget = t1;
        broadcastEvent._eventPhase = 2;
        subscription.eventListener$1(broadcastEvent);
      } else {
        C.JSArray_methods.removeAt$1(subscriptions, i);
        --$length;
        --i;
      }
    }
  },
  Mouse__getCssStyle: function(mouseCursor) {
    var cursor, style;
    cursor = $.Mouse__customCursor;
    switch (cursor !== "auto" ? cursor : mouseCursor) {
      case "auto":
        style = "auto";
        break;
      case "arrow":
        style = "default";
        break;
      case "button":
        style = "pointer";
        break;
      case "hand":
        style = "move";
        break;
      case "ibeam":
        style = "text";
        break;
      case "wait":
        style = "wait";
        break;
      default:
        style = "auto";
    }
    return $.Mouse__isCursorHidden ? "none" : style;
  },
  _color2rgba: function(color) {
    return "rgba(" + (color >>> 16 & 255) + "," + (color >>> 8 & 255) + "," + (color & 255) + "," + (color >>> 24 & 255) / 255 + ")";
  },
  _ensureInt: function(value) {
    if (typeof value === "number" && Math.floor(value) === value)
      return value;
    else
      throw H.wrapException(new P.ArgumentError("The supplied value (" + H.S(value) + ") is not an int."));
  },
  _ensureNum: function(value) {
    if (typeof value === "number")
      return value;
    else
      throw H.wrapException(new P.ArgumentError("The supplied value (" + H.S(value) + ") is not a number."));
  },
  Animatable: {
    "^": "Object;",
    $isAnimatable: true
  },
  _AnimatableLink: {
    "^": "Object;animatable,nextAnimatableLink"
  },
  Juggler: {
    "^": "Object;_firstAnimatableLink,_lastAnimatableLink,_elapsedTime",
    add$1: function(_, animatable) {
      var animatableLink, t1;
      if (!animatable.$isAnimatable)
        throw H.wrapException(P.ArgumentError$("The supplied animatable does not extend type Animatable."));
      if (!this.contains$1(0, animatable)) {
        animatableLink = new Z._AnimatableLink(null, null);
        t1 = this._lastAnimatableLink;
        t1.animatable = animatable;
        t1.nextAnimatableLink = animatableLink;
        this._lastAnimatableLink = animatableLink;
      }
    },
    contains$1: function(_, animatable) {
      var link, t1;
      link = this._firstAnimatableLink;
      for (t1 = this._lastAnimatableLink; link !== t1;) {
        if (link.animatable === animatable)
          return true;
        link = link.nextAnimatableLink;
      }
      return false;
    },
    advanceTime$1: function(time) {
      var link, lastLink, animatable, nextLink;
      this._elapsedTime = this._elapsedTime + time;
      link = this._firstAnimatableLink;
      lastLink = this._lastAnimatableLink;
      for (; link !== lastLink;) {
        animatable = link.animatable;
        if (animatable == null) {
          nextLink = link.nextAnimatableLink;
          link.animatable = nextLink.animatable;
          link.nextAnimatableLink = nextLink.nextAnimatableLink;
          if (nextLink === lastLink)
            lastLink = link;
          if (nextLink === this._lastAnimatableLink)
            this._lastAnimatableLink = link;
        } else if (!animatable.advanceTime$1(time))
          link.animatable = null;
        else
          link = link.nextAnimatableLink;
      }
      return true;
    },
    $isAnimatable: true
  },
  TweenProperty: {
    "^": "Object;_displayObject,_propertyIndex,_startValue,_targetValue,_deltaValue"
  },
  Tween: {
    "^": "Object;_displayObject,_transitionFunction,_tweenPropertyList,_onStart,_onUpdate,_onComplete,_totalTime,_currentTime,_delay,_roundToInt,_started",
    _transitionFunction$1: function(arg0) {
      return this._transitionFunction.call$1(arg0);
    },
    _onComplete$0: function() {
      return this._onComplete.call$0();
    },
    _addTweenProperty$1: function(propertyIndex) {
      var tweenProperty = new Z.TweenProperty(this._displayObject, propertyIndex, 0 / 0, 0 / 0, 0 / 0);
      if (!this._started)
        this._tweenPropertyList.push(tweenProperty);
      return tweenProperty;
    },
    advanceTime$1: function(time) {
      var t1, t2, i, transition, t3, t4, t5, value;
      t1 = this._currentTime;
      t2 = this._totalTime;
      if (t1 < t2 || !this._started) {
        t1 += time;
        this._currentTime = t1;
        if (t1 > t2) {
          this._currentTime = t2;
          t1 = t2;
        }
        if (t1 >= 0) {
          if (!this._started) {
            this._started = true;
            for (t1 = this._tweenPropertyList, i = 0; i < t1.length; ++i) {
              t2 = t1[i];
              switch (t2._propertyIndex) {
                case 0:
                  t2._startValue = J.get$x$x(t2._displayObject);
                  break;
                case 1:
                  t2._startValue = J.get$y$x(t2._displayObject);
                  break;
                case 2:
                  t2._startValue = t2._displayObject.get$pivotX();
                  break;
                case 3:
                  t2._startValue = t2._displayObject.get$pivotY();
                  break;
                case 4:
                  t2._startValue = t2._displayObject.get$scaleX();
                  break;
                case 5:
                  t2._startValue = t2._displayObject.get$scaleY();
                  break;
                case 6:
                  t2._startValue = t2._displayObject.get$skewX();
                  break;
                case 7:
                  t2._startValue = t2._displayObject.get$skewY();
                  break;
                case 8:
                  t2._startValue = t2._displayObject.get$rotation();
                  break;
                case 9:
                  t2._startValue = J.get$alpha$x(t2._displayObject);
                  break;
                default:
                  t2._startValue = 0;
              }
              if (J.get$isNaN$n(t2._deltaValue) && J.get$isFinite$n(t2._targetValue))
                t2._deltaValue = J.$sub$n(t2._targetValue, t2._startValue);
              if (J.get$isNaN$n(t2._targetValue) && J.get$isFinite$n(t2._deltaValue))
                t2._targetValue = J.$add$ns(t2._startValue, t2._deltaValue);
            }
          }
          transition = J.toDouble$0$n(this._transitionFunction$1(this._currentTime / this._totalTime));
          for (t1 = this._tweenPropertyList, t2 = this._roundToInt, i = 0; i < t1.length; ++i) {
            t3 = t1[i];
            if (J.get$isFinite$n(t3._startValue) && J.get$isFinite$n(t3._targetValue)) {
              t4 = t3._startValue;
              t5 = J.$sub$n(t3._targetValue, t4);
              if (typeof t5 !== "number")
                return H.iae(t5);
              value = J.$add$ns(t4, transition * t5);
              if (t2)
                value = J.roundToDouble$0$n(value);
              switch (t3._propertyIndex) {
                case 0:
                  J.set$x$x(t3._displayObject, value);
                  break;
                case 1:
                  J.set$y$x(t3._displayObject, value);
                  break;
                case 2:
                  t3._displayObject.set$pivotX(value);
                  break;
                case 3:
                  t3._displayObject.set$pivotY(value);
                  break;
                case 4:
                  t3._displayObject.set$scaleX(value);
                  break;
                case 5:
                  t3._displayObject.set$scaleY(value);
                  break;
                case 6:
                  t3._displayObject.set$skewX(value);
                  break;
                case 7:
                  t3._displayObject.set$skewY(value);
                  break;
                case 8:
                  t3._displayObject.set$rotation(value);
                  break;
                case 9:
                  J.set$alpha$x(t3._displayObject, value);
                  break;
              }
            }
          }
          if (this._onComplete != null && this._currentTime === this._totalTime)
            this._onComplete$0();
        }
      }
      return this._currentTime < this._totalTime;
    },
    Tween$3: function(displayObject, time, transitionFunction) {
      if (!J.getInterceptor(this._displayObject).$isDisplayObject)
        throw H.wrapException(P.ArgumentError$("displayObject"));
      this._totalTime = P.max(0.0001, time);
    },
    $isAnimatable: true,
    static: {Tween$: function(displayObject, time, transitionFunction) {
        var t1 = new Z.Tween(displayObject, transitionFunction, H.setRuntimeTypeInfo([], [Z.TweenProperty]), null, null, null, 0, 0, 0, false, false);
        t1.Tween$3(displayObject, time, transitionFunction);
        return t1;
      }}
  },
  DisplayObject: {
    "^": "EventDispatcher;",
    get$x: function(_) {
      return this._x;
    },
    get$y: function(_) {
      return this._y;
    },
    get$pivotX: function() {
      return this._pivotX;
    },
    get$pivotY: function() {
      return this._pivotY;
    },
    get$scaleX: function() {
      return this._scaleX;
    },
    get$scaleY: function() {
      return this._scaleY;
    },
    get$skewX: function() {
      return this._skewX;
    },
    get$skewY: function() {
      return this._skewY;
    },
    get$rotation: function() {
      return this._rotation;
    },
    get$alpha: function(_) {
      return this._alpha;
    },
    get$root: function() {
      var currentObject, currentObject0;
      for (currentObject = this; currentObject0 = currentObject._parent, currentObject0 != null; currentObject = currentObject0)
        ;
      return currentObject;
    },
    get$stage: function() {
      var root = this.get$root();
      return !!J.getInterceptor(root).$isStage ? root : null;
    },
    set$x: function(_, value) {
      if (typeof value === "number")
        this._x = value;
      this._transformationMatrixRefresh = true;
    },
    set$y: function(_, value) {
      if (typeof value === "number")
        this._y = value;
      this._transformationMatrixRefresh = true;
    },
    set$pivotX: function(value) {
      if (typeof value === "number")
        this._pivotX = value;
      this._transformationMatrixRefresh = true;
    },
    set$pivotY: function(value) {
      if (typeof value === "number")
        this._pivotY = value;
      this._transformationMatrixRefresh = true;
    },
    set$scaleX: function(value) {
      if (typeof value === "number")
        this._scaleX = value;
      this._transformationMatrixRefresh = true;
    },
    set$scaleY: function(value) {
      if (typeof value === "number")
        this._scaleY = value;
      this._transformationMatrixRefresh = true;
    },
    set$skewX: function(value) {
      if (typeof value === "number")
        this._skewX = value;
      this._transformationMatrixRefresh = true;
    },
    set$skewY: function(value) {
      if (typeof value === "number")
        this._skewY = value;
      this._transformationMatrixRefresh = true;
    },
    set$rotation: function(value) {
      if (typeof value === "number")
        this._rotation = value;
      this._transformationMatrixRefresh = true;
    },
    set$alpha: function(_, value) {
      if (typeof value === "number") {
        if (value <= 0)
          value = 0;
        this._alpha = value >= 1 ? 1 : value;
      }
    },
    get$transformationMatrix: function() {
      var t1, t2, skewXrotation, skewYrotation, scaleX, scaleY, pivotX, pivotY, cosX, sinX, a, b, c, d;
      if (this._transformationMatrixRefresh) {
        this._transformationMatrixRefresh = false;
        t1 = this._skewX;
        t2 = this._rotation;
        skewXrotation = t1 + t2;
        skewYrotation = this._skewY + t2;
        scaleX = this._scaleX;
        scaleY = this._scaleY;
        pivotX = this._pivotX;
        pivotY = this._pivotY;
        if (scaleX > -0.0001 && scaleX < 0.0001)
          scaleX = scaleX >= 0 ? 0.0001 : -0.0001;
        if (scaleY > -0.0001 && scaleY < 0.0001)
          scaleY = scaleY >= 0 ? 0.0001 : -0.0001;
        if (skewXrotation === 0 && skewYrotation === 0)
          this._transformationMatrix.setTo$6(scaleX, 0, 0, scaleY, this._x - pivotX * scaleX, this._y - pivotY * scaleY);
        else {
          cosX = Math.cos(skewXrotation);
          sinX = Math.sin(skewXrotation);
          if (skewXrotation === skewYrotation) {
            a = scaleX * cosX;
            b = scaleX * sinX;
            c = -scaleY * sinX;
            d = scaleY * cosX;
          } else {
            a = scaleX * Math.cos(skewYrotation);
            b = scaleX * Math.sin(skewYrotation);
            c = -scaleY * sinX;
            d = scaleY * cosX;
          }
          this._transformationMatrix.setTo$6(a, b, c, d, this._x - (pivotX * a + pivotY * c), this._y - (pivotX * b + pivotY * d));
        }
      }
      return this._transformationMatrix;
    },
    getBoundsTransformed$2: function(matrix, returnRectangle) {
      var t1, t2;
      if (returnRectangle != null) {
        t1 = matrix._tx;
        t2 = matrix._ty;
        returnRectangle.left = t1;
        returnRectangle.top = t2;
        returnRectangle.width = 0;
        returnRectangle.height = 0;
      } else
        returnRectangle = H.setRuntimeTypeInfo(new Z.Rectangle0(matrix._tx, matrix._ty, 0, 0), [J.JSNumber]);
      return returnRectangle;
    },
    globalToLocal$1: function(globalPoint) {
      var t1, current;
      t1 = this._tmpMatrix;
      t1.identity$0();
      for (current = this; current != null; current = current._parent)
        t1.concat$1(current.get$transformationMatrix());
      t1.invert$0();
      return t1.transformPoint$1(globalPoint);
    },
    dispatchEvent$1: function(_, $event) {
      var t1, ancestor, ancestors, t2, i;
      t1 = $event.get$captures();
      if (t1 || $event._bubbles) {
        for (ancestor = this._parent, ancestors = null; ancestor != null; ancestor = ancestor._parent)
          if (ancestor._hasPropagationEventListeners$1($event)) {
            if (ancestors == null)
              ancestors = [];
            ancestors.push(ancestor);
          }
      } else
        ancestors = null;
      t2 = ancestors != null;
      if (t2 && t1)
        for (i = ancestors.length - 1; i >= 0; --i) {
          if (i >= ancestors.length)
            return H.ioore(ancestors, i);
          ancestors[i]._dispatchEventInternal$3($event, this, 1);
          if ($event._stopsPropagation)
            return;
        }
      this._dispatchEventInternal$3($event, this, 2);
      if ($event._stopsPropagation)
        return;
      if (t2 && $event._bubbles)
        for (i = 0; i < ancestors.length; ++i) {
          ancestors[i]._dispatchEventInternal$3($event, this, 3);
          if ($event._stopsPropagation)
            return;
        }
    },
    $isDisplayObject: true
  },
  DisplayObjectContainer: {
    "^": "InteractiveObject;",
    addChildAt$2: function(child, index) {
      var t1, t2, childIndex, child0, ancestor;
      if (index > this._children.length)
        throw H.wrapException(new P.ArgumentError("Error #2006: The supplied index is out of bounds."));
      if (child === this)
        throw H.wrapException(new P.ArgumentError("Error #2024: An object cannot be added as a child of itself."));
      t1 = child._parent;
      if (t1 === this) {
        t1 = this._children;
        C.JSArray_methods.remove$1(t1, child);
        C.JSArray_methods.insert$2(t1, index > t1.length ? index - 1 : index, child);
      } else {
        if (t1 != null) {
          t2 = t1._children;
          childIndex = H.Lists_indexOf(t2, child, 0, t2.length);
          if (childIndex === -1)
            H.throwExpression(new P.ArgumentError("Error #2025: The supplied DisplayObject must be a child of the caller."));
          if (childIndex < 0 || childIndex >= t2.length)
            H.throwExpression(new P.ArgumentError("Error #2006: The supplied index is out of bounds."));
          if (childIndex < 0 || childIndex >= t2.length)
            return H.ioore(t2, childIndex);
          child0 = t2[childIndex];
          child0.dispatchEvent$1(0, new Z.Event("removed", true, 2, null, null, false, false));
          if (t1.get$stage() != null)
            t1._dispatchEventDescendants$2(child0, new Z.Event("removedFromStage", false, 2, null, null, false, false));
          child0._parent = null;
          C.JSArray_methods.removeAt$1(t2, childIndex);
        }
        for (ancestor = this; ancestor != null; ancestor = ancestor._parent)
          if (ancestor === child)
            throw H.wrapException(new P.ArgumentError("Error #2150: An object cannot be added as a child to one of it's children (or children's children, etc.)."));
        C.JSArray_methods.insert$2(this._children, index, child);
        child._parent = this;
        child.dispatchEvent$1(0, new Z.Event("added", true, 2, null, null, false, false));
        if (this.get$stage() != null)
          this._dispatchEventDescendants$2(child, new Z.Event("addedToStage", false, 2, null, null, false, false));
      }
    },
    setChildIndex$2: function(child, index) {
      var t1, oldIndex;
      t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$ge(index, this._children.length))
        throw H.wrapException(P.ArgumentError$("Error #2006: The supplied index is out of bounds."));
      t1 = this._children;
      oldIndex = H.Lists_indexOf(t1, child, 0, t1.length);
      if (oldIndex === -1)
        throw H.wrapException(P.ArgumentError$("Error #2025: The supplied DisplayObject must be a child of the caller."));
      C.JSArray_methods.removeAt$1(t1, oldIndex);
      C.JSArray_methods.insert$2(t1, index, child);
    },
    contains$1: function(_, child) {
      for (; true;)
        child = C.JSString_methods.get$parent(child);
      return false;
    },
    getBoundsTransformed$2: function(matrix, returnRectangle) {
      var t1, t2, left, $top, right, bottom, i, child, rectangle;
      if (returnRectangle == null)
        returnRectangle = H.setRuntimeTypeInfo(new Z.Rectangle0(0, 0, 0, 0), [J.JSNumber]);
      t1 = this._children;
      if (t1.length === 0)
        return Z.DisplayObject.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
      for (t2 = this._tmpMatrix, left = 1 / 0, $top = 1 / 0, right = -1 / 0, bottom = -1 / 0, i = 0; i < t1.length; ++i) {
        child = t1[i];
        t2.copyFromAndConcat$2(child.get$transformationMatrix(), matrix);
        rectangle = child.getBoundsTransformed$2(t2, returnRectangle);
        if (J.$lt$n(rectangle.left, left))
          left = rectangle.left;
        if (J.$lt$n(rectangle.top, $top))
          $top = rectangle.top;
        if (J.$gt$n(J.$add$ns(rectangle.left, rectangle.width), right))
          right = J.$add$ns(rectangle.left, rectangle.width);
        if (J.$gt$n(J.$add$ns(rectangle.top, rectangle.height), bottom))
          bottom = J.$add$ns(rectangle.top, rectangle.height);
      }
      returnRectangle.left = left;
      returnRectangle.top = $top;
      returnRectangle.width = J.$sub$n(right, left);
      returnRectangle.height = J.$sub$n(bottom, $top);
      return returnRectangle;
    },
    hitTestInput$2: function(localX, localY) {
      var t1, i, hit, child, matrix, deltaX, deltaY, t2, t3, t4, childX, childY, target;
      localX = J.toDouble$0$n(localX);
      localY = J.toDouble$0$n(localY);
      for (t1 = this._children, i = t1.length - 1, hit = null; i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        child = t1[i];
        matrix = child.get$transformationMatrix();
        if (child._visible && !child._off) {
          deltaX = localX - matrix._tx;
          deltaY = localY - matrix._ty;
          t2 = matrix._d;
          t3 = matrix._c;
          t4 = matrix._det;
          childX = (t2 * deltaX - t3 * deltaY) / t4;
          childY = (matrix._a * deltaY - matrix._b * deltaX) / t4;
          target = Z.DisplayObjectContainer.prototype.hitTestInput$2.call(child, childX, childY);
          if (target == null && child._graphics != null)
            target = child._graphics._hitTestInput$2(childX, childY) ? child : target;
          if (target == null)
            continue;
          if (target.mouseEnabled)
            return this._mouseChildren ? target : this;
          hit = this;
        }
      }
      return hit;
    },
    render$1: function(renderState) {
      var t1, i, child, cs1, t2, matrix, alpha, t3;
      for (t1 = this._children, i = 0; i < t1.length; ++i) {
        child = t1[i];
        if (child._visible && !child._off) {
          cs1 = renderState._currentContextState;
          t2 = cs1._nextContextState;
          if (t2 == null) {
            t2 = new Z._ContextState(new Z.Matrix(1, 0, 0, 1, 0, 0, 1), 1, "source-over", null);
            cs1._nextContextState = t2;
          }
          matrix = child.get$transformationMatrix();
          alpha = child._alpha;
          t2.matrix.copyFromAndConcat$2(matrix, cs1.matrix);
          t2.compositeOperation = cs1.compositeOperation;
          t3 = cs1.alpha;
          if (typeof t3 !== "number")
            return H.iae(t3);
          t2.alpha = alpha * t3;
          renderState._currentContextState = t2;
          t2 = child._filters;
          if (t2 != null)
            t2.length;
          child.render$1(renderState);
          renderState._currentContextState = cs1;
        }
      }
    },
    _collectDescendants$2: function(displayObject, descendants) {
      var children, i;
      descendants.push(displayObject);
      children = displayObject._children;
      for (i = 0; i < children.length; ++i)
        this._collectDescendants$2(children[i], descendants);
    },
    _dispatchEventDescendants$2: function(displayObject, $event) {
      var descendants, i;
      descendants = [];
      this._collectDescendants$2(displayObject, descendants);
      for (i = 0; i < descendants.length; ++i)
        descendants[i].dispatchEvent$1(0, $event);
    }
  },
  Graphics: {
    "^": "Object;_commands,_identityRectangle,_identityRectangleRefresh",
    _getBoundsTransformed$1: function(matrix) {
      var bounds, t1, i;
      bounds = new Z._GraphicsBounds(matrix, 1 / 0, -1 / 0, 1 / 0, -1 / 0, 1 / 0, -1 / 0, 1 / 0, -1 / 0, 0 / 0, 0 / 0);
      for (t1 = this._commands, i = 0; i < t1.length; ++i)
        t1[i].updateBounds$1(bounds);
      return bounds.getRectangle$0();
    },
    _hitTestInput$2: function(localX, localY) {
      var context, t1, i;
      if (this._identityRectangleRefresh) {
        this._identityRectangleRefresh = false;
        this._identityRectangle = this._getBoundsTransformed$1($.get$_identityMatrix());
      }
      if (this._identityRectangle.contains$2(0, localX, localY)) {
        context = $.get$_dummyCanvasContext();
        context.setTransform(1, 0, 0, 1, 0, 0);
        context.beginPath();
        for (t1 = this._commands, i = 0; i < t1.length; ++i)
          if (t1[i].hitTestInput$3(context, localX, localY) === true)
            return true;
      }
      return false;
    },
    render$1: function(renderState) {
      var renderContext, t1, matrix, alpha, context, i;
      renderContext = renderState._renderContext;
      t1 = renderState._currentContextState;
      matrix = t1.matrix;
      alpha = t1.alpha;
      if (!!J.getInterceptor(renderContext).$isRenderContextCanvas) {
        context = renderContext._renderingContext;
        context.setTransform(matrix._a, matrix._b, matrix._c, matrix._d, matrix._tx, matrix._ty);
        context.globalAlpha = alpha;
        context.beginPath();
        for (t1 = this._commands, i = 0; i < t1.length; ++i)
          t1[i].render$1(context);
      }
    },
    static: {"^": "Graphics__BASE_64"}
  },
  _GraphicsCommand: {
    "^": "Object;",
    hitTestInput$3: function(context, localX, localY) {
      this.render$1(context);
      return false;
    },
    updateBounds$1: function(bounds) {
    }
  },
  _GraphicsBounds: {
    "^": "Object;matrix,pathLeft,pathRight,pathTop,pathBottom,boundsLeft,boundsRight,boundsTop,boundsBottom,cursorX,cursorY",
    updatePath$3: function(x, y, transformed) {
      var px, t1, py;
      if (!isNaN(this.cursorX) && !isNaN(this.cursorY)) {
        if (transformed)
          px = x;
        else {
          t1 = this.matrix;
          px = x * t1._a + y * t1._c + t1._tx;
        }
        if (transformed)
          py = y;
        else {
          t1 = this.matrix;
          py = x * t1._b + y * t1._d + t1._ty;
        }
        if (this.pathLeft > px)
          this.pathLeft = px;
        if (this.pathRight < px)
          this.pathRight = px;
        if (this.pathTop > py)
          this.pathTop = py;
        if (this.pathBottom < py)
          this.pathBottom = py;
      }
    },
    updatePath$2: function(x, y) {
      return this.updatePath$3(x, y, false);
    },
    getRectangle$0: function() {
      var t1, t2, t3, t4;
      t1 = this.boundsLeft;
      if (!(t1 == Infinity || t1 == -Infinity)) {
        t2 = this.boundsRight;
        if (!(t2 == Infinity || t2 == -Infinity)) {
          t2 = this.boundsTop;
          if (!(t2 == Infinity || t2 == -Infinity)) {
            t2 = this.boundsBottom;
            t2 = !(t2 == Infinity || t2 == -Infinity);
          } else
            t2 = false;
        } else
          t2 = false;
      } else
        t2 = false;
      if (t2) {
        t2 = this.boundsRight;
        t3 = this.boundsBottom;
        t4 = this.boundsTop;
        return H.setRuntimeTypeInfo(new Z.Rectangle0(t1, t4, t2 - t1, t3 - t4), [J.JSNumber]);
      } else
        return H.setRuntimeTypeInfo(new Z.Rectangle0(0, 0, 0, 0), [J.JSNumber]);
    }
  },
  _GraphicsCommandRect: {
    "^": "_GraphicsCommand;_x,_y,_width,_height",
    render$1: function(context) {
      context.rect(this._x, this._y, this._width, this._height);
    },
    updateBounds$1: function(bounds) {
      var t1, t2;
      t1 = this._x;
      t2 = this._y;
      bounds.cursorX = t1;
      bounds.cursorY = t2;
      bounds.updatePath$2(t1, t2);
      bounds.updatePath$2(this._x + this._width, this._y);
      bounds.updatePath$2(this._x + this._width, this._y + this._height);
      bounds.updatePath$2(this._x, this._y + this._height);
    },
    _GraphicsCommandRect$4: function(x, y, width, height) {
      this._x = x;
      this._y = y;
      this._width = width;
      this._height = height;
    },
    static: {_GraphicsCommandRect$: function(x, y, width, height) {
        var t1 = new Z._GraphicsCommandRect(null, null, null, null);
        t1._GraphicsCommandRect$4(x, y, width, height);
        return t1;
      }}
  },
  _GraphicsCommandFill: {
    "^": "_GraphicsCommand;",
    hitTestInput$3: function(context, localX, localY) {
      return context.isPointInPath(localX, localY);
    },
    updateBounds$1: function(bounds) {
      var t1, t2;
      t1 = bounds.pathLeft;
      if (!(t1 == Infinity || t1 == -Infinity)) {
        t2 = bounds.pathRight;
        if (!(t2 == Infinity || t2 == -Infinity)) {
          t2 = bounds.pathTop;
          if (!(t2 == Infinity || t2 == -Infinity)) {
            t2 = bounds.pathBottom;
            t2 = !(t2 == Infinity || t2 == -Infinity);
          } else
            t2 = false;
        } else
          t2 = false;
      } else
        t2 = false;
      if (t2) {
        if (bounds.boundsLeft > t1)
          bounds.boundsLeft = t1;
        t1 = bounds.boundsRight;
        t2 = bounds.pathRight;
        if (t1 < t2)
          bounds.boundsRight = t2;
        t1 = bounds.boundsTop;
        t2 = bounds.pathTop;
        if (t1 > t2)
          bounds.boundsTop = t2;
        t1 = bounds.boundsBottom;
        t2 = bounds.pathBottom;
        if (t1 < t2)
          bounds.boundsBottom = t2;
      }
    }
  },
  _GraphicsCommandFillColor: {
    "^": "_GraphicsCommandFill;_color",
    render$1: function(context) {
      context.fillStyle = this._color;
      context.fill();
    }
  },
  InteractiveObject: {
    "^": "DisplayObject;tabIndex*",
    $isInteractiveObject: true
  },
  Sprite: {
    "^": "DisplayObjectContainer;buttonMode,hitArea,_graphics,_dropTarget,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,useHandCursor,tabEnabled,tabIndex,_stagexl$_id,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_off,_mask,_shadow,_compositeOperation,_filters,_cacheTextureQuad,_cacheDebugBorder,_name,_parent,_tmpMatrix,_transformationMatrix,_transformationMatrixRefresh,userData,_eventStreams",
    get$graphics: function() {
      var t1 = this._graphics;
      if (t1 != null)
        ;
      else {
        t1 = new Z.Graphics(H.setRuntimeTypeInfo([], [Z._GraphicsCommand]), H.setRuntimeTypeInfo(new Z.Rectangle0(0, 0, 0, 0), [J.JSNumber]), true);
        this._graphics = t1;
      }
      return t1;
    },
    getBoundsTransformed$2: function(matrix, returnRectangle) {
      var t1, graphicsBounds, rLeft, rTop;
      returnRectangle = Z.DisplayObjectContainer.prototype.getBoundsTransformed$2.call(this, matrix, returnRectangle);
      t1 = this._graphics;
      if (t1 != null) {
        graphicsBounds = t1._getBoundsTransformed$1(matrix);
        rLeft = P.min(returnRectangle.left, graphicsBounds.left);
        rTop = P.min(returnRectangle.top, graphicsBounds.top);
        return H.setRuntimeTypeInfo(new Z.Rectangle0(rLeft, rTop, P.max(J.$add$ns(returnRectangle.left, returnRectangle.width), J.$add$ns(graphicsBounds.left, graphicsBounds.width)) - rLeft, P.max(J.$add$ns(returnRectangle.top, returnRectangle.height), J.$add$ns(graphicsBounds.top, graphicsBounds.height)) - rTop), [H.getTypeArgumentByIndex(returnRectangle, 0)]);
      } else
        return returnRectangle;
    },
    getBoundsTransformed$1: function(matrix) {
      return this.getBoundsTransformed$2(matrix, null);
    },
    render$1: function(renderState) {
      var t1 = this._graphics;
      if (t1 != null)
        t1.render$1(renderState);
      Z.DisplayObjectContainer.prototype.render$1.call(this, renderState);
    }
  },
  _MouseButton: {
    "^": "Object;target>,buttonDown,clickTime,clickCount,mouseDownEventType,mouseUpEventType,mouseClickEventType,mouseDoubleClickEventType"
  },
  _Touch: {
    "^": "Object;touchPointID<,target>,primaryTouchPoint<",
    static: {"^": "_Touch__globalTouchPointID"}
  },
  Stage: {
    "^": "DisplayObjectContainer;_canvas,_renderContext,_color,_sourceWidth,_sourceHeight,_frameRate,_canvasWidth,_canvasHeight,_contentRectangle,_clientTransformation,_stageTransformation,_renderLoop,_juggler,_focus,_renderState,_stageRenderMode,_stageScaleMode,_stageAlign,_mouseCursor,_mousePosition,_mouseTarget,_touches,_mouseButtons,_touchEventSubscriptions,_children,_mouseChildren,_tabChildren,doubleClickEnabled,mouseEnabled,useHandCursor,tabEnabled,tabIndex,_stagexl$_id,_x,_y,_pivotX,_pivotY,_scaleX,_scaleY,_skewX,_skewY,_rotation,_alpha,_visible,_off,_mask,_shadow,_compositeOperation,_filters,_cacheTextureQuad,_cacheDebugBorder,_name,_parent,_tmpMatrix,_transformationMatrix,_transformationMatrixRefresh,userData,_eventStreams",
    _throwStageException$0: function() {
      throw H.wrapException(P.UnsupportedError$("Error #2071: The Stage class does not implement this property or method."));
    },
    set$x: function(_, value) {
      this._throwStageException$0();
    },
    set$y: function(_, value) {
      this._throwStageException$0();
    },
    set$pivotX: function(value) {
      this._throwStageException$0();
    },
    set$pivotY: function(value) {
      this._throwStageException$0();
    },
    set$scaleX: function(value) {
      this._throwStageException$0();
    },
    set$scaleY: function(value) {
      this._throwStageException$0();
    },
    set$skewX: function(value) {
      this._throwStageException$0();
    },
    set$skewY: function(value) {
      this._throwStageException$0();
    },
    set$rotation: function(value) {
      this._throwStageException$0();
    },
    set$alpha: function(_, value) {
      this._throwStageException$0();
    },
    _updateCanvasSize$0: function() {
      var client, t1, t2, t3, t4, t5, clientWidth, clientHeight, sourceWidth, sourceHeight, ratioWidth, ratioHeight, scaleY, scaleX, pivotX, pivotY, contentRectangle, t6, pixelRatio;
      client = this._canvas.getBoundingClientRect();
      t1 = this._canvas;
      t2 = t1.clientLeft;
      t3 = J.getInterceptor$x(client);
      t4 = t3.get$left(client);
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t4 !== "number")
        return H.iae(t4);
      t5 = t1.clientTop;
      t3 = t3.get$top(client);
      if (typeof t5 !== "number")
        return t5.$add();
      if (typeof t3 !== "number")
        return H.iae(t3);
      clientWidth = t1.clientWidth;
      clientHeight = t1.clientHeight;
      sourceWidth = this._sourceWidth;
      sourceHeight = this._sourceHeight;
      if (typeof clientWidth !== "number")
        throw H.wrapException("dart2js_hint");
      if (typeof clientHeight !== "number")
        throw H.wrapException("dart2js_hint");
      if (clientWidth === 0 || clientHeight === 0)
        return;
      ratioWidth = clientWidth / sourceWidth;
      ratioHeight = clientHeight / sourceHeight;
      switch (this._stageScaleMode) {
        case "exactFit":
          scaleY = ratioHeight;
          scaleX = ratioWidth;
          break;
        case "noBorder":
          scaleY = ratioWidth > ratioHeight ? ratioWidth : ratioHeight;
          scaleX = scaleY;
          break;
        case "noScale":
          scaleX = 1;
          scaleY = 1;
          break;
        case "showAll":
          scaleY = ratioWidth < ratioHeight ? ratioWidth : ratioHeight;
          scaleX = scaleY;
          break;
        default:
          scaleX = 1;
          scaleY = 1;
      }
      t1 = this._stageAlign;
      switch (t1) {
        case "TR":
        case "R":
        case "BR":
          pivotX = clientWidth - sourceWidth * scaleX;
          break;
        case "T":
        case "":
        case "B":
          pivotX = (clientWidth - sourceWidth * scaleX) / 2;
          break;
        default:
          pivotX = 0;
      }
      switch (t1) {
        case "BL":
        case "B":
        case "BR":
          pivotY = clientHeight - sourceHeight * scaleY;
          break;
        case "L":
        case "":
        case "R":
          pivotY = (clientHeight - sourceHeight * scaleY) / 2;
          break;
        default:
          pivotY = 0;
      }
      contentRectangle = this._contentRectangle;
      contentRectangle.left = -pivotX / scaleX;
      contentRectangle.top = -pivotY / scaleY;
      contentRectangle.width = clientWidth / scaleX;
      contentRectangle.height = clientHeight / scaleY;
      t1 = $.get$Stage_autoHiDpi() === true ? $.get$_devicePixelRatio() : 1;
      t6 = $.get$_backingStorePixelRatio();
      if (typeof t1 !== "number")
        return t1.$div();
      pixelRatio = t1 / t6;
      t6 = this._stageTransformation;
      t6.setTo$6(scaleX, 0, 0, scaleY, pivotX, pivotY);
      t6.scale$2(0, pixelRatio, pixelRatio);
      t6 = this._clientTransformation;
      t6.setTo$6(1, 0, 0, 1, -(t2 + t4) - pivotX, -(t5 + t3) - pivotY);
      t6.scale$2(0, 1 / scaleX, 1 / scaleY);
      if (this._canvasWidth !== clientWidth || this._canvasHeight !== clientHeight) {
        this._canvasWidth = clientWidth;
        this._canvasHeight = clientHeight;
        this._canvas.width = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(clientWidth * pixelRatio));
        this._canvas.height = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._canvasHeight * pixelRatio));
        t1 = this._canvas;
        if (t1.clientWidth !== clientWidth || t1.clientHeight !== clientHeight) {
          J.set$width$x(t1.style, H.S(clientWidth) + "px");
          J.set$height$x(this._canvas.style, H.S(clientHeight) + "px");
        }
        this.dispatchEvent$1(0, new Z.Event("resize", false, 2, null, null, false, false));
      }
    },
    _onMouseCursorChanged$1: [function(action) {
      J.set$cursor$x(this._canvas.style, Z.Mouse__getCssStyle(this._mouseCursor));
    }, "call$1", "get$_onMouseCursorChanged", 2, 0, 1],
    _onMouseEvent$1: [function($event) {
      var t1, t2, button, stagePoint, mouseButton, target, mouseCursor, p, oldTargetList, newTargetList, p0, t3, t4, commonCount, t5, ot, nt, i, target0, mouseEventType, isClick, isDoubleClick, localPoint;
      t1 = J.getInterceptor$x($event);
      t1.preventDefault$0($event);
      t2 = Date.now();
      new P.DateTime(t2, false).DateTime$_now$0();
      button = t1.get$button($event);
      stagePoint = this._clientTransformation.transformPoint$1(H.setRuntimeTypeInfo(new P.Point0($event.clientX, $event.clientY), [null]));
      if (typeof button !== "number")
        return button.$lt();
      if (button < 0 || button > 2)
        return;
      if ($event.type === "mousemove") {
        t1 = this._mousePosition;
        t1 = J.$eq(t1.x, stagePoint.x) && J.$eq(t1.y, stagePoint.y);
      } else
        t1 = false;
      if (t1)
        return;
      t1 = this._mouseButtons;
      if (button < 0 || button >= 3)
        return H.ioore(t1, button);
      mouseButton = t1[button];
      this._mousePosition = stagePoint;
      target = $event.type !== "mouseout" ? this.hitTestInput$2(stagePoint.x, stagePoint.y) : null;
      t1 = J.getInterceptor(target);
      mouseCursor = !!t1.$isInteractiveObject && target.useHandCursor ? "button" : "arrow";
      if (this._mouseCursor !== mouseCursor) {
        this._mouseCursor = mouseCursor;
        J.set$cursor$x(this._canvas.style, Z.Mouse__getCssStyle(mouseCursor));
      }
      p = this._mouseTarget;
      if (p == null ? target != null : p !== target) {
        oldTargetList = [];
        newTargetList = [];
        for (p0 = p; p0 != null; p0 = p0._parent)
          oldTargetList.push(p0);
        for (p0 = target; p0 != null; p0 = p0._parent)
          newTargetList.push(p0);
        for (t3 = oldTargetList.length, t4 = newTargetList.length, commonCount = 0; true; ++commonCount) {
          if (commonCount === t3)
            break;
          if (commonCount === t4)
            break;
          t5 = t3 - commonCount - 1;
          if (t5 < 0)
            return H.ioore(oldTargetList, t5);
          ot = oldTargetList[t5];
          t5 = t4 - commonCount - 1;
          if (t5 < 0)
            return H.ioore(newTargetList, t5);
          nt = newTargetList[t5];
          if (ot == null ? nt != null : ot !== nt)
            break;
        }
        if (p != null) {
          t3 = new Z.MouseEvent(0, 0, 0, 0, 0, 0, false, false, false, false, 0, "mouseOut", true, 2, null, null, false, false);
          t4 = p.globalToLocal$1(stagePoint);
          t3._localX = t4.x;
          t3._localY = t4.y;
          t3._stageX = stagePoint.x;
          t3._stageY = stagePoint.y;
          t3._buttonDown = mouseButton.buttonDown;
          t3._altKey = $event.altKey;
          t3._ctrlKey = $event.ctrlKey;
          t3._shiftKey = $event.shiftKey;
          p.dispatchEvent$1(0, t3);
        }
        for (i = 0; i < oldTargetList.length - commonCount; ++i) {
          target0 = oldTargetList[i];
          t3 = new Z.MouseEvent(0, 0, 0, 0, 0, 0, false, false, false, false, 0, "rollOut", false, 2, null, null, false, false);
          t4 = target0.globalToLocal$1(stagePoint);
          t3._localX = t4.x;
          t3._localY = t4.y;
          t3._stageX = stagePoint.x;
          t3._stageY = stagePoint.y;
          t3._buttonDown = mouseButton.buttonDown;
          t3._altKey = $event.altKey;
          t3._ctrlKey = $event.ctrlKey;
          t3._shiftKey = $event.shiftKey;
          target0.dispatchEvent$1(0, t3);
        }
        for (i = newTargetList.length - commonCount - 1; i >= 0; --i) {
          if (i >= newTargetList.length)
            return H.ioore(newTargetList, i);
          target0 = newTargetList[i];
          t3 = new Z.MouseEvent(0, 0, 0, 0, 0, 0, false, false, false, false, 0, "rollOver", false, 2, null, null, false, false);
          t4 = target0.globalToLocal$1(stagePoint);
          t3._localX = t4.x;
          t3._localY = t4.y;
          t3._stageX = stagePoint.x;
          t3._stageY = stagePoint.y;
          t3._buttonDown = mouseButton.buttonDown;
          t3._altKey = $event.altKey;
          t3._ctrlKey = $event.ctrlKey;
          t3._shiftKey = $event.shiftKey;
          target0.dispatchEvent$1(0, t3);
        }
        if (target != null) {
          t3 = new Z.MouseEvent(0, 0, 0, 0, 0, 0, false, false, false, false, 0, "mouseOver", true, 2, null, null, false, false);
          t4 = target.globalToLocal$1(stagePoint);
          t3._localX = t4.x;
          t3._localY = t4.y;
          t3._stageX = stagePoint.x;
          t3._stageY = stagePoint.y;
          t3._buttonDown = mouseButton.buttonDown;
          t3._altKey = $event.altKey;
          t3._ctrlKey = $event.ctrlKey;
          t3._shiftKey = $event.shiftKey;
          t1.dispatchEvent$1(target, t3);
        }
        this._mouseTarget = target;
      }
      if ($event.type === "mousedown") {
        this._canvas.focus();
        mouseEventType = mouseButton.mouseDownEventType;
        t3 = mouseButton.target;
        if ((target == null ? t3 != null : target !== t3) || t2 > mouseButton.clickTime + 500)
          mouseButton.clickCount = 0;
        mouseButton.buttonDown = true;
        mouseButton.target = target;
        mouseButton.clickTime = t2;
        mouseButton.clickCount = mouseButton.clickCount + 1;
      } else
        mouseEventType = null;
      if ($event.type === "mouseup") {
        mouseEventType = mouseButton.mouseUpEventType;
        mouseButton.buttonDown = false;
        t3 = mouseButton.target;
        isClick = t3 == null ? target == null : t3 === target;
        isDoubleClick = isClick && (mouseButton.clickCount & 1) === 0 && t2 < mouseButton.clickTime + 500;
      } else {
        isClick = false;
        isDoubleClick = false;
      }
      t2 = $event.type;
      if (t2 === "mousemove")
        mouseEventType = "mouseMove";
      if (t2 === "contextmenu")
        mouseEventType = "contextMenu";
      if (mouseEventType != null && target != null) {
        localPoint = target.globalToLocal$1(stagePoint);
        t2 = new Z.MouseEvent(0, 0, 0, 0, 0, 0, false, false, false, false, 0, mouseEventType, true, 2, null, null, false, false);
        t2._localX = localPoint.x;
        t2._localY = localPoint.y;
        t2._stageX = stagePoint.x;
        t2._stageY = stagePoint.y;
        t2._buttonDown = mouseButton.buttonDown;
        t2._clickCount = mouseButton.clickCount;
        t2._altKey = $event.altKey;
        t2._ctrlKey = $event.ctrlKey;
        t2._shiftKey = $event.shiftKey;
        t1.dispatchEvent$1(target, t2);
        if (isClick) {
          t2 = isDoubleClick && target.doubleClickEnabled;
          t3 = localPoint.x;
          if (t2) {
            t2 = new Z.MouseEvent(0, 0, 0, 0, 0, 0, false, false, false, false, 0, mouseButton.mouseDoubleClickEventType, true, 2, null, null, false, false);
            t2._localX = t3;
            t2._localY = localPoint.y;
            t2._stageX = stagePoint.x;
            t2._stageY = stagePoint.y;
            t2._buttonDown = mouseButton.buttonDown;
            t2._altKey = $event.altKey;
            t2._ctrlKey = $event.ctrlKey;
            t2._shiftKey = $event.shiftKey;
            t1.dispatchEvent$1(target, t2);
          } else {
            t2 = new Z.MouseEvent(0, 0, 0, 0, 0, 0, false, false, false, false, 0, mouseButton.mouseClickEventType, true, 2, null, null, false, false);
            t2._localX = t3;
            t2._localY = localPoint.y;
            t2._stageX = stagePoint.x;
            t2._stageY = stagePoint.y;
            t2._buttonDown = mouseButton.buttonDown;
            t2._altKey = $event.altKey;
            t2._ctrlKey = $event.ctrlKey;
            t2._shiftKey = $event.shiftKey;
            t1.dispatchEvent$1(target, t2);
          }
        }
      }
    }, "call$1", "get$_onMouseEvent", 2, 0, 27],
    _onMouseWheelEvent$1: [function($event) {
      var t1, stagePoint, target, mouseEvent, t2;
      t1 = J.getInterceptor$x($event);
      stagePoint = this._clientTransformation.transformPoint$1(t1.get$client($event));
      target = this.hitTestInput$2(stagePoint.x, stagePoint.y);
      if (target != null) {
        mouseEvent = new Z.MouseEvent(0, 0, 0, 0, 0, 0, false, false, false, false, 0, "mouseWheel", true, 2, null, null, false, false);
        t2 = target.globalToLocal$1(stagePoint);
        mouseEvent._localX = t2.x;
        mouseEvent._localY = t2.y;
        mouseEvent._stageX = stagePoint.x;
        mouseEvent._stageY = stagePoint.y;
        mouseEvent._deltaX = t1.get$deltaX($event);
        mouseEvent._deltaY = C.WheelEvent_methods.get$deltaY($event);
        mouseEvent._altKey = $event.altKey;
        mouseEvent._ctrlKey = $event.ctrlKey;
        mouseEvent._shiftKey = $event.shiftKey;
        target.dispatchEvent$1(0, mouseEvent);
        if (mouseEvent._stopsPropagation)
          $event.preventDefault();
      }
    }, "call$1", "get$_onMouseWheelEvent", 2, 0, 28],
    _onMultitouchInputModeChanged$1: [function(inputMode) {
      var t1, t2, t3, t4, t5, t6;
      H.IterableMixinWorkaround_forEach(this._touchEventSubscriptions, new Z.Stage__onMultitouchInputModeChanged_closure());
      if ($.Multitouch__inputMode === "touchPoint") {
        t1 = C.EventStreamProvider_touchstart.forElement$1(this._canvas);
        t1 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onTouchEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)]);
        t1._tryResume$0();
        t2 = C.EventStreamProvider_touchend.forElement$1(this._canvas);
        t2 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(this.get$_onTouchEvent()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)]);
        t2._tryResume$0();
        t3 = C.EventStreamProvider_touchmove.forElement$1(this._canvas);
        t3 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(this.get$_onTouchEvent()), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)]);
        t3._tryResume$0();
        t4 = C.EventStreamProvider_touchenter.forElement$1(this._canvas);
        t4 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t4._target, t4._eventType, W._wrapZone(this.get$_onTouchEvent()), t4._useCapture), [H.getTypeArgumentByIndex(t4, 0)]);
        t4._tryResume$0();
        t5 = C.EventStreamProvider_touchleave.forElement$1(this._canvas);
        t5 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t5._target, t5._eventType, W._wrapZone(this.get$_onTouchEvent()), t5._useCapture), [H.getTypeArgumentByIndex(t5, 0)]);
        t5._tryResume$0();
        t6 = C.EventStreamProvider_touchcancel.forElement$1(this._canvas);
        t6 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t6._target, t6._eventType, W._wrapZone(this.get$_onTouchEvent()), t6._useCapture), [H.getTypeArgumentByIndex(t6, 0)]);
        t6._tryResume$0();
        this._touchEventSubscriptions = [t1, t2, t3, t4, t5, t6];
      }
    }, "call$1", "get$_onMultitouchInputModeChanged", 2, 0, 1],
    _onTouchEvent$1: [function($event) {
      var t1, t2, t3, changedTouch, identifier, t4, stagePoint, target, touch, t5, t6, t7, touchEventType;
      t1 = J.getInterceptor$x($event);
      t1.preventDefault$0($event);
      for (t1 = J.get$iterator$ax(t1.get$changedTouches($event)), t2 = this._touches, t3 = this._clientTransformation; t1.moveNext$0();) {
        changedTouch = t1._html$_current;
        identifier = changedTouch.identifier;
        t4 = new P.Point0(changedTouch.clientX, changedTouch.clientY);
        t4.$builtinTypeInfo = [null];
        stagePoint = t3.transformPoint$1(t4);
        target = this.hitTestInput$2(stagePoint.x, stagePoint.y);
        if (t2.containsKey$1(identifier))
          touch = t2.$index(0, identifier);
        else {
          t4 = t2._collection$_length;
          t5 = $._Touch__globalTouchPointID;
          $._Touch__globalTouchPointID = t5 + 1;
          touch = new Z._Touch(t5, target, t4 === 0);
        }
        t4 = J.getInterceptor$x(touch);
        if (t4.get$target(touch) != null && !J.$eq(t4.get$target(touch), target)) {
          t5 = t4.get$target(touch);
          t6 = new Z.TouchEvent(0, false, 0, 0, 0, 0, false, false, false, 1, 0, 0, "touchOut", true, 2, null, null, false, false);
          if (t4.get$target(touch).get$stage() != null)
            t7 = t4.get$target(touch).globalToLocal$1(stagePoint);
          else {
            t7 = new Z.Point(0, 0);
            t7.$builtinTypeInfo = [J.JSNumber];
          }
          t6._localX = t7.x;
          t6._localY = t7.y;
          t6._stageX = stagePoint.x;
          t6._stageY = stagePoint.y;
          t6._touchPointID = touch.get$touchPointID();
          t6._isPrimaryTouchPoint = touch.get$primaryTouchPoint();
          t6._altKey = $event.altKey;
          t6._ctrlKey = $event.ctrlKey;
          t6._shiftKey = $event.shiftKey;
          J.dispatchEvent$1$x(t5, t6);
          touch.target = null;
        }
        t5 = target != null;
        if (t5 && target !== t4.get$target(touch)) {
          t4 = new Z.TouchEvent(0, false, 0, 0, 0, 0, false, false, false, 1, 0, 0, "touchOver", true, 2, null, null, false, false);
          t6 = target.globalToLocal$1(stagePoint);
          t4._localX = t6.x;
          t4._localY = t6.y;
          t4._stageX = stagePoint.x;
          t4._stageY = stagePoint.y;
          t4._touchPointID = touch.get$touchPointID();
          t4._isPrimaryTouchPoint = touch.get$primaryTouchPoint();
          t4._altKey = $event.altKey;
          t4._ctrlKey = $event.ctrlKey;
          t4._shiftKey = $event.shiftKey;
          target.dispatchEvent$1(0, t4);
          touch.target = target;
        }
        if ($event.type === "touchstart") {
          this._canvas.focus();
          t2.$indexSet(0, identifier, touch);
          touchEventType = "touchBegin";
        } else
          touchEventType = null;
        if ($event.type === "touchend") {
          t2.remove$1(0, identifier);
          touchEventType = "touchEnd";
        }
        if ($event.type === "touchcancel") {
          t2.remove$1(0, identifier);
          touchEventType = "touchCancel";
        }
        if ($event.type === "touchmove")
          touchEventType = "touchMove";
        if (touchEventType != null && t5) {
          t4 = new Z.TouchEvent(0, false, 0, 0, 0, 0, false, false, false, 1, 0, 0, touchEventType, true, 2, null, null, false, false);
          t5 = target.globalToLocal$1(stagePoint);
          t4._localX = t5.x;
          t4._localY = t5.y;
          t4._stageX = stagePoint.x;
          t4._stageY = stagePoint.y;
          t4._touchPointID = touch.get$touchPointID();
          t4._isPrimaryTouchPoint = touch.get$primaryTouchPoint();
          t4._altKey = $event.altKey;
          t4._ctrlKey = $event.ctrlKey;
          t4._shiftKey = $event.shiftKey;
          target.dispatchEvent$1(0, t4);
        }
      }
    }, "call$1", "get$_onTouchEvent", 2, 0, 29],
    _onKeyEvent$1: [function($event) {
      var t1 = J.getInterceptor$x($event);
      if (t1.get$keyCode($event) === 8)
        t1.preventDefault$0($event);
      return;
    }, "call$1", "get$_onKeyEvent", 2, 0, 30],
    Stage$6$color$frameRate$height$webGL$width: function(canvas, color, frameRate, height, webGL, width) {
      var t1, t2, exception;
      if (!J.getInterceptor(canvas).$isCanvasElement)
        throw H.wrapException(new P.ArgumentError("The canvas argument is not a CanvasElement"));
      this._canvas = canvas;
      if (J.get$tabIndex$x(canvas) === -1)
        J.set$tabIndex$x(canvas, 0);
      if (J.get$outline$x(J.get$style$x(canvas)) === "")
        J.set$outline$x(J.get$style$x(canvas), "none");
      this._color = Z._ensureInt(color);
      this._sourceWidth = Z._ensureInt(width);
      this._sourceHeight = Z._ensureInt(height);
      this._frameRate = Z._ensureInt(frameRate);
      if (webGL && !!window.WebGLRenderingContext)
        try {
          t1 = canvas;
          t2 = Z.RenderProgramQuad$();
          t2 = new Z.RenderContextWebGL(t1, t2, new Z.RenderProgramTriangle("      attribute vec2 aVertexPosition;\r\n      attribute vec4 aVertexColor;\r\n      varying vec4 vColor;\r\n\r\n      void main() {\r\n        vColor = aVertexColor;\r\n        gl_Position = vec4(aVertexPosition, 0.0, 1.0); \r\n      }\r\n      ", "      precision mediump float;\r\n      varying vec4 vColor;\r\n\r\n      void main() {\r\n        gl_FragColor = vColor; \r\n      }\r\n      ", null, null, null, null, new Float32Array(4608), 0, 0, 0), H.setRuntimeTypeInfo([], [Z.RenderFrameBuffer]), null, null, null, null, 0, null);
          t2.RenderContextWebGL$1(t1);
          this._renderContext = t2;
        } catch (exception) {
          H.unwrapException(exception);
          this._renderContext = Z.RenderContextCanvas$(canvas);
        }

      else
        this._renderContext = Z.RenderContextCanvas$(canvas);
      t1 = this._renderContext;
      this._renderState = Z.RenderState$(t1, t1.get$viewPortMatrix(), null, null);
      this._updateCanvasSize$0();
      P.print("StageXL render engine : " + this._renderContext.get$renderEngine());
      t1 = C.EventStreamProvider_keydown.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onKeyEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_keyup.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onKeyEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_keypress.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onKeyEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_mousedown.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onMouseEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_mouseup.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onMouseEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_mousemove.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onMouseEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_mouseout.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onMouseEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_contextmenu.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onMouseEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C._CustomEventStreamProvider__determineMouseWheelEventType.forElement$1(canvas);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_onMouseWheelEvent()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      $.get$Mouse__onMouseCursorChanged().listen$1(this.get$_onMouseCursorChanged());
      $.get$Multitouch__onInputModeChanged().listen$1(this.get$_onMultitouchInputModeChanged());
      this._onMultitouchInputModeChanged$1(null);
    },
    $isStage: true,
    static: {"^": "Stage_autoHiDpi,Stage_resizeEvent", Stage$: function(canvas, color, frameRate, height, webGL, width) {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = H.setRuntimeTypeInfo(new Z.Rectangle0(0, 0, 0, 0), [J.JSNumber]);
        t2 = Z.Matrix$fromIdentity();
        t3 = Z.Matrix$fromIdentity();
        t4 = new Z.Juggler(null, null, 0);
        t5 = new Z._AnimatableLink(null, null);
        t4._firstAnimatableLink = t5;
        t4._lastAnimatableLink = t5;
        t5 = H.setRuntimeTypeInfo(new Z.Point(0, 0), [J.JSNumber]);
        t6 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, Z._Touch);
        t7 = H.setRuntimeTypeInfo([], [Z.DisplayObject]);
        t8 = $.DisplayObject__nextID;
        $.DisplayObject__nextID = t8 + 1;
        t8 = new Z.Stage(null, null, 0, 0, 0, 30, -1, -1, t1, t2, t3, null, t4, null, null, "auto", "showAll", "", "arrow", t5, null, t6, [new Z._MouseButton(null, false, 0, 0, "mouseDown", "mouseUp", "click", "doubleClick"), new Z._MouseButton(null, false, 0, 0, "middleMouseDown", "middleMouseUp", "middleClick", "middleClick"), new Z._MouseButton(null, false, 0, 0, "rightMouseDown", "rightMouseUp", "rightClick", "rightClick")], [], t7, true, true, false, true, false, true, 0, t8, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, true, false, null, null, null, null, null, false, "", null, Z.Matrix$fromIdentity(), Z.Matrix$fromIdentity(), true, null, null);
        t8.Stage$6$color$frameRate$height$webGL$width(canvas, color, frameRate, height, webGL, width);
        return t8;
      }}
  },
  Stage__onMultitouchInputModeChanged_closure: {
    "^": "Closure:14;",
    call$1: function(s) {
      return s.cancel$0();
    }
  },
  RenderContext: {
    "^": "EventDispatcher;"
  },
  RenderContextCanvas: {
    "^": "RenderContext;_canvasElement,_renderingContext,_eventStreams",
    get$renderEngine: function() {
      return "Canvas2D";
    },
    get$viewPortMatrix: function() {
      return Z.Matrix$fromIdentity();
    },
    reset$0: function(_) {
    },
    clear$1: function(_, color) {
      var t1, t2, t3, t4;
      this._renderingContext.setTransform(1, 0, 0, 1, 0, 0);
      t1 = this._renderingContext;
      t1.globalAlpha = 1;
      t2 = this._canvasElement;
      if ((color & 4278190080) >>> 0 === 0)
        t1.clearRect(0, 0, t2.width, t2.height);
      else {
        t3 = C.JSInt_methods._shrOtherPositive$1(color, 16);
        t4 = C.JSInt_methods._shrOtherPositive$1(color, 8);
        t1.fillStyle = "rgb(" + (t3 & 255) + "," + (t4 & 255) + "," + (color & 255) + ")";
        this._renderingContext.fillRect(0, 0, t2.width, t2.height);
      }
    },
    flush$0: function(_) {
    },
    renderQuad$2: function(renderState, renderTextureQuad) {
      var context, source, rotation, xyList, t1, matrix, sourceX, sourceY, t2, destinationX, destinationY, destinationWidth, destinationHeight, t3, t4;
      context = this._renderingContext;
      source = renderTextureQuad._stagexl$_renderTexture._canvas;
      rotation = renderTextureQuad._rotation;
      xyList = renderTextureQuad._xyList;
      t1 = renderState._currentContextState;
      matrix = t1.matrix;
      context.globalAlpha = t1.alpha;
      context.globalCompositeOperation = t1.compositeOperation;
      if (rotation === 0) {
        sourceX = xyList[0];
        sourceY = xyList[1];
        t1 = xyList[4];
        t2 = xyList[5];
        destinationX = renderTextureQuad._offsetX;
        destinationY = renderTextureQuad._offsetY;
        destinationWidth = renderTextureQuad._textureWidth;
        destinationHeight = renderTextureQuad._textureHeight;
        context.setTransform(matrix._a, matrix._b, matrix._c, matrix._d, matrix._tx, matrix._ty);
        context.drawImage(source, sourceX, sourceY, t1 - sourceX, t2 - sourceY, destinationX, destinationY, destinationWidth, destinationHeight);
      } else if (rotation === 1) {
        sourceX = xyList[6];
        sourceY = xyList[7];
        t1 = xyList[2];
        t2 = xyList[3];
        t3 = renderTextureQuad._offsetY;
        t4 = renderTextureQuad._textureHeight;
        destinationY = renderTextureQuad._offsetX;
        destinationHeight = renderTextureQuad._textureWidth;
        context.setTransform(-matrix._c, -matrix._d, matrix._a, matrix._b, matrix._tx, matrix._ty);
        context.drawImage(source, sourceX, sourceY, t1 - sourceX, t2 - sourceY, 0 - t3 - t4, destinationY, t4, destinationHeight);
      }
    },
    RenderContextCanvas$1: function(canvasElement) {
      var renderingContext = this._canvasElement.getContext("2d");
      if (!J.getInterceptor(renderingContext).$isCanvasRenderingContext2D)
        throw H.wrapException(new P.StateError("Failed to get Canvas context."));
      this._renderingContext = renderingContext;
    },
    $isRenderContextCanvas: true,
    static: {RenderContextCanvas$: function(canvasElement) {
        var t1 = new Z.RenderContextCanvas(canvasElement, null, null);
        t1.RenderContextCanvas$1(canvasElement);
        return t1;
      }}
  },
  RenderContextWebGL: {
    "^": "RenderContext;_canvasElement,_renderProgramQuad,_renderProgramTriangle,_renderFrameBufferPool,_renderingContext,_stagexl$_renderTexture,_renderProgram,_renderFrameBuffer,_stencilDepth,_eventStreams",
    get$renderEngine: function() {
      return "WebGL";
    },
    get$viewPortMatrix: function() {
      var t1, width, height;
      t1 = this._renderingContext;
      width = t1.drawingBufferWidth;
      height = t1.drawingBufferHeight;
      if (typeof width !== "number")
        return H.iae(width);
      if (typeof height !== "number")
        return H.iae(height);
      return Z.Matrix$(2 / width, 0, 0, -2 / height, -1, 1);
    },
    reset$0: function(_) {
      var t1, width, height;
      t1 = this._renderingContext;
      width = t1.drawingBufferWidth;
      height = t1.drawingBufferHeight;
      t1.bindFramebuffer(36160, null);
      this._renderingContext.viewport(0, 0, width, height);
      this._renderFrameBuffer = null;
    },
    clear$1: function(_, color) {
      var t1, t2, t3;
      t1 = C.JSInt_methods._shrOtherPositive$1(color, 16);
      t2 = C.JSInt_methods._shrOtherPositive$1(color, 8);
      t3 = C.JSInt_methods._shrOtherPositive$1(color, 24);
      this._renderingContext.colorMask(true, true, true, true);
      this._renderingContext.clearColor((t1 & 255) / 255, (t2 & 255) / 255, (color & 255) / 255, (t3 & 255) / 255);
      this._renderingContext.clear(17408);
      this._updateStencilDepth$1(0);
    },
    flush$0: function(_) {
      this._renderProgram.flush$0(0);
    },
    renderQuad$2: function(renderState, renderTextureQuad) {
      var t1, t2, t3;
      t1 = this._renderProgramQuad;
      this.activateRenderProgram$1(t1);
      t2 = renderTextureQuad._stagexl$_renderTexture;
      t3 = this._stagexl$_renderTexture;
      if (t2 == null ? t3 != null : t2 !== t3) {
        this._renderProgram.flush$0(0);
        this._stagexl$_renderTexture = t2;
        if (t2._texture == null) {
          if (t2._renderingContext == null) {
            t2._renderingContext = this._renderingContext;
            t2._contextRestoredSubscription = this.on$1(0, C.EventStreamProvider_contextRestored.eventType).listen$1(t2.get$_onContextRestored());
          }
          t2._texture = t2._renderingContext.createTexture();
          t2._renderingContext.activeTexture(33984);
          t2._renderingContext.bindTexture(3553, t2._texture);
          t2._renderingContext.texImage2D(3553, 0, 6408, 6408, 5121, t2._canvas);
          t2._renderingContext.texParameteri(3553, 10242, 33071);
          t2._renderingContext.texParameteri(3553, 10243, 33071);
          t2._renderingContext.texParameteri(3553, 10241, 9729);
          t2._renderingContext.texParameteri(3553, 10240, 9729);
        } else {
          t2._renderingContext.activeTexture(33984);
          t2._renderingContext.bindTexture(3553, t2._texture);
        }
      }
      t1.renderQuad$2(renderState, renderTextureQuad);
    },
    activateRenderProgram$1: function(renderProgram) {
      var t1 = this._renderProgram;
      if (renderProgram !== t1) {
        t1.flush$0(0);
        this._renderProgram = renderProgram;
        renderProgram.activate$1(this);
      }
    },
    _onContextLost$1: [function(contextEvent) {
      J.preventDefault$0$x(contextEvent);
      this._dispatchEventInternal$3(new Z.Event("contextLost", false, 2, null, null, false, false), this, 2);
    }, "call$1", "get$_onContextLost", 2, 0, 31],
    _onContextRestored$1: [function(contextEvent) {
      this._dispatchEventInternal$3(new Z.Event("contextRestored", false, 2, null, null, false, false), this, 2);
    }, "call$1", "get$_onContextRestored", 2, 0, 31],
    _updateStencilDepth$1: function(stencilDepth) {
      var t1 = this._renderFrameBuffer;
      if (t1 != null) {
        if (t1.get$_stencilDepth() !== stencilDepth) {
          t1._stencilDepth = stencilDepth;
          this._updateStencilState$1(stencilDepth);
        }
      } else if (this._stencilDepth !== stencilDepth) {
        this._stencilDepth = stencilDepth;
        this._updateStencilState$1(stencilDepth);
      }
    },
    _updateStencilState$1: function(stencilDepth) {
      var t1 = this._renderingContext;
      if (stencilDepth === 0)
        t1.disable(2960);
      else {
        t1.enable(2960);
        this._renderingContext.stencilFunc(514, stencilDepth, 255);
      }
    },
    RenderContextWebGL$1: function(canvasElement) {
      var t1, t2, options, context;
      t1 = this._canvasElement;
      t2 = C.EventStreamProvider_webglcontextlost.forElement$1(t1);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(this.get$_onContextLost()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t2 = C.EventStreamProvider_webglcontextrestored.forElement$1(t1);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(this.get$_onContextRestored()), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      options = H.fillLiteralMap(["alpha", false, "depth", false, "stencil", true, "antialias", false, "premultipliedAlpha", true, "preserveDrawingBuffer", false], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      context = J.getInterceptor$x(t1).getContext$2(t1, "webgl", options);
      if (context == null)
        context = C.CanvasElement_methods.getContext$2(t1, "experimental-webgl", options);
      if (!J.getInterceptor(context).$isRenderingContext)
        throw H.wrapException(new P.StateError("Failed to get WebGL context."));
      this._renderingContext = context;
      context.enable(3042);
      this._renderingContext.disable(2960);
      this._renderingContext.disable(2929);
      this._renderingContext.disable(2884);
      this._renderingContext.pixelStorei(37441, 1);
      this._renderingContext.blendFunc(1, 771);
      t1 = this._renderProgramQuad;
      this._renderProgram = t1;
      t1.activate$1(this);
      this._renderFrameBuffer = null;
    }
  },
  RenderFrameBuffer: {
    "^": "Object;"
  },
  RenderLoop: {
    "^": "Object;_juggler,_stages,_renderTime,_requestId,_invalidate,_enterFrameEvent,_exitFrameEvent,_renderEvent",
    _requestAnimationFrame$0: function(_) {
      var t1, t2;
      if (this._requestId == null) {
        t1 = window;
        t2 = this.get$_onAnimationFrame();
        C.Window_methods._ensureRequestAnimationFrame$0(t1);
        this._requestId = C.Window_methods._html$_requestAnimationFrame$1(t1, W._wrapZone(t2));
      }
    },
    _onAnimationFrame$1: [function(currentTime) {
      var t1, deltaTime, deltaTimeSec, currentTimeSec, i, t2, t3;
      this._requestId = null;
      this._requestAnimationFrame$0(0);
      currentTime = J.toDouble$0$n(currentTime);
      t1 = this._renderTime;
      if (t1 === -1) {
        this._renderTime = currentTime;
        t1 = currentTime;
      }
      if (t1 > currentTime) {
        this._renderTime = currentTime;
        t1 = currentTime;
      }
      deltaTime = currentTime - t1;
      deltaTimeSec = deltaTime / 1000;
      currentTimeSec = currentTime / 1000;
      if (deltaTime >= 1) {
        this._renderTime = currentTime;
        t1 = this._enterFrameEvent;
        t1._passedTime = deltaTimeSec;
        Z._dispatchBroadcastEvent(t1, $.get$_enterFrameSubscriptions());
        this._juggler.advanceTime$1(deltaTimeSec);
        for (t1 = this._stages, i = 0; i < t1.length; ++i)
          t1[i]._juggler.advanceTime$1(deltaTimeSec);
        if (this._invalidate) {
          this._invalidate = false;
          Z._dispatchBroadcastEvent(this._renderEvent, $.get$_renderSubscriptions());
        }
        for (i = 0; i < t1.length; ++i) {
          t2 = t1[i];
          t3 = t2._stageRenderMode;
          if (t3 === "auto" || t3 === "once") {
            t2._updateCanvasSize$0();
            t2._renderContext.reset$0(0);
            t2._renderContext.clear$1(0, t2._color);
            t2._renderState.reset$1(0, t2._stageTransformation);
            t2._renderState._currentContextState.matrix.concat$1(t2._renderContext.get$viewPortMatrix());
            t2._renderState._currentTime = Z._ensureNum(currentTimeSec);
            t2._renderState._deltaTime = Z._ensureNum(deltaTimeSec);
            t2.render$1(t2._renderState);
            t2._renderState._renderContext.flush$0(0);
            if (t2._stageRenderMode === "once")
              t2._stageRenderMode = "stop";
          }
        }
        Z._dispatchBroadcastEvent(this._exitFrameEvent, $.get$_exitFrameSubscriptions());
      }
    }, "call$1", "get$_onAnimationFrame", 2, 0, 32]
  },
  RenderProgram: {
    "^": "Object;",
    _createShader$3: function(renderingContext, source, shaderType) {
      var shader, shaderStatus, isContextLost;
      shader = renderingContext.createShader(shaderType);
      renderingContext.shaderSource(shader, source);
      renderingContext.compileShader(shader);
      shaderStatus = renderingContext.getShaderParameter(shader, 35713);
      isContextLost = renderingContext.isContextLost();
      if (shaderStatus === false && isContextLost === false)
        throw H.wrapException(renderingContext.getShaderInfoLog(shader));
      return shader;
    },
    createProgram$3: function(_, renderingContext, vertexShaderSource, fragmentShaderSource) {
      var program, vertexShader, fragmentShader, programStatus, isContextLost;
      program = renderingContext.createProgram();
      vertexShader = this._createShader$3(renderingContext, vertexShaderSource, 35633);
      fragmentShader = this._createShader$3(renderingContext, fragmentShaderSource, 35632);
      renderingContext.attachShader(program, vertexShader);
      renderingContext.attachShader(program, fragmentShader);
      renderingContext.linkProgram(program);
      programStatus = renderingContext.getProgramParameter(program, 35714);
      isContextLost = renderingContext.isContextLost();
      if (programStatus === false && isContextLost === false)
        throw H.wrapException(renderingContext.getProgramInfoLog(program));
      return program;
    }
  },
  RenderProgramQuad: {
    "^": "RenderProgram;_vertexShaderSource,_fragmentShaderSource,_renderingContext,_program,_vertexBuffer,_indexBuffer,_contextRestoredSubscription,_indexList,_vertexList,_aVertexPositionLocation,_aVertexTextCoordLocation,_aVertexAlphaLocation,_quadCount",
    activate$1: function(renderContext) {
      var t1;
      if (this._program == null) {
        if (this._renderingContext == null) {
          this._renderingContext = renderContext._renderingContext;
          this._contextRestoredSubscription = renderContext.on$1(0, C.EventStreamProvider_contextRestored.eventType).listen$1(this.get$_onContextRestored());
        }
        t1 = this.createProgram$3(0, this._renderingContext, this._vertexShaderSource, this._fragmentShaderSource);
        this._program = t1;
        this._aVertexPositionLocation = this._renderingContext.getAttribLocation(t1, "aVertexPosition");
        this._aVertexTextCoordLocation = this._renderingContext.getAttribLocation(this._program, "aVertexTextCoord");
        this._aVertexAlphaLocation = this._renderingContext.getAttribLocation(this._program, "aVertexAlpha");
        this._renderingContext.enableVertexAttribArray(this._aVertexPositionLocation);
        this._renderingContext.enableVertexAttribArray(this._aVertexTextCoordLocation);
        this._renderingContext.enableVertexAttribArray(this._aVertexAlphaLocation);
        t1 = this._renderingContext.createBuffer();
        this._indexBuffer = t1;
        this._renderingContext.bindBuffer(34963, t1);
        this._renderingContext.bufferData(34963, this._indexList, 35044);
        t1 = this._renderingContext.createBuffer();
        this._vertexBuffer = t1;
        this._renderingContext.bindBuffer(34962, t1);
        this._renderingContext.bufferData(34962, this._vertexList, 35048);
      }
      this._renderingContext.useProgram(this._program);
      this._renderingContext.bindBuffer(34963, this._indexBuffer);
      this._renderingContext.bindBuffer(34962, this._vertexBuffer);
      this._renderingContext.vertexAttribPointer(this._aVertexPositionLocation, 2, 5126, false, 20, 0);
      this._renderingContext.vertexAttribPointer(this._aVertexTextCoordLocation, 2, 5126, false, 20, 8);
      this._renderingContext.vertexAttribPointer(this._aVertexAlphaLocation, 1, 5126, false, 20, 16);
    },
    renderQuad$2: function(renderState, renderTextureQuad) {
      var t1, matrix, alpha, width, height, offsetX, offsetY, uvList, a, b, c, d, ox, oy, cy, dy, index, t2, t3, t4;
      t1 = renderState._currentContextState;
      matrix = t1.matrix;
      alpha = t1.alpha;
      width = renderTextureQuad._textureWidth;
      height = renderTextureQuad._textureHeight;
      offsetX = renderTextureQuad._offsetX;
      offsetY = renderTextureQuad._offsetY;
      uvList = renderTextureQuad._uvList;
      a = matrix._a;
      b = matrix._b;
      c = matrix._c;
      d = matrix._d;
      ox = matrix._tx + offsetX * a + offsetY * c;
      oy = matrix._ty + offsetX * b + offsetY * d;
      cy = c * height;
      dy = d * height;
      t1 = this._quadCount;
      index = t1 * 20;
      t2 = this._vertexList;
      if (index > t2.length - 20)
        return;
      t2[index] = ox;
      t2[index + 1] = oy;
      t2[index + 2] = uvList[0];
      t2[index + 3] = uvList[1];
      t2[index + 4] = alpha;
      t3 = ox + a * width;
      t2[index + 5] = t3;
      t4 = oy + b * width;
      t2[index + 6] = t4;
      t2[index + 7] = uvList[2];
      t2[index + 8] = uvList[3];
      t2[index + 9] = alpha;
      t2[index + 10] = t3 + cy;
      t2[index + 11] = t4 + dy;
      t2[index + 12] = uvList[4];
      t2[index + 13] = uvList[5];
      t2[index + 14] = alpha;
      t2[index + 15] = ox + cy;
      t2[index + 16] = oy + dy;
      t2[index + 17] = uvList[6];
      t2[index + 18] = uvList[7];
      t2[index + 19] = alpha;
      ++t1;
      this._quadCount = t1;
      if (t1 === 256)
        this.flush$0(0);
    },
    flush$0: function(_) {
      var vertexUpdate, t1;
      vertexUpdate = this._vertexList;
      t1 = this._quadCount;
      if (t1 === 0)
        return;
      else if (t1 < 256)
        vertexUpdate = H.NativeFloat32List_NativeFloat32List$view(vertexUpdate.buffer, 0, t1 * 4 * 5);
      this._renderingContext.bufferSubData(34962, 0, vertexUpdate);
      this._renderingContext.drawElements(4, this._quadCount * 6, 5123, 0);
      this._quadCount = 0;
    },
    _onContextRestored$1: [function(e) {
      this._program = null;
    }, "call$1", "get$_onContextRestored", 2, 0, 33],
    RenderProgramQuad$0: function() {
      var t1, t2, i, j, t3;
      for (t1 = this._indexList, t2 = t1.length - 6, i = 0, j = 0; i <= t2; i += 6, j += 4) {
        t1[i] = j;
        t1[i + 1] = j + 1;
        t3 = j + 2;
        t1[i + 2] = t3;
        t1[i + 3] = j;
        t1[i + 4] = t3;
        t1[i + 5] = j + 3;
      }
    },
    static: {"^": "RenderProgramQuad__maxQuadCount", RenderProgramQuad$: function() {
        var t1 = new Int16Array(1536);
        t1 = new Z.RenderProgramQuad("      attribute vec2 aVertexPosition;\r\n      attribute vec2 aVertexTextCoord;\r\n      attribute float aVertexAlpha;\r\n      varying vec2 vTextCoord;\r\n      varying float vAlpha;\r\n\r\n      void main() {\r\n        vTextCoord = aVertexTextCoord;\r\n        vAlpha = aVertexAlpha;\r\n        gl_Position = vec4(aVertexPosition, 0.0, 1.0); \r\n      }\r\n      ", "      precision mediump float;\r\n      uniform sampler2D uSampler;\r\n      varying vec2 vTextCoord;\r\n      varying float vAlpha;\r\n\r\n      void main() {\r\n        vec4 color = texture2D(uSampler, vTextCoord);\r\n        gl_FragColor = color * vAlpha;\r\n      }\r\n      ", null, null, null, null, null, t1, new Float32Array(5120), 0, 0, 0, 0);
        t1.RenderProgramQuad$0();
        return t1;
      }}
  },
  RenderProgramTriangle: {
    "^": "RenderProgram;_vertexShaderSource,_fragmentShaderSource,_renderingContext,_program,_vertexBuffer,_contextRestoredSubscription,_vertexList,_aVertexPositionLocation,_aVertexColorLocation,_triangleCount",
    activate$1: function(renderContext) {
      var t1;
      if (this._program == null) {
        if (this._renderingContext == null) {
          this._renderingContext = renderContext._renderingContext;
          this._contextRestoredSubscription = renderContext.on$1(0, C.EventStreamProvider_contextRestored.eventType).listen$1(this.get$_onContextRestored());
        }
        t1 = this.createProgram$3(0, this._renderingContext, this._vertexShaderSource, this._fragmentShaderSource);
        this._program = t1;
        this._aVertexPositionLocation = this._renderingContext.getAttribLocation(t1, "aVertexPosition");
        this._aVertexColorLocation = this._renderingContext.getAttribLocation(this._program, "aVertexColor");
        this._renderingContext.enableVertexAttribArray(this._aVertexPositionLocation);
        this._renderingContext.enableVertexAttribArray(this._aVertexColorLocation);
        t1 = this._renderingContext.createBuffer();
        this._vertexBuffer = t1;
        this._renderingContext.bindBuffer(34962, t1);
        this._renderingContext.bufferData(34962, this._vertexList, 35048);
      }
      this._renderingContext.useProgram(this._program);
      this._renderingContext.bindBuffer(34962, this._vertexBuffer);
      this._renderingContext.vertexAttribPointer(this._aVertexPositionLocation, 2, 5126, false, 24, 0);
      this._renderingContext.vertexAttribPointer(this._aVertexColorLocation, 4, 5126, false, 24, 8);
    },
    flush$0: function(_) {
      var vertexUpdate, t1;
      vertexUpdate = this._vertexList;
      t1 = this._triangleCount;
      if (t1 === 0)
        return;
      else if (t1 < 256)
        vertexUpdate = H.NativeFloat32List_NativeFloat32List$view(vertexUpdate.buffer, 0, t1 * 3 * 6);
      this._renderingContext.bufferSubData(34962, 0, vertexUpdate);
      this._renderingContext.drawArrays(4, 0, this._triangleCount * 3);
      this._triangleCount = 0;
    },
    _onContextRestored$1: [function(e) {
      this._program = null;
    }, "call$1", "get$_onContextRestored", 2, 0, 33],
    static: {"^": "RenderProgramTriangle__maxTriangleCount"}
  },
  _ContextState: {
    "^": "Object;matrix,alpha*,compositeOperation,_nextContextState"
  },
  RenderState: {
    "^": "Object;_renderContext,_currentTime,_deltaTime,_firstContextState,_currentContextState",
    reset$3: function(_, matrix, alpha, compositeOperation) {
      var t1 = this._firstContextState;
      this._currentContextState = t1;
      t1.matrix.identity$0();
      t1 = this._currentContextState;
      t1.alpha = 1;
      t1.compositeOperation = "source-over";
      this._firstContextState.matrix.copyFrom$1(matrix);
    },
    reset$1: function($receiver, matrix) {
      return this.reset$3($receiver, matrix, null, null);
    },
    RenderState$4: function(renderContext, matrix, alpha, compositeOperation) {
      var t1, t2;
      t1 = Z.Matrix$fromIdentity();
      t2 = new Z._ContextState(t1, 1, "source-over", null);
      this._firstContextState = t2;
      this._currentContextState = t2;
      t1.copyFrom$1(matrix);
    },
    static: {RenderState$: function(renderContext, matrix, alpha, compositeOperation) {
        var t1 = new Z.RenderState(renderContext, 0, 0, null, null);
        t1.RenderState$4(renderContext, matrix, alpha, compositeOperation);
        return t1;
      }}
  },
  RenderTexture: {
    "^": "Object;_width,_height,_transparent,_storePixelRatio,_storeWidth,_storeHeight,_canvas,_quad,_texture,_renderingContext,_contextRestoredSubscription",
    _onContextRestored$1: [function(e) {
      this._texture = null;
    }, "call$1", "get$_onContextRestored", 2, 0, 33],
    RenderTexture$fromImage$2: function(imageElement, imagePixelRatio) {
      var t1, t2, t3, canvasWidth, canvasHeight;
      this._storePixelRatio = Z._ensureNum(imagePixelRatio);
      t1 = J.getInterceptor$x(imageElement);
      this._width = C.JSNumber_methods.toInt$0(Math.floor(Z._ensureNum(t1.get$width(imageElement)) / this._storePixelRatio));
      this._height = C.JSNumber_methods.toInt$0(Math.floor(Z._ensureNum(t1.get$height(imageElement)) / this._storePixelRatio));
      this._storeWidth = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._width * this._storePixelRatio));
      this._storeHeight = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._height * this._storePixelRatio));
      this._transparent = true;
      t2 = this._storeWidth;
      t3 = $.get$_backingStorePixelRatio();
      canvasWidth = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(t2 / t3));
      canvasHeight = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._storeHeight / t3));
      this._canvas = W.CanvasElement_CanvasElement(canvasHeight, canvasWidth);
      this._quad = Z.RenderTextureQuad$(this, 0, 0, 0, 0, 0, this._width, this._height);
      this._texture = null;
      J.get$context2D$x(this._canvas).drawImage(imageElement, 0, 0, t1.get$width(imageElement), t1.get$height(imageElement), 0, 0, canvasWidth, canvasHeight);
    }
  },
  RenderTextureQuad: {
    "^": "Object;_stagexl$_renderTexture,_uvList,_xyList,_rotation,_offsetX,_offsetY,_textureX,_textureY,_textureWidth,_textureHeight",
    get$rotation: function() {
      return this._rotation;
    },
    RenderTextureQuad$8: function(renderTexture, rotation, offsetX, offsetY, textureX, textureY, textureWidth, textureHeight) {
      var t1, t2, x4, y2, x3, y4, y3, x2, y1, x1, renderTextureWidth, renderTextureHeight, pixelRatio;
      this._stagexl$_renderTexture = renderTexture;
      this._rotation = Z._ensureInt(rotation);
      this._offsetX = Z._ensureInt(offsetX);
      this._offsetY = Z._ensureInt(offsetY);
      this._textureX = Z._ensureInt(textureX);
      this._textureY = Z._ensureInt(textureY);
      this._textureWidth = Z._ensureInt(textureWidth);
      t1 = Z._ensureInt(textureHeight);
      this._textureHeight = t1;
      t2 = this._rotation;
      if (t2 === 0) {
        x4 = this._textureX;
        y2 = this._textureY;
        x3 = x4 + this._textureWidth;
        y4 = y2 + t1;
        y3 = y4;
        x2 = x3;
        y1 = y2;
        x1 = x4;
      } else {
        if (t2 === 1) {
          x2 = this._textureX;
          y4 = this._textureY;
          x4 = x2 - t1;
          y3 = y4 + this._textureWidth;
        } else
          throw H.wrapException(new P.ArgumentError("rotation not supported."));
        x3 = x4;
        y2 = y3;
        y1 = y4;
        x1 = x2;
      }
      t1 = this._stagexl$_renderTexture;
      renderTextureWidth = t1._width;
      renderTextureHeight = t1._height;
      pixelRatio = t1._storePixelRatio / $.get$_backingStorePixelRatio();
      t1 = this._uvList;
      t1[0] = x1 / renderTextureWidth;
      t1[1] = y1 / renderTextureHeight;
      t1[2] = x2 / renderTextureWidth;
      t1[3] = y2 / renderTextureHeight;
      t1[4] = x3 / renderTextureWidth;
      t1[5] = y3 / renderTextureHeight;
      t1[6] = x4 / renderTextureWidth;
      t1[7] = y4 / renderTextureHeight;
      t1 = this._xyList;
      t1[0] = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(x1 * pixelRatio));
      t1[1] = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(y1 * pixelRatio));
      t1[2] = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(x2 * pixelRatio));
      t1[3] = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(y2 * pixelRatio));
      t1[4] = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(x3 * pixelRatio));
      t1[5] = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(y3 * pixelRatio));
      t1[6] = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(x4 * pixelRatio));
      t1[7] = C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(y4 * pixelRatio));
    },
    static: {RenderTextureQuad$: function(renderTexture, rotation, offsetX, offsetY, textureX, textureY, textureWidth, textureHeight) {
        var t1 = new Float32Array(8);
        t1 = new Z.RenderTextureQuad(null, t1, new Int32Array(8), 0, 0, 0, 0, 0, 0, 0);
        t1.RenderTextureQuad$8(renderTexture, rotation, offsetX, offsetY, textureX, textureY, textureWidth, textureHeight);
        return t1;
      }}
  },
  BroadcastEvent: {
    "^": "Event;",
    get$captures: function() {
      return false;
    }
  },
  EnterFrameEvent: {
    "^": "BroadcastEvent;_passedTime,_type,_bubbles,_eventPhase,_stagexl$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation"
  },
  ExitFrameEvent: {
    "^": "BroadcastEvent;_type,_bubbles,_eventPhase,_stagexl$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation"
  },
  RenderEvent: {
    "^": "BroadcastEvent;_type,_bubbles,_eventPhase,_stagexl$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation"
  },
  Event: {
    "^": "Object;_type,_bubbles,_eventPhase,_stagexl$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
    get$captures: function() {
      return true;
    },
    get$target: function(_) {
      return this._stagexl$_target;
    },
    static: {"^": "Event_ADDED,Event_ADDED_TO_STAGE,Event_ENTER_FRAME,Event_EXIT_FRAME,Event_REMOVED,Event_REMOVED_FROM_STAGE,Event_RESIZE,Event_RENDER,Event_OKAY,Event_CANCEL,Event_CHANGE,Event_CONFIRM,Event_SCROLL,Event_OPEN,Event_CLOSE,Event_SELECT,Event_COMPLETE,Event_PROGRESS"}
  },
  EventDispatcher: {
    "^": "Object;",
    on$1: function(_, eventType) {
      var eventStreams, eventStream;
      eventStreams = this._eventStreams;
      if (eventStreams == null) {
        eventStreams = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, Z.EventStream);
        this._eventStreams = eventStreams;
      }
      eventStream = eventStreams.$index(0, eventType);
      if (eventStream == null) {
        eventStream = H.setRuntimeTypeInfo(new Z.EventStream(this, eventType, Array(0), 0), [null]);
        eventStreams.$indexSet(eventStreams, eventType, eventStream);
      }
      return eventStream;
    },
    dispatchEvent$1: function(_, $event) {
      this._dispatchEventInternal$3($event, this, 2);
    },
    _hasPropagationEventListeners$1: function($event) {
      var eventStreams, eventStream;
      eventStreams = this._eventStreams;
      if (eventStreams == null)
        return false;
      eventStream = eventStreams.$index(0, $event._type);
      if (eventStream == null)
        return false;
      return eventStream._hasPropagationSubscriptions$1($event);
    },
    _dispatchEventInternal$3: function($event, target, eventPhase) {
      var eventStreams, eventStream;
      $event._stopsPropagation = false;
      $event._stopsImmediatePropagation = false;
      eventStreams = this._eventStreams;
      if (eventStreams == null)
        return;
      eventStream = eventStreams.$index(0, $event._type);
      if (eventStream == null)
        return;
      eventStream._dispatchEventInternal$3($event, target, eventPhase);
    }
  },
  EventStream: {
    "^": "Stream;_stagexl$_target,_stagexl$_eventType,_subscriptions,_capturingSubscriptionCount",
    get$isBroadcast: function() {
      return true;
    },
    get$target: function(_) {
      return this._stagexl$_target;
    },
    listen$5$cancelOnError$onDone$onError$priority: function(onData, cancelOnError, onDone, onError, priority) {
      return this._subscribe$3(onData, false, priority);
    },
    listen$1: function(onData) {
      return this.listen$5$cancelOnError$onDone$onError$priority(onData, false, null, null, 0);
    },
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      return this.listen$5$cancelOnError$onDone$onError$priority(onData, cancelOnError, onDone, onError, 0);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$5$cancelOnError$onDone$onError$priority(onData, false, onDone, onError, 0);
    },
    _subscribe$3: function(eventListener, captures, priority) {
      var subscription, oldSubscriptions, t1, t2, newSubscriptions, index, o, n, oldSubscription, n0;
      subscription = new Z.EventStreamSubscription(priority, 0, false, captures, this, eventListener);
      subscription.$builtinTypeInfo = this.$builtinTypeInfo;
      oldSubscriptions = this._subscriptions;
      t1 = oldSubscriptions.length;
      t2 = t1 + 1;
      newSubscriptions = Array(t2);
      index = t2 - 1;
      for (o = 0, n = 0; o < t1; ++o, n = n0) {
        oldSubscription = oldSubscriptions[o];
        if (o === n && oldSubscription._priority < priority) {
          n0 = n + 1;
          index = n;
          n = n0;
        }
        n0 = n + 1;
        if (n >= t2)
          return H.ioore(newSubscriptions, n);
        newSubscriptions[n] = oldSubscription;
      }
      if (index < 0 || index >= t2)
        return H.ioore(newSubscriptions, index);
      newSubscriptions[index] = subscription;
      this._subscriptions = newSubscriptions;
      if (captures)
        this._capturingSubscriptionCount = this._capturingSubscriptionCount + 1;
      else
        switch (this._stagexl$_eventType) {
          case "enterFrame":
            $.get$_enterFrameSubscriptions().push(subscription);
            break;
          case "exitFrame":
            $.get$_exitFrameSubscriptions().push(subscription);
            break;
          case "render":
            $.get$_renderSubscriptions().push(subscription);
            break;
        }
      return subscription;
    },
    _cancelSubscription$1: function(eventStreamSubscription) {
      var oldSubscriptions, t1, t2, newSubscriptions, o, n, oldSubscription, n0;
      eventStreamSubscription._canceled = true;
      oldSubscriptions = this._subscriptions;
      t1 = oldSubscriptions.length;
      if (t1 === 0)
        return;
      t2 = t1 - 1;
      newSubscriptions = Array(t2);
      for (o = 0, n = 0; o < t1; ++o) {
        oldSubscription = oldSubscriptions[o];
        if (oldSubscription === eventStreamSubscription)
          continue;
        if (n >= t2)
          return;
        n0 = n + 1;
        newSubscriptions[n] = oldSubscription;
        n = n0;
      }
      if (eventStreamSubscription._captures)
        this._capturingSubscriptionCount = this._capturingSubscriptionCount - 1;
      this._subscriptions = newSubscriptions;
    },
    _hasPropagationSubscriptions$1: function($event) {
      var t1;
      if (!($event.get$captures() && this._capturingSubscriptionCount > 0))
        t1 = $event._bubbles && this._subscriptions.length > this._capturingSubscriptionCount;
      else
        t1 = true;
      return t1;
    },
    _dispatchEventInternal$3: function($event, target, eventPhase) {
      var subscriptions, t1, t2, t3, i, subscription;
      subscriptions = this._subscriptions;
      for (t1 = subscriptions.length, t2 = this._stagexl$_target, t3 = eventPhase === 1, i = 0; i < t1; ++i) {
        subscription = subscriptions[i];
        if (subscription._canceled || subscription._stagexl$_pauseCount > 0 || subscription._captures !== t3)
          continue;
        $event._stagexl$_target = target;
        $event._currentTarget = t2;
        $event._eventPhase = eventPhase;
        subscription.eventListener$1($event);
        if ($event._stopsImmediatePropagation)
          return;
      }
    }
  },
  EventStreamProvider0: {
    "^": "Object;eventType"
  },
  EventStreamSubscription: {
    "^": "StreamSubscription;_priority,_stagexl$_pauseCount,_canceled,_captures,_eventStream,_eventListener",
    get$eventListener: function() {
      return this._eventListener;
    },
    eventListener$1: function(arg0) {
      return this.get$eventListener().call$1(arg0);
    },
    cancel$0: function() {
      if (!this._canceled)
        this._eventStream._cancelSubscription$1(this);
      return;
    }
  },
  MouseEvent: {
    "^": "Event;_localX,_localY,_stageX,_stageY,_deltaX,_deltaY,_buttonDown,_altKey,_ctrlKey,_shiftKey,_clickCount,_type,_bubbles,_eventPhase,_stagexl$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
    get$stageX: function() {
      return this._stageX;
    },
    get$stageY: function() {
      return this._stageY;
    },
    static: {"^": "MouseEvent_CLICK,MouseEvent_DOUBLE_CLICK,MouseEvent_MOUSE_DOWN,MouseEvent_MOUSE_UP,MouseEvent_MOUSE_MOVE,MouseEvent_MOUSE_OUT,MouseEvent_MOUSE_OVER,MouseEvent_MOUSE_WHEEL,MouseEvent_MIDDLE_CLICK,MouseEvent_MIDDLE_MOUSE_DOWN,MouseEvent_MIDDLE_MOUSE_UP,MouseEvent_RIGHT_CLICK,MouseEvent_RIGHT_MOUSE_DOWN,MouseEvent_RIGHT_MOUSE_UP,MouseEvent_CONTEXT_MENU,MouseEvent_ROLL_OUT,MouseEvent_ROLL_OVER"}
  },
  TouchEvent: {
    "^": "Event;_touchPointID,_isPrimaryTouchPoint,_localX,_localY,_stageX,_stageY,_altKey,_ctrlKey,_shiftKey,_pressure,_sizeX,_sizeY,_type,_bubbles,_eventPhase,_stagexl$_target,_currentTarget,_stopsPropagation,_stopsImmediatePropagation",
    get$touchPointID: function() {
      return this._touchPointID;
    },
    get$stageX: function() {
      return this._stageX;
    },
    get$stageY: function() {
      return this._stageY;
    },
    static: {"^": "TouchEvent_TOUCH_BEGIN,TouchEvent_TOUCH_END,TouchEvent_TOUCH_CANCEL,TouchEvent_TOUCH_MOVE,TouchEvent_TOUCH_OVER,TouchEvent_TOUCH_OUT,TouchEvent_TOUCH_ROLL_OUT,TouchEvent_TOUCH_ROLL_OVER,TouchEvent_TOUCH_TAP"}
  },
  Matrix: {
    "^": "Object;_a,_b,_c,_d,_tx,_ty,_det",
    toString$0: function(_) {
      return "Matrix [a=" + H.S(this._a) + ", b=" + H.S(this._b) + ", c=" + H.S(this._c) + ", d=" + H.S(this._d) + ", tx=" + H.S(this._tx) + ", ty=" + H.S(this._ty) + "]";
    },
    transformPoint$1: function(p) {
      var x, y;
      x = J.toDouble$0$n(p.get$x(p));
      y = J.toDouble$0$n(p.get$y(p));
      return H.setRuntimeTypeInfo(new Z.Point(x * this._a + y * this._c + this._tx, x * this._b + y * this._d + this._ty), [J.JSNumber]);
    },
    concat$1: function(matrix) {
      var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
      a1 = this._a;
      b1 = this._b;
      c1 = this._c;
      d1 = this._d;
      tx1 = this._tx;
      ty1 = this._ty;
      det1 = this._det;
      a2 = matrix._a;
      b2 = matrix._b;
      c2 = matrix._c;
      d2 = matrix._d;
      tx2 = matrix._tx;
      ty2 = matrix._ty;
      det2 = matrix._det;
      this._a = a1 * a2 + b1 * c2;
      this._b = a1 * b2 + b1 * d2;
      this._c = c1 * a2 + d1 * c2;
      this._d = c1 * b2 + d1 * d2;
      this._tx = tx1 * a2 + ty1 * c2 + tx2;
      this._ty = tx1 * b2 + ty1 * d2 + ty2;
      this._det = det1 * det2;
    },
    identity$0: function() {
      this._a = 1;
      this._b = 0;
      this._c = 0;
      this._d = 1;
      this._tx = 0;
      this._ty = 0;
      this._det = 1;
    },
    invert$0: function() {
      var a, b, c, d, tx, ty, det, t1, t2, t3, t4;
      a = this._a;
      b = this._b;
      c = this._c;
      d = this._d;
      tx = this._tx;
      ty = this._ty;
      det = this._det;
      t1 = d / det;
      this._a = t1;
      t2 = -(b / det);
      this._b = t2;
      t3 = -(c / det);
      this._c = t3;
      t4 = a / det;
      this._d = t4;
      this._tx = -(t1 * tx + t3 * ty);
      this._ty = -(t2 * tx + t4 * ty);
      this._det = 1 / det;
    },
    scale$2: function(_, scaleX, scaleY) {
      this._a = this._a * scaleX;
      this._b = this._b * scaleY;
      this._c = this._c * scaleX;
      this._d = this._d * scaleY;
      this._tx = this._tx * scaleX;
      this._ty = this._ty * scaleY;
      this._det = this._det * scaleX * scaleY;
    },
    setTo$6: function(a, b, c, d, tx, ty) {
      this._a = a;
      this._b = b;
      this._c = c;
      this._d = d;
      this._tx = tx;
      this._ty = ty;
      this._det = a * d - b * c;
    },
    copyFrom$1: function(matrix) {
      this._a = matrix._a;
      this._b = matrix._b;
      this._c = matrix._c;
      this._d = matrix._d;
      this._tx = matrix._tx;
      this._ty = matrix._ty;
      this._det = matrix._det;
    },
    copyFromAndConcat$2: function(copyMatrix, concatMatrix) {
      var a1, b1, c1, d1, tx1, ty1, det1, a2, b2, c2, d2, tx2, ty2, det2;
      a1 = copyMatrix._a;
      b1 = copyMatrix._b;
      c1 = copyMatrix._c;
      d1 = copyMatrix._d;
      tx1 = copyMatrix._tx;
      ty1 = copyMatrix._ty;
      det1 = copyMatrix._det;
      a2 = concatMatrix._a;
      b2 = concatMatrix._b;
      c2 = concatMatrix._c;
      d2 = concatMatrix._d;
      tx2 = concatMatrix._tx;
      ty2 = concatMatrix._ty;
      det2 = concatMatrix._det;
      this._a = a1 * a2 + b1 * c2;
      this._b = a1 * b2 + b1 * d2;
      this._c = c1 * a2 + d1 * c2;
      this._d = c1 * b2 + d1 * d2;
      this._tx = tx1 * a2 + ty1 * c2 + tx2;
      this._ty = tx1 * b2 + ty1 * d2 + ty2;
      this._det = det1 * det2;
    },
    static: {Matrix$: function(a, b, c, d, tx, ty) {
        return new Z.Matrix(a, b, c, d, tx, ty, a * d - b * c);
      }, Matrix$fromIdentity: function() {
        return new Z.Matrix(1, 0, 0, 1, 0, 0, 1);
      }}
  },
  Point: {
    "^": "Object;x*,y*",
    toString$0: function(_) {
      return "Point<" + H.S(new H.TypeImpl(H.runtimeTypeToString(H.getTypeArgumentByIndex(this, 0)), null)) + "> [x=" + H.S(this.x) + ", y=" + H.S(this.y) + "]";
    },
    get$length: function(_) {
      var t1, t2;
      t1 = this.x;
      t1 = J.$mul$ns(t1, t1);
      t2 = this.y;
      t2 = J.$add$ns(t1, J.$mul$ns(t2, t2));
      if (typeof t2 !== "number")
        H.throwExpression(new P.ArgumentError(t2));
      return Math.sqrt(t2);
    },
    $add: function(_, point) {
      return this.add$1(0, point);
    },
    $sub: function(_, point) {
      return this.subtract$1(point);
    },
    $mul: function(_, factor) {
      var t1 = new Z.Point(J.$mul$ns(this.x, factor), J.$mul$ns(this.y, factor));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    add$1: function(_, point) {
      var t1 = J.getInterceptor$x(point);
      t1 = new Z.Point(J.$add$ns(this.x, t1.get$x(point)), J.$add$ns(this.y, t1.get$y(point)));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    subtract$1: function(point) {
      var t1 = J.getInterceptor$x(point);
      t1 = new Z.Point(J.$sub$n(this.x, t1.get$x(point)), J.$sub$n(this.y, t1.get$y(point)));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    $isPoint0: true
  },
  Rectangle0: {
    "^": "Object;left>,top>,width>,height>",
    toString$0: function(_) {
      return "Rectangle<" + H.S(new H.TypeImpl(H.runtimeTypeToString(H.getTypeArgumentByIndex(this, 0)), null)) + "> [left=" + H.S(this.left) + ", top=" + H.S(this.top) + ", width=" + H.S(this.width) + ", height=" + H.S(this.height) + "]";
    },
    get$right: function(_) {
      return J.$add$ns(this.left, this.width);
    },
    get$bottom: function(_) {
      return J.$add$ns(this.top, this.height);
    },
    contains$2: function(_, px, py) {
      return J.$le$n(this.left, px) && J.$le$n(this.top, py) && J.$gt$n(J.$add$ns(this.left, this.width), px) && J.$gt$n(J.$add$ns(this.top, this.height), py);
    },
    get$x: function(_) {
      return this.left;
    },
    set$x: function(_, value) {
      this.left = value;
    },
    get$y: function(_) {
      return this.top;
    },
    set$y: function(_, value) {
      this.top = value;
    },
    $isRectangle: true,
    $asRectangle: null
  },
  closure: {
    "^": "Closure:16;",
    call$0: function() {
      var t1, ua;
      t1 = window.navigator.userAgent;
      t1.toString;
      ua = t1.toLowerCase();
      return C.JSString_methods.indexOf$1(ua, "iphone") >= 0 || C.JSString_methods.indexOf$1(ua, "ipad") >= 0 || C.JSString_methods.indexOf$1(ua, "ipod") >= 0 || C.JSString_methods.indexOf$1(ua, "android") >= 0 || C.JSString_methods.indexOf$1(ua, "webos") >= 0 || C.JSString_methods.indexOf$1(ua, "windows phone") >= 0;
    }
  }
}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

// Runtime type support
J.JSInt.$isint = true;
J.JSInt.$isnum = true;
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isObject = true;
J.JSDouble.$isnum = true;
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isObject = true;
W.Touch.$isObject = true;
J.JSString.$isString = true;
J.JSString.$isComparable = true;
J.JSString.$asComparable = [J.JSString];
J.JSString.$isObject = true;
J.JSNumber.$isnum = true;
J.JSNumber.$isComparable = true;
J.JSNumber.$asComparable = [J.JSNumber];
J.JSNumber.$isObject = true;
P.Duration.$isDuration = true;
P.Duration.$isComparable = true;
P.Duration.$asComparable = [P.Duration];
P.Duration.$isObject = true;
J.JSArray.$isList = true;
J.JSArray.$isObject = true;
R.Card.$isObject = true;
Z.Sprite.$isObject = true;
Z.Stage.$isObject = true;
Z.DisplayObject.$isObject = true;
Z._GraphicsCommand.$isObject = true;
Z.MouseEvent.$isMouseEvent = true;
Z.MouseEvent.$isEvent = true;
Z.MouseEvent.$isObject = true;
Z.TouchEvent.$isTouchEvent = true;
Z.TouchEvent.$isEvent = true;
Z.TouchEvent.$isObject = true;
Z.TweenProperty.$isObject = true;
W.Event0.$isObject = true;
Z.EventStream.$isObject = true;
Z._Touch.$isObject = true;
Z.RenderFrameBuffer.$isObject = true;
W.KeyboardEvent.$isKeyboardEvent = true;
W.KeyboardEvent.$isObject = true;
W.MouseEvent0.$isMouseEvent0 = true;
W.MouseEvent0.$isObject = true;
W.WheelEvent.$isWheelEvent = true;
W.WheelEvent.$isMouseEvent0 = true;
W.WheelEvent.$isObject = true;
W.TouchEvent0.$isTouchEvent0 = true;
W.TouchEvent0.$isObject = true;
P.ContextEvent.$isContextEvent = true;
P.ContextEvent.$isObject = true;
Z.Event.$isEvent = true;
Z.Event.$isObject = true;
J.JSBool.$isbool = true;
J.JSBool.$isObject = true;
H.RawReceivePortImpl.$isObject = true;
H._IsolateEvent.$isObject = true;
H._IsolateContext.$isObject = true;
P.Symbol.$isSymbol = true;
P.Symbol.$isObject = true;
P.StackTrace.$isStackTrace = true;
P.StackTrace.$isObject = true;
P._BufferingStreamSubscription.$is_BufferingStreamSubscription = true;
P._BufferingStreamSubscription.$is_EventSink = true;
P._BufferingStreamSubscription.$isStreamSubscription = true;
P._BufferingStreamSubscription.$isObject = true;
P._BroadcastSubscription.$is_BroadcastSubscription = true;
P._BroadcastSubscription.$is_BufferingStreamSubscription = true;
P._BroadcastSubscription.$is_EventSink = true;
P._BroadcastSubscription.$isStreamSubscription = true;
P._BroadcastSubscription.$isObject = true;
P.Comparable.$isComparable = true;
P.Comparable.$isObject = true;
P.Object.$isObject = true;
W.EventTarget.$isEventTarget = true;
W.EventTarget.$isObject = true;
W.Animation.$isAnimation = true;
W.Animation.$isObject = true;
P.Map.$isMap = true;
P.Map.$isObject = true;
P._EventSink.$is_EventSink = true;
P._EventSink.$isObject = true;
Z.Animatable.$isAnimatable = true;
Z.Animatable.$isObject = true;
Z.Point.$isPoint = true;
Z.Point.$isPoint0 = true;
Z.Point.$isObject = true;
P.Point0.$isPoint0 = true;
P.Point0.$isObject = true;
P._DelayedEvent.$is_DelayedEvent = true;
P._DelayedEvent.$isObject = true;
P.Future.$isFuture = true;
P.Future.$isObject = true;
P.StreamSubscription.$isStreamSubscription = true;
P.StreamSubscription.$isObject = true;
P.DateTime.$isDateTime = true;
P.DateTime.$isComparable = true;
P.DateTime.$asComparable = [null];
P.DateTime.$isObject = true;
// getInterceptor methods
J.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return J.JSNull.prototype;
  if (typeof receiver == "boolean")
    return J.JSBool.prototype;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return J.getInterceptor$ns(receiver).$add(receiver, a0);
};
J.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return J.getInterceptor(receiver).$eq(receiver, a0);
};
J.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return J.getInterceptor$n(receiver).$gt(receiver, a0);
};
J.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return J.getInterceptor$asx(receiver).$index(receiver, a0);
};
J.$indexSet$ax = function(receiver, a0, a1) {
  if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
J.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return J.getInterceptor$n(receiver).$le(receiver, a0);
};
J.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return J.getInterceptor$n(receiver).$lt(receiver, a0);
};
J.$mul$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return J.getInterceptor$ns(receiver).$mul(receiver, a0);
};
J.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return J.getInterceptor$n(receiver).$sub(receiver, a0);
};
J.addEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
};
J.any$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).any$1(receiver, a0);
};
J.compareTo$1$ns = function(receiver, a0) {
  return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
};
J.contains$1$asx = function(receiver, a0) {
  return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
};
J.dispatchEvent$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).dispatchEvent$1(receiver, a0);
};
J.elementAt$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
};
J.forEach$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
J.get$alpha$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$alpha(receiver);
};
J.get$context2D$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$context2D(receiver);
};
J.get$error$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$error(receiver);
};
J.get$hashCode$ = function(receiver) {
  return J.getInterceptor(receiver).get$hashCode(receiver);
};
J.get$id$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$id(receiver);
};
J.get$isFinite$n = function(receiver) {
  return J.getInterceptor$n(receiver).get$isFinite(receiver);
};
J.get$isNaN$n = function(receiver) {
  return J.getInterceptor$n(receiver).get$isNaN(receiver);
};
J.get$iterator$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$iterator(receiver);
};
J.get$length$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$length(receiver);
};
J.get$outline$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$outline(receiver);
};
J.get$search$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$search(receiver);
};
J.get$style$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$style(receiver);
};
J.get$tabIndex$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$tabIndex(receiver);
};
J.get$target$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$target(receiver);
};
J.get$x$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$x(receiver);
};
J.get$y$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$y(receiver);
};
J.preventDefault$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).preventDefault$0(receiver);
};
J.remove$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
};
J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
};
J.replaceFirst$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).replaceFirst$2(receiver, a0, a1);
};
J.roundToDouble$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).roundToDouble$0(receiver);
};
J.set$alpha$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$alpha(receiver, value);
};
J.set$cursor$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$cursor(receiver, value);
};
J.set$height$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$height(receiver, value);
};
J.set$outline$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$outline(receiver, value);
};
J.set$tabIndex$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$tabIndex(receiver, value);
};
J.set$width$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$width(receiver, value);
};
J.set$x$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$x(receiver, value);
};
J.set$y$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$y(receiver, value);
};
J.toDouble$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).toDouble$0(receiver);
};
J.toString$0 = function(receiver) {
  return J.getInterceptor(receiver).toString$0(receiver);
};
C.CanvasElement_methods = W.CanvasElement.prototype;
C.JSArray_methods = J.JSArray.prototype;
C.JSDouble_methods = J.JSDouble.prototype;
C.JSInt_methods = J.JSInt.prototype;
C.JSNumber_methods = J.JSNumber.prototype;
C.JSString_methods = J.JSString.prototype;
C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
C.WheelEvent_methods = W.WheelEvent.prototype;
C.Window_methods = W.Window.prototype;
C.C_DynamicRuntimeType = new H.DynamicRuntimeType();
C.C_OutOfMemoryError = new P.OutOfMemoryError();
C.C__DelayedDone = new P._DelayedDone();
C.C__JSRandom = new P._JSRandom();
C.C__RootZone = new P._RootZone();
C.Duration_0 = new P.Duration(0);
C.EventStreamProvider_contextRestored = new Z.EventStreamProvider0("contextRestored");
C.EventStreamProvider_contextmenu = new W.EventStreamProvider("contextmenu");
C.EventStreamProvider_keydown = new W.EventStreamProvider("keydown");
C.EventStreamProvider_keypress = new W.EventStreamProvider("keypress");
C.EventStreamProvider_keyup = new W.EventStreamProvider("keyup");
C.EventStreamProvider_load = new W.EventStreamProvider("load");
C.EventStreamProvider_mouseDown = new Z.EventStreamProvider0("mouseDown");
C.EventStreamProvider_mouseMove = new Z.EventStreamProvider0("mouseMove");
C.EventStreamProvider_mouseUp = new Z.EventStreamProvider0("mouseUp");
C.EventStreamProvider_mousedown = new W.EventStreamProvider("mousedown");
C.EventStreamProvider_mousemove = new W.EventStreamProvider("mousemove");
C.EventStreamProvider_mouseout = new W.EventStreamProvider("mouseout");
C.EventStreamProvider_mouseup = new W.EventStreamProvider("mouseup");
C.EventStreamProvider_touchBegin = new Z.EventStreamProvider0("touchBegin");
C.EventStreamProvider_touchEnd = new Z.EventStreamProvider0("touchEnd");
C.EventStreamProvider_touchMove = new Z.EventStreamProvider0("touchMove");
C.EventStreamProvider_touchcancel = new W.EventStreamProvider("touchcancel");
C.EventStreamProvider_touchend = new W.EventStreamProvider("touchend");
C.EventStreamProvider_touchenter = new W.EventStreamProvider("touchenter");
C.EventStreamProvider_touchleave = new W.EventStreamProvider("touchleave");
C.EventStreamProvider_touchmove = new W.EventStreamProvider("touchmove");
C.EventStreamProvider_touchstart = new W.EventStreamProvider("touchstart");
C.EventStreamProvider_webglcontextlost = new W.EventStreamProvider("webglcontextlost");
C.EventStreamProvider_webglcontextrestored = new W.EventStreamProvider("webglcontextrestored");
C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
C.JS_CONST_IX5 = function getTagFallback(o) {
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.name;
    if (typeof name == "string"
        && name !== ""
        && name !== "Object"
        && name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
C.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
C.JS_CONST_U4w = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
C.JS_CONST_aQP = function() {
  function typeNameInChrome(o) {
    var name = o.constructor.name;
    if (name) return name;
    var s = Object.prototype.toString.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = Object.prototype.toString.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: typeNameInChrome,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
C.JS_CONST_gkc = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
C.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
C._CustomEventStreamProvider__determineMouseWheelEventType = new W._CustomEventStreamProvider(W.Element__determineMouseWheelEventType$closure());
$.libraries_to_load = {};
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.Closure_functionCounter = 0;
$.BoundClosure_selfFieldNameCache = null;
$.BoundClosure_receiverFieldNameCache = null;
$.RuntimeFunctionType_inAssert = false;
$.getTagFunction = null;
$.alternateTagFunction = null;
$.prototypeForTagFunction = null;
$.dispatchRecordsForInstanceTags = null;
$.interceptorsForUncacheableTags = null;
$.initNativeDispatchFlag = null;
$.printToZone = null;
$._nextCallback = null;
$._lastCallback = null;
$.Zone__current = C.C__RootZone;
$.Expando__keyCount = 0;
$.Device__isOpera = null;
$.Device__isIE = null;
$.Device__isFirefox = null;
$.Device__isWebKit = null;
$.Device__cachedCssPrefix = null;
$.DisplayObject__nextID = 0;
$._Touch__globalTouchPointID = 0;
$.Mouse__customCursor = "auto";
$.Mouse__isCursorHidden = false;
$.Mouse__dragSprite = null;
$.Mouse__dragSpriteCenter = null;
$.Mouse__dragSpriteBounds = null;
$.Multitouch__inputMode = "none";
Isolate.$lazy($, "Spades", "Cards_Spades", "get$Cards_Spades", function() {
  return ["<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     sodipodi:docname=\"2S.svg\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     version=\"1.1\"\r\n     id=\"svg4423\"\r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     >\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"1.4\"\r\n       inkscape:cx=\"-51.654943\"\r\n       inkscape:cy=\"196.44509\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"967\"\r\n       inkscape:window-height=\"926\"\r\n       inkscape:window-x=\"585\"\r\n       inkscape:window-y=\"92\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"2S\"\r\n       transform=\"translate(-259.9347,-369.77721)\">\r\n      <g\r\n         transform=\"translate(-936.54343,92.135109)\"\r\n         id=\"g3511\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8049\">\r\n          <g\r\n             id=\"g8879-5\"\r\n             style=\"display:inline\"\r\n             transform=\"translate(-5060.9527,3024.9515)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect6347-0\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"6257.9292\"\r\n               y=\"-2746.811\" />\r\n            <g\r\n               id=\"g8574-2\"\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,5679.8602,-1949.801)\">\r\n              <path\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                 d=\"m 1947.7014,-2492.4202 0.5475,-6.7053 c 1.6921,-20.7232 6.2259,-27.7229 31.9598,-49.3427 12.4881,-10.4917 16.588,-15.6693 17.1653,-21.6774 1.6305,-14.1496 -11.1311,-18.5702 -19.4476,-18.6469 -10.7689,-0.099 -22.9509,6.3494 -17.1429,21.3044 l -12.079,3.547 c -2.4391,-13.9512 0.056,-27.0442 11.3776,-32.8584 15.1008,-7.5722 34.4781,-4.6012 44.2548,7.33 6.5707,8.0186 8.0644,19.0862 4.5432,27.754 -10.299,22.16 -45.2435,31.9083 -48.132,57.5277 l 38.6337,0 0,-14.2665 11.3788,0 0,26.2639 z\"\r\n                 id=\"path7100-8\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 sodipodi:nodetypes=\"csscscccsccccccc\" />\r\n              <path\r\n                 sodipodi:nodetypes=\"csscscccsccccccc\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"path7116-6\"\r\n                 d=\"m 2633.9663,-1766.5324 -0.5475,6.7053 c -1.6921,20.7232 -6.2259,27.7229 -31.9598,49.3427 -12.4881,10.4917 -16.588,15.6693 -17.1653,21.6774 -1.6305,14.1496 11.1311,18.5702 19.4476,18.6469 10.7689,0.099 22.9509,-6.3494 17.1429,-21.3044 l 12.079,-3.547 c 2.4391,13.9512 -0.056,27.0442 -11.3776,32.8584 -15.1008,7.5722 -34.4781,4.6012 -44.2548,-7.33 -6.5707,-8.0186 -8.0644,-19.0862 -4.5432,-27.754 10.299,-22.16 45.2435,-31.9083 48.132,-57.5277 l -38.6337,0 0,14.2665 -11.3788,0 0,-26.2639 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3194\"\r\n           d=\"m 1307.5477,346.30338 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3254\"\r\n           d=\"m 1307.5585,522.23564 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3310\"\r\n           d=\"m 1215.4344,347.42806 c 0.01,-0.87153 -0.8953,-0.46463 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44767 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52216 0.3102,-3.43783 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22218 4.0767,-7.15411 1.6972,3.36322 2.5586,4.32058 4.4051,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62236 0,2.48491 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.2419 -2.5787,-0.44156 -3.5038,-2.03686 -0.2818,-0.40656 -0.8487,-0.19466 -0.8392,0.3619 0.1651,2.09332 0.9553,3.98322 2.8294,6.21164 l -6.887,0 c 1.4101,-1.57596 2.8487,-3.70367 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 1403.1583,520.58759 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44767 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52216 0.3102,3.43783 3.0354,7.19955 4.355,9.32622 1.252,1.92992 2.6279,4.22219 4.0767,7.15412 1.6972,-3.36323 2.5586,-4.32059 4.4051,-7.39151 1.626,-2.7044 3.8925,-5.35298 4.0675,-8.62236 0,-2.48491 -1.046,-4.83184 -3.3994,-5.25941 -1.3314,-0.24189 -2.5787,0.44156 -3.5038,2.03687 -0.2818,0.40655 -0.8487,0.19465 -0.8392,-0.36191 0.1651,-2.09332 0.9553,-3.98322 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57597 2.8487,3.70368 2.9153,6.34897 z\"\r\n           id=\"path3332\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     \r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     id=\"svg4423\"\r\n     version=\"1.1\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     sodipodi:docname=\"3S.svg\">\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"0.98994948\"\r\n       inkscape:cx=\"-130.46687\"\r\n       inkscape:cy=\"94.869313\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"735\"\r\n       inkscape:window-height=\"925\"\r\n       inkscape:window-x=\"740\"\r\n       inkscape:window-y=\"107\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"3S\"\r\n       transform=\"translate(-259.93475,-369.77721)\">\r\n      <g\r\n         transform=\"translate(-1160.7685,92.135109)\"\r\n         id=\"g3523\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8060\">\r\n          <g\r\n             id=\"g8890-0\"\r\n             style=\"display:inline\"\r\n             transform=\"translate(-5059.9561,3024.9515)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect6351-2\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"6481.1577\"\r\n               y=\"-2746.811\" />\r\n            <g\r\n               id=\"g8582-4\"\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,5635.595,-1948.9541)\">\r\n              <path\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                 d=\"m 2836.6637,-2519.8906 8.4607,-6.1116 c 7.3538,11.7376 15.5625,19.4745 28.1181,18.1437 18.8453,-1.2674 26.6487,-20.6606 22.7039,-35.2849 -3.8092,-13.103 -19.417,-19.4954 -31.8153,-12.4982 -2.9236,1.65 -6.3052,3.6875 -6.3052,3.6875 l -4.4137,-7.1942 29.1094,-33.8631 -31.5895,0 0,14.0158 -12.1218,0 0,-25.1275 61.7456,0 0,8.5286 c 0,0 -16.5384,16.8366 -22.0128,26.0657 13.4691,0.4898 24.3232,8.8645 28.2078,22.1159 2.2798,6.97 1.255,22.9224 -1.7164,29.7878 -4.9614,11.4634 -18.5478,20.7594 -30.9625,21.2965 -20.8281,1.3757 -31.8931,-12.9608 -37.4083,-23.562 z\"\r\n                 id=\"path7102-86\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 sodipodi:nodetypes=\"ccccscccccccccccscc\" />\r\n              <path\r\n                 sodipodi:nodetypes=\"ccccscccccccccccscc\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"path7118-50\"\r\n                 d=\"m 3522.0047,-1744.6882 -8.4607,6.1116 c -7.3538,-11.7376 -15.5625,-19.4745 -28.1181,-18.1437 -18.8453,1.2674 -26.6487,20.6606 -22.7039,35.2849 3.8092,13.103 19.417,19.4954 31.8153,12.4982 2.9236,-1.65 6.3052,-3.375 6.3052,-3.375 l 5.2262,6.7567 -29.9219,33.9881 31.5895,0 0,-14.0158 12.1218,0 0,25.1275 -61.7456,0 0,-8.5286 c 0,0 16.5384,-16.8366 22.0128,-26.0657 -13.4691,-0.4898 -24.3232,-8.8645 -28.2078,-22.1159 -2.2798,-6.97 -1.255,-22.9224 1.7164,-29.7878 4.9614,-11.4634 18.5478,-20.7594 30.9625,-21.2965 20.8281,-1.3757 31.8931,12.9608 37.4083,23.562 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3196\"\r\n           d=\"m 1530.6119,347.07478 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3256\"\r\n           d=\"m 1530.6861,422.62084 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3258\"\r\n           d=\"m 1530.6227,521.30204 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3312\"\r\n           d=\"m 1439.1946,347.86095 c 0.01,-0.87153 -0.8953,-0.46462 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44768 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52215 0.3102,-3.43784 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22218 4.0767,-7.15411 1.6973,3.36322 2.5587,4.32058 4.4052,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62236 0,2.48491 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.2419 -2.5787,-0.44156 -3.5038,-2.03686 -0.2818,-0.40656 -0.8488,-0.19466 -0.8393,0.3619 0.1652,2.09332 0.9554,3.98322 2.8295,6.21164 l -6.8871,0 c 1.4101,-1.57596 2.8487,-3.70367 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 1626.1765,520.96079 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44767 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52216 0.3102,3.43783 3.0354,7.19955 4.355,9.32622 1.252,1.92992 2.6279,4.22219 4.0767,7.15412 1.6972,-3.36323 2.5586,-4.32059 4.4051,-7.39151 1.626,-2.7044 3.8925,-5.35298 4.0675,-8.62236 0,-2.48491 -1.046,-4.83184 -3.3994,-5.25941 -1.3314,-0.24189 -2.5787,0.44156 -3.5038,2.03687 -0.2818,0.40655 -0.8487,0.19465 -0.8392,-0.36191 0.1651,-2.09332 0.9553,-3.98322 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57597 2.8487,3.70368 2.9153,6.34897 z\"\r\n           id=\"path3334\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     \r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     id=\"svg4423\"\r\n     version=\"1.1\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     sodipodi:docname=\"4S.svg\">\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"0.98994948\"\r\n       inkscape:cx=\"-54.87896\"\r\n       inkscape:cy=\"40.146273\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"735\"\r\n       inkscape:window-height=\"925\"\r\n       inkscape:window-x=\"839\"\r\n       inkscape:window-y=\"94\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"Layer 1\"\r\n       transform=\"translate(-259.93471,-369.77721)\">\r\n      <g\r\n         transform=\"translate(-1383,92.135109)\"\r\n         id=\"g3536\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8085\"\r\n           transform=\"translate(-0.99656558,0)\">\r\n          <g\r\n             id=\"g8072\">\r\n            <g\r\n               transform=\"translate(-5059.9561,3024.9515)\"\r\n               style=\"display:inline\"\r\n               id=\"g8902-9\">\r\n              <rect\r\n                 y=\"-2746.811\"\r\n                 x=\"6704.3857\"\r\n                 height=\"311.81104\"\r\n                 width=\"223.22835\"\r\n                 id=\"rect6353-0\"\r\n                 style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n                 rx=\"10.629921\"\r\n                 ry=\"10.629921\" />\r\n              <g\r\n                 transform=\"matrix(0.30106207,0,0,0.30106207,5623.2929,-1949.6699)\"\r\n                 id=\"g8591-0\">\r\n                <path\r\n                   sodipodi:nodetypes=\"cccccccccccccccccccc\"\r\n                   inkscape:connector-curvature=\"0\"\r\n                   id=\"path7104-6\"\r\n                   d=\"m 3650.1724,-2493.7296 0,-9.3439 8.5863,0 0,-15.399 -42.9315,0 0,-10.865 46.4525,-70.0793 7.5907,0.026 0,70.0533 13.1319,0 0,10.865 -13.1319,0 -0.2526,15.399 7.1974,0 0,9.3439 z m 8.5863,-80.04 -29.4929,44.4321 29.4929,0 z\"\r\n                   style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n                <path\r\n                   style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                   d=\"m 4273.1571,-1766.0936 0,9.3439 -8.5863,0 0,15.399 42.9315,0 0,10.865 -46.4525,70.0793 -7.5907,-0.026 0,-70.0533 -13.1319,0 0,-10.865 13.1319,0 0.2526,-15.399 -7.1974,0 0,-9.3439 z m -8.5863,80.04 29.4929,-44.4321 -29.4929,0 z\"\r\n                   id=\"path7159-1\"\r\n                   inkscape:connector-curvature=\"0\"\r\n                   sodipodi:nodetypes=\"cccccccccccccccccccc\" />\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3198\"\r\n           d=\"m 1698.3396,344.40208 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3200\"\r\n           d=\"m 1809.8724,344.40208 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3260\"\r\n           d=\"m 1698.3504,520.37334 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3262\"\r\n           d=\"m 1809.8832,520.37334 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3314\"\r\n           d=\"m 1660.4344,348.19134 c 0.01,-0.87153 -0.8953,-0.46462 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44768 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52215 0.3102,-3.43784 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22218 4.0767,-7.15411 1.6973,3.36322 2.5587,4.32058 4.4052,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62236 0,2.48492 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.2419 -2.5787,-0.44155 -3.5038,-2.03685 -0.2818,-0.40657 -0.8488,-0.19466 -0.8393,0.36189 0.1652,2.09333 0.9554,3.98323 2.8295,6.21164 l -6.8871,0 c 1.4101,-1.57596 2.8487,-3.70367 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 1847.6531,520.19179 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44767 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52216 0.3102,3.43783 3.0354,7.19955 4.355,9.32622 1.252,1.92992 2.6279,4.22219 4.0767,7.15412 1.6972,-3.36323 2.5586,-4.32059 4.4051,-7.39151 1.626,-2.7044 3.8925,-5.35298 4.0675,-8.62236 0,-2.48491 -1.046,-4.83184 -3.3994,-5.25941 -1.3314,-0.2419 -2.5787,0.44156 -3.5038,2.03687 -0.2818,0.40655 -0.8487,0.19465 -0.8392,-0.36191 0.1651,-2.09332 0.9553,-3.98322 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57597 2.8487,3.70368 2.9153,6.34897 z\"\r\n           id=\"path3336\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     \r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     id=\"svg4423\"\r\n     version=\"1.1\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     sodipodi:docname=\"5S.svg\"\r\n     style=\"display:inline\">\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"0.98994948\"\r\n       inkscape:cx=\"60.384459\"\r\n       inkscape:cy=\"177.88745\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"735\"\r\n       inkscape:window-height=\"925\"\r\n       inkscape:window-x=\"826\"\r\n       inkscape:window-y=\"16\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"5S\"\r\n       transform=\"translate(-259.93469,-369.77721)\">\r\n      <g\r\n         transform=\"translate(-1607.2251,92.135109)\"\r\n         id=\"g3551\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8099\">\r\n          <g\r\n             id=\"g8915-3\"\r\n             style=\"display:inline\"\r\n             transform=\"translate(-5059.9561,3024.9515)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect6355-8\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"6927.6143\"\r\n               y=\"-2746.811\" />\r\n            <g\r\n               id=\"g8601-9\"\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,5562.5812,-1947.8121)\">\r\n              <path\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                 d=\"m 4561.2262,-2529.2496 10.6958,-0.094 c 2.034,6.4574 6.5502,13.0412 12.6783,14.8589 17.3116,4.0652 28.4573,-5.6046 32.1281,-16.7626 4.4514,-13.5306 -0.1008,-32.5364 -12.0159,-39.2867 -9.8838,-5.5995 -24.5629,-0.877 -31.296,11.0892 l -7.4975,-4.5831 4.0237,-44.5815 48.9286,0 0,10.5356 -39.6521,0 -0.6221,18.5714 c 8.5208,-5.9858 21.6503,-5.9276 30.1777,-1.7268 16.1588,7.7024 23.663,25.2198 20.5183,45.8727 -4.3527,20.5381 -13.942,32.1745 -35.599,33.8468 -24.0636,0.2079 -32.5637,-16.3356 -32.4679,-27.7394 z\"\r\n                 id=\"path7106-3\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 sodipodi:nodetypes=\"cccssccccccccccc\" />\r\n              <path\r\n                 sodipodi:nodetypes=\"cccssccccccccccc\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"path7122-4\"\r\n                 d=\"m 5248.3603,-1742.9152 -10.6958,0.094 c -2.034,-6.4574 -6.5502,-13.0412 -12.6783,-14.8589 -17.3116,-4.0652 -28.4573,5.6046 -32.1281,16.7626 -4.4514,13.5306 0.1008,32.5364 12.0159,39.2867 9.8838,5.5995 24.5629,0.877 31.296,-11.0892 l 7.4975,4.5831 -4.0237,44.5816 -48.9286,0 0,-10.5357 39.6521,0 0.6221,-18.5714 c -8.5208,5.9858 -21.6503,5.9276 -30.1777,1.7268 -16.1588,-7.7024 -23.663,-25.2198 -20.5183,-45.8727 4.3527,-20.5381 13.942,-32.1745 35.599,-33.8468 24.0636,-0.2079 32.5637,16.3356 32.4679,27.7394 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3202\"\r\n           d=\"m 1921.6227,346.25988 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3204\"\r\n           d=\"m 2032.304,346.25988 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3206\"\r\n           d=\"m 1977.0612,445.52218 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3264\"\r\n           d=\"m 1921.6335,520.03554 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3266\"\r\n           d=\"m 2032.3148,520.03554 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3316\"\r\n           d=\"m 1885.415,347.79364 c 0.01,-0.87153 -0.8953,-0.46462 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44768 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52215 0.3102,-3.43784 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22217 4.0767,-7.15411 1.6973,3.36322 2.5587,4.32058 4.4052,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62237 0,2.48491 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.24189 -2.5787,-0.44156 -3.5038,-2.03686 -0.2818,-0.40656 -0.8488,-0.19466 -0.8393,0.3619 0.1652,2.09332 0.9554,3.98322 2.8295,6.21163 l -6.8871,0 c 1.4101,-1.57596 2.8487,-3.70366 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 2072.1229,520.53929 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44767 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52216 0.3102,3.43783 3.0354,7.19955 4.355,9.32622 1.252,1.92991 2.6279,4.22218 4.0767,7.15411 1.6972,-3.36322 2.5586,-4.32058 4.4051,-7.3915 1.626,-2.70441 3.8925,-5.35298 4.0675,-8.62236 0,-2.48491 -1.046,-4.83183 -3.3994,-5.25941 -1.3314,-0.2419 -2.5787,0.44156 -3.5038,2.03686 -0.2818,0.40657 -0.8487,0.19466 -0.8392,-0.36189 0.1651,-2.09333 0.9553,-3.98323 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57595 2.8487,3.70366 2.9153,6.34897 z\"\r\n           id=\"path3338\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     \r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     id=\"svg4423\"\r\n     version=\"1.1\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     sodipodi:docname=\"6S.svg\">\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"0.69999999\"\r\n       inkscape:cx=\"-116.17296\"\r\n       inkscape:cy=\"223.96233\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"735\"\r\n       inkscape:window-height=\"925\"\r\n       inkscape:window-x=\"919\"\r\n       inkscape:window-y=\"85\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"6S\"\r\n       transform=\"translate(-259.93471,-369.77721)\">\r\n      <g\r\n         transform=\"translate(-1830.4536,92.135109)\"\r\n         id=\"g3566\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8113\">\r\n          <g\r\n             id=\"g8929-4\"\r\n             style=\"display:inline\"\r\n             transform=\"translate(-5059.9561,3024.9515)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect6357-6\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"7150.8428\"\r\n               y=\"-2746.811\" />\r\n            <g\r\n               id=\"g8673-0\"\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,6829.277,-2295.2794)\">\r\n              <path\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                 d=\"m 1095.4738,-1380.2175 c -1.3564,-9.1251 -1.3347,-32.7019 -0.2195,-39.6679 3.4183,-21.3528 11.7323,-31.1191 25.6513,-34.3202 13.5143,-3.1079 32.5146,0.3517 36.6838,18.2089 l -11.3149,0.209 c -6.111,-12.0683 -21.5747,-8.8426 -30.2785,-3.5944 -6.9526,4.1923 -10.0928,21.6555 -8.7492,22.7304 -0.01,0 13.1436,-9.5567 23.5026,-8.8518 22.1491,2.2646 31.2808,21.1115 30.5093,38.9247 -0.6999,21.4228 -7.6228,38.5383 -31.0937,39.6808 -22.3148,-0.842 -32.5505,-12.7884 -34.6912,-33.3195 z m 55.0399,-5.6632 c 0.1233,-14.8653 -6.7551,-25.9841 -19.7618,-27.2118 -13.0066,-1.2276 -26.1193,11.2329 -25.2114,26.3816 0.9112,15.2016 6.9042,28.0069 22.6742,27.9359 16.9602,-0.076 22.2113,-16.5294 22.299,-27.1057 z\"\r\n                 id=\"path7108-6\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 sodipodi:nodetypes=\"cssccacccccszsss\" />\r\n              <path\r\n                 sodipodi:nodetypes=\"cssccacccccszsss\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"path7161-6\"\r\n                 d=\"m 1782.2047,-583.67043 c 1.3564,9.1251 1.3347,32.7019 0.2195,39.6679 -3.4183,21.3528 -11.7323,31.1191 -25.6513,34.3202 -13.5143,3.1079 -32.5146,-0.3517 -36.6838,-18.2089 l 11.3149,-0.209 c 6.111,12.0683 21.5747,8.8426 30.2785,3.5944 6.9526,-4.1923 10.0928,-21.6555 8.7492,-22.7304 0.01,0 -13.1436,9.5567 -23.5026,8.8518 -22.1491,-2.2646 -31.2808,-21.1115 -30.5093,-38.9247 0.6999,-21.4228 7.6228,-38.5383 31.0937,-39.6808 22.3148,0.842 32.5505,12.7884 34.6912,33.3195 z m -55.0399,5.6632 c -0.1233,14.8653 6.7551,25.9841 19.7618,27.2118 13.0066,1.2276 26.1193,-11.2329 25.2114,-26.3816 -0.9112,-15.2016 -6.9042,-28.0069 -22.6742,-27.9359 -16.9602,0.076 -22.2113,16.5294 -22.299,27.1057 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3208\"\r\n           d=\"m 2144.7342,346.70068 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3210\"\r\n           d=\"m 2256.267,346.70068 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3268\"\r\n           d=\"m 2144.745,422.71854 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3270\"\r\n           d=\"m 2256.2778,422.71854 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3272\"\r\n           d=\"m 2256.2778,521.31714 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3274\"\r\n           d=\"m 2144.745,521.31714 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3326\"\r\n           d=\"m 2107.7822,346.57045 c 0.01,-0.87153 -0.8953,-0.46462 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44768 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52215 0.3102,-3.43784 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22218 4.0767,-7.15411 1.6973,3.36322 2.5587,4.32058 4.4052,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62236 0,2.48491 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.2419 -2.5787,-0.44156 -3.5038,-2.03686 -0.2818,-0.40656 -0.8488,-0.19466 -0.8393,0.3619 0.1652,2.09332 0.9554,3.98322 2.8295,6.21164 l -6.8871,0 c 1.4101,-1.57596 2.8487,-3.70367 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 2296.5975,519.31599 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44767 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52216 0.3102,3.43783 3.0354,7.19955 4.355,9.32622 1.252,1.92991 2.6279,4.22219 4.0767,7.15411 1.6972,-3.36322 2.5586,-4.32058 4.4051,-7.3915 1.626,-2.70441 3.8925,-5.35298 4.0675,-8.62236 0,-2.48491 -1.046,-4.83184 -3.3994,-5.25941 -1.3314,-0.2419 -2.5787,0.44156 -3.5038,2.03687 -0.2818,0.40655 -0.8487,0.19465 -0.8392,-0.36191 0.1651,-2.09332 0.9553,-3.98322 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57597 2.8487,3.70368 2.9153,6.34897 z\"\r\n           id=\"path3340\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     id=\"svg4423\"\r\n     version=\"1.1\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     sodipodi:docname=\"7S.svg\">\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"0.98994948\"\r\n       inkscape:cx=\"-2.4883736\"\r\n       inkscape:cy=\"32.008803\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"735\"\r\n       inkscape:window-height=\"925\"\r\n       inkscape:window-x=\"792\"\r\n       inkscape:window-y=\"40\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"7S\"\r\n       transform=\"translate(-259.93806,-369.78057)\">\r\n      <g\r\n         transform=\"translate(-714.31152,-219.67593)\"\r\n         id=\"g3643\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8156\">\r\n          <g\r\n             id=\"g8853-3\"\r\n             style=\"display:inline\"\r\n             transform=\"translate(-5059.9561,3024.9515)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99000001;stroke-miterlimit:3.79999995;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect6359-6\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"6034.7007\"\r\n               y=\"-2435\" />\r\n            <g\r\n               id=\"g8660-1\"\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,5449.5822,-1980.8821)\">\r\n              <path\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                 d=\"m 1984.5104,-1353.8984 c 7.0822,-36.8355 14.6449,-64.4729 34.4785,-94.4913 l -40.3064,0 0,12.9215 -10.7143,0 0,-24.3501 58.9719,0 7.2692,11.4286 c -21.0637,22.5765 -40.3507,95.5559 -36.9337,94.4913 z\"\r\n                 id=\"path7110-5\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 sodipodi:nodetypes=\"cccccccccc\" />\r\n              <path\r\n                 sodipodi:nodetypes=\"cccccccccc\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"path7126-4\"\r\n                 d=\"m 2643.988,-627.17059 c -7.0822,36.8355 -14.6449,64.4729 -34.4785,94.4913 l 40.3064,0 0,-12.9215 10.7143,0 0,24.3501 -58.9719,0 -7.2692,-11.4286 c 21.0637,-22.5765 40.3507,-95.5559 36.9337,-94.4913 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3212\"\r\n           d=\"m 1027.8408,659.95608 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3214\"\r\n           d=\"m 1139.3736,659.95608 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3216\"\r\n           d=\"m 1084.2747,710.08028 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3218\"\r\n           d=\"m 1139.3736,760.20448 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3220\"\r\n           d=\"m 1027.8408,760.20448 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3304\"\r\n           d=\"m 1139.3844,835.92734 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3306\"\r\n           d=\"m 1027.8516,835.92734 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3324\"\r\n           d=\"m 991.81784,660.96774 c 0.01,-0.87153 -0.8953,-0.46462 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44768 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52215 0.3102,-3.43784 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22217 4.0767,-7.15411 1.6973,3.36323 2.5587,4.32058 4.4052,7.3915 1.626,2.70441 3.89246,5.35298 4.06746,8.62236 0,2.48491 -1.04596,4.83184 -3.39936,5.25941 -1.3314,0.2419 -2.5787,-0.44156 -3.5038,-2.03685 -0.2818,-0.40657 -0.8488,-0.19467 -0.8393,0.36189 0.1652,2.09332 0.9554,3.98322 2.8295,6.21164 l -6.8871,0 c 1.4101,-1.57596 2.8487,-3.70366 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 1180.6331,833.71329 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44767 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52216 0.3102,3.43783 3.0354,7.19955 4.355,9.32622 1.252,1.92991 2.6279,4.22218 4.0767,7.15411 1.6972,-3.36322 2.5586,-4.32058 4.4051,-7.3915 1.626,-2.70441 3.8925,-5.35298 4.0675,-8.62236 0,-2.48491 -1.046,-4.83184 -3.3994,-5.25941 -1.3314,-0.2419 -2.5787,0.44156 -3.5038,2.03686 -0.2818,0.40656 -0.8487,0.19466 -0.8392,-0.3619 0.1651,-2.09332 0.9553,-3.98322 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57596 2.8487,3.70367 2.9153,6.34898 z\"\r\n           id=\"path3348\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     \r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     id=\"svg4423\"\r\n     version=\"1.1\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     sodipodi:docname=\"8S.svg\">\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"0.98994948\"\r\n       inkscape:cx=\"-50.228933\"\r\n       inkscape:cy=\"125.15858\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"735\"\r\n       inkscape:window-height=\"925\"\r\n       inkscape:window-x=\"1007\"\r\n       inkscape:window-y=\"90\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"8S\"\r\n       transform=\"translate(-259.9347,-369.7772)\">\r\n      <g\r\n         transform=\"translate(-937.54003,-219.67593)\"\r\n         id=\"g3625\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8172\">\r\n          <g\r\n             id=\"g8836-8\"\r\n             style=\"display:inline\"\r\n             transform=\"translate(-5059.9561,3024.9515)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect6361-4\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"6257.9292\"\r\n               y=\"-2435\" />\r\n            <g\r\n               id=\"g8646-0\"\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,5370.0941,-1979.9322)\">\r\n              <path\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                 d=\"m 2971.7422,-1386.8149 c 0.5319,-14.5332 5.8816,-19.9909 16.4206,-27.6004 -8.4057,-5.9629 -11.9499,-14.7364 -11.2342,-22.2121 1.7322,-18.0922 15.9763,-27.144 31.5053,-26.7498 15.5289,0.3942 28.9128,12.5011 29.9566,25.6486 0.9079,11.437 -2.5591,16.948 -10.8197,22.9693 9.8084,8.1096 16.0776,13.4522 15.8397,27.7687 -0.2379,14.3165 -12.641,31.3553 -34.2605,31.8784 -21.6196,0.5231 -37.9396,-17.1694 -37.4078,-31.7027 z m 60.3616,0.048 c 0.9274,-13.1605 -10.9222,-22.0398 -24.2916,-22.1778 -13.028,-0.1345 -24.6832,10.7839 -24.6854,22.5994 0,12.6917 15.1583,19.586 24.9483,19.6226 11.8988,0.044 23.2299,-8.7095 24.0287,-20.0442 z m -4.2782,-47.0779 c 0.2587,-11.0861 -10.1536,-19.0311 -20.888,-18.7114 -9.5508,0.2844 -19.6672,7.4427 -19.6723,16.7104 -0.01,11.5921 11.4996,17.3796 21.3142,17.598 8.9033,0.1981 19.0506,-7.2235 19.2461,-15.597 z\"\r\n                 id=\"path7112-7\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 sodipodi:nodetypes=\"zcszsczzzssssssssss\" />\r\n              <path\r\n                 sodipodi:nodetypes=\"zcszsczzzssssssssss\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"path7128-6\"\r\n                 d=\"m 3667.7476,-600.56421 c -0.5319,14.5332 -5.8816,19.9909 -16.4206,27.6004 8.4057,5.9629 11.9499,14.7364 11.2342,22.2121 -1.7322,18.0922 -15.9763,27.144 -31.5053,26.7498 -15.5289,-0.3942 -28.9128,-12.5011 -29.9566,-25.6486 -0.9079,-11.437 2.5591,-16.948 10.8197,-22.9693 -9.8084,-8.1096 -16.0776,-13.4522 -15.8397,-27.7687 0.2379,-14.3165 12.641,-31.3553 34.2605,-31.8784 21.6196,-0.5231 37.9396,17.1694 37.4078,31.7027 z m -60.3616,-0.048 c -0.9274,13.1605 10.9222,22.0398 24.2916,22.1778 13.028,0.1345 24.6832,-10.7839 24.6854,-22.5994 0,-12.6917 -15.1583,-19.586 -24.9483,-19.6226 -11.8988,-0.044 -23.2299,8.7095 -24.0287,20.0442 z m 4.2782,47.0779 c -0.2587,11.0861 10.1536,19.0311 20.888,18.7114 9.5508,-0.2844 19.6672,-7.4427 19.6723,-16.7104 0.01,-11.5921 -11.4996,-17.3796 -21.3142,-17.598 -8.9033,-0.1981 -19.0506,7.2235 -19.2461,15.597 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3222\"\r\n           d=\"m 1250.4427,657.78578 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3224\"\r\n           d=\"m 1361.9754,657.78578 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3226\"\r\n           d=\"m 1306.6258,707.90999 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3228\"\r\n           d=\"m 1250.4427,758.03418 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3230\"\r\n           d=\"m 1361.9754,758.03418 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3298\"\r\n           d=\"m 1361.9862,833.75704 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3300\"\r\n           d=\"m 1306.6366,784.45774 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3302\"\r\n           d=\"m 1250.4535,833.75704 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3322\"\r\n           d=\"m 1215.8002,661.91764 c 0.01,-0.87153 -0.8953,-0.46462 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44768 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52215 0.3102,-3.43784 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22218 4.0767,-7.15411 1.6973,3.36322 2.5587,4.32058 4.4052,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62236 0,2.48491 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.2419 -2.5787,-0.44156 -3.5038,-2.03686 -0.2818,-0.40656 -0.8488,-0.19466 -0.8393,0.3619 0.1652,2.09332 0.9554,3.98322 2.8295,6.21164 l -6.8871,0 c 1.4101,-1.57596 2.8487,-3.70367 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 1404.6155,834.66319 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44766 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52217 0.3102,3.43783 3.0354,7.19954 4.355,9.32621 1.252,1.92992 2.6279,4.22218 4.0767,7.15412 1.6972,-3.36323 2.5586,-4.32059 4.4051,-7.39151 1.626,-2.7044 3.8925,-5.35298 4.0675,-8.62235 0,-2.48492 -1.046,-4.83184 -3.3994,-5.25942 -1.3314,-0.24189 -2.5787,0.44156 -3.5038,2.03686 -0.2818,0.40657 -0.8487,0.19467 -0.8392,-0.36189 0.1651,-2.09333 0.9553,-3.98323 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57595 2.8487,3.70366 2.9153,6.34897 z\"\r\n           id=\"path3346\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     \r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     id=\"svg4423\"\r\n     version=\"1.1\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     sodipodi:docname=\"9S.svg\">\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"1.4\"\r\n       inkscape:cx=\"-39.719898\"\r\n       inkscape:cy=\"48.050279\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"735\"\r\n       inkscape:window-height=\"925\"\r\n       inkscape:window-x=\"832\"\r\n       inkscape:window-y=\"92\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"Layer 1\"\r\n       transform=\"translate(-259.93475,-369.7772)\">\r\n      <g\r\n         transform=\"translate(-1160.7685,-219.67593)\"\r\n         id=\"g3605\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8189\">\r\n          <g\r\n             id=\"g8817-2\"\r\n             style=\"display:inline\"\r\n             transform=\"translate(-5059.9561,3024.9515)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect6363-9\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"6481.1577\"\r\n               y=\"-2435\" />\r\n            <g\r\n               id=\"g8631-1\"\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,5727.1309,-1950.5247)\">\r\n              <g\r\n                 id=\"g8685-3\"\r\n                 transform=\"translate(-1267.7708,-112.90889)\">\r\n                <path\r\n                   sodipodi:nodetypes=\"ccsccccscccsssssss\"\r\n                   inkscape:connector-curvature=\"0\"\r\n                   id=\"path7114-5\"\r\n                   d=\"m 3799.8152,-1365.6057 10.0533,-3.1289 c 3.7922,9.9493 11.4591,12.8837 19.5692,12.2531 14.5555,-1.1319 19.3863,-17.1012 20.478,-31.2209 -5.6714,5.8929 -14.1968,8.8873 -21.456,8.5952 -23.1923,-1.2267 -29.1284,-19.4462 -29.3445,-38.5346 -0.6442,-16.0974 6.137,-27.754 17.7651,-33.0942 6.1521,-2.7117 20.2437,-2.7121 26.4377,0.4937 14.2233,7.3614 19.4871,20.0913 18.5323,50.458 0.015,24.9907 -5.396,54.0994 -32.6758,54.7229 -15.7699,2.1396 -27.7434,-9.8975 -29.3593,-20.5443 z m 39.4845,-27.3822 c 4.7326,-2.9414 7.4036,-5.7004 9.5251,-9.8386 1.7414,-3.3968 2.3306,-5.159 1.8343,-12.1919 -1.2788,-18.1202 -10.9588,-28.3918 -24.9935,-26.3512 -7.8275,1.1381 -12.101,5.442 -14.5574,13.4454 -4.5359,14.7783 1.214,32.0775 11.9863,36.0621 4.8586,1.7971 12.3384,1.2775 16.2052,-1.1258 z\"\r\n                   style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n                <path\r\n                   style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                   d=\"m 4484.1787,-591.31443 -10.0533,3.1289 c -3.7922,-9.9493 -11.4591,-12.8837 -19.5692,-12.2531 -14.5555,1.1319 -19.3863,17.1012 -20.478,31.221 5.6714,-5.893 14.1968,-8.8874 21.456,-8.5953 23.1923,1.2267 29.1284,19.4463 29.3445,38.5347 0.6442,16.0974 -6.137,27.754 -17.7651,33.0942 -6.1521,2.7117 -20.2437,2.7121 -26.4377,-0.4937 -14.2233,-7.3614 -19.4871,-20.0913 -18.5323,-50.458 -0.015,-24.9908 5.396,-54.0995 32.6758,-54.723 15.7699,-2.1396 27.7434,9.8975 29.3593,20.5443 z m -39.4845,27.3823 c -4.7326,2.9414 -7.4036,5.7004 -9.5251,9.8386 -1.7414,3.3968 -2.3306,5.159 -1.8343,12.1919 1.2788,18.1202 10.9588,28.3918 24.9935,26.3512 7.8275,-1.1381 12.101,-5.442 14.5574,-13.4454 4.5359,-14.7783 -1.214,-32.0775 -11.9863,-36.0621 -4.8586,-1.7971 -12.3384,-1.2775 -16.2052,1.1258 z\"\r\n                   id=\"path7130-9\"\r\n                   inkscape:connector-curvature=\"0\"\r\n                   sodipodi:nodetypes=\"ccsccccscccsssssss\" />\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3232\"\r\n           d=\"m 1473.9626,658.82428 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3234\"\r\n           d=\"m 1585.4954,658.82428 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3236\"\r\n           d=\"m 1585.4954,724.15488 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3238\"\r\n           d=\"m 1473.9626,724.15488 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3288\"\r\n           d=\"m 1585.5062,833.28144 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3290\"\r\n           d=\"m 1585.5062,768.17604 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3292\"\r\n           d=\"m 1530.4178,734.41634 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3294\"\r\n           d=\"m 1473.9734,768.17604 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3296\"\r\n           d=\"m 1473.9734,833.28144 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3320\"\r\n           d=\"m 1438.0302,657.33254 c 0.01,-0.87153 -0.8953,-0.46462 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44768 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52215 0.3102,-3.43784 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22218 4.0767,-7.15411 1.6973,3.36322 2.5587,4.32058 4.4052,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62236 0,2.48491 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.2419 -2.5787,-0.44156 -3.5038,-2.03686 -0.2818,-0.40656 -0.8488,-0.19466 -0.8393,0.3619 0.1652,2.09332 0.9554,3.98322 2.8295,6.21164 l -6.8871,0 c 1.4101,-1.57596 2.8487,-3.70367 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 1626.8455,830.07809 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44766 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52217 0.3102,3.43782 3.0354,7.19954 4.355,9.32621 1.252,1.92992 2.6279,4.22218 4.0767,7.15412 1.6972,-3.36323 2.5586,-4.32059 4.4051,-7.39151 1.626,-2.7044 3.8925,-5.35298 4.0675,-8.62236 0,-2.48491 -1.046,-4.83183 -3.3994,-5.25941 -1.3314,-0.24189 -2.5787,0.44156 -3.5038,2.03686 -0.2818,0.40657 -0.8487,0.19467 -0.8392,-0.36189 0.1651,-2.09333 0.9553,-3.98323 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57595 2.8487,3.70366 2.9153,6.34897 z\"\r\n           id=\"path3344\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n     xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n     xmlns:cc=\"http://creativecommons.org/ns#\"\r\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n     xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n     xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n     xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n     \r\n     width=\"__width__\" \r\n                                                      height=\"__height__\" \r\n                                                      viewBox=\"0 0 224.21875 312.8125\"\r\n     id=\"svg4423\"\r\n     version=\"1.1\"\r\n     inkscape:version=\"0.48.4 r9939\"\r\n     sodipodi:docname=\"10S.svg\">\r\n    <sodipodi:namedview\r\n       id=\"base\"\r\n       pagecolor=\"#ffffff\"\r\n       bordercolor=\"#666666\"\r\n       borderopacity=\"1.0\"\r\n       inkscape:pageopacity=\"0.0\"\r\n       inkscape:pageshadow=\"2\"\r\n       inkscape:zoom=\"0.98994948\"\r\n       inkscape:cx=\"-17.148623\"\r\n       inkscape:cy=\"155.04387\"\r\n       inkscape:document-units=\"px\"\r\n       inkscape:current-layer=\"layer1\"\r\n       showgrid=\"false\"\r\n       inkscape:snap-global=\"true\"\r\n       inkscape:snap-bbox=\"true\"\r\n       inkscape:snap-page=\"true\"\r\n       inkscape:window-width=\"735\"\r\n       inkscape:window-height=\"925\"\r\n       inkscape:window-x=\"693\"\r\n       inkscape:window-y=\"73\"\r\n       inkscape:window-maximized=\"0\" />\r\n    <defs\r\n       id=\"defs4425\" />\r\n    <metadata\r\n       id=\"metadata4428\">\r\n      <rdf:RDF>\r\n        <cc:Work\r\n           rdf:about=\"\">\r\n          <dc:format>image/svg+xml</dc:format>\r\n          <dc:type\r\n             rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n          <dc:title />\r\n        </cc:Work>\r\n      </rdf:RDF>\r\n    </metadata>\r\n    <g\r\n       id=\"layer1\"\r\n       inkscape:groupmode=\"layer\"\r\n       inkscape:label=\"10S\"\r\n       transform=\"translate(-259.93474,-369.77721)\">\r\n      <g\r\n         transform=\"translate(-1383.9965,-219.67609)\"\r\n         id=\"g3582\"\r\n         style=\"display:inline\">\r\n        <g\r\n           id=\"g8208\">\r\n          <g\r\n             id=\"g8795-1\"\r\n             style=\"display:inline\"\r\n             transform=\"matrix(-1,0,0,-1,8572.0437,-1533.2373)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect6365-8\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"6704.3857\"\r\n               y=\"-2435\" />\r\n            <g\r\n               id=\"g8612-4\"\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,5267.5599,-1982.7028)\">\r\n              <path\r\n                 sodipodi:nodetypes=\"ccccc\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"path7216-9\"\r\n                 d=\"m 4797.8616,-1351.7241 0,-104.6518 10.3328,0 0,104.6518 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n              <path\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"rect7235-6\"\r\n                 d=\"m 4838.815,-1456.3759 c -9.9454,0 -17.9408,8.9238 -17.9408,20.0041 l 0,64.6435 c 0,11.0803 7.9954,20.0042 17.9408,20.0042 l 5.7965,0 c 9.9453,0 17.9565,-8.9239 17.9565,-20.0042 l 0,-64.6435 c 0,-11.0803 -8.0112,-20.0041 -17.9565,-20.0041 l -5.7965,0 z m 2.9927,9.8918 c 5.8743,0 10.6007,4.4408 10.6007,9.9706 l 0,65.5097 c 0,5.5298 -4.7264,9.9864 -10.6007,9.9864 -5.8742,0 -10.6006,-4.4566 -10.6006,-9.9864 l 0,-65.5097 c 0,-5.5298 4.7264,-9.9706 10.6006,-9.9706 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;stroke:none;display:inline\" />\r\n              <g\r\n                 style=\"fill:#f60302;fill-opacity:1;display:inline\"\r\n                 id=\"g7984-3\"\r\n                 transform=\"matrix(-0.50404239,0,0,-0.50404239,7403.6384,312.07817)\">\r\n                <path\r\n                   sodipodi:nodetypes=\"ccccc\"\r\n                   inkscape:connector-curvature=\"0\"\r\n                   id=\"path7986-78\"\r\n                   d=\"m 3799.25,1843.75 0,-207.625 20.5,0 0,207.625 z\"\r\n                   style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n                <path\r\n                   inkscape:connector-curvature=\"0\"\r\n                   id=\"path7988-8\"\r\n                   d=\"m 3880.5,1636.125 c -19.7312,0 -35.5938,17.7045 -35.5938,39.6875 l 0,128.25 c 0,21.983 15.8626,39.6875 35.5938,39.6875 l 11.5,0 c 19.7312,0 35.625,-17.7045 35.625,-39.6875 l 0,-128.25 c 0,-21.983 -15.8938,-39.6875 -35.625,-39.6875 l -11.5,0 z m 5.9375,19.625 c 11.6542,0 21.0313,8.8104 21.0313,19.7812 l 0,129.9688 c 0,10.9708 -9.3771,19.8125 -21.0313,19.8125 -11.6542,0 -21.0313,-8.8417 -21.0313,-19.8125 l 0,-129.9688 c 0,-10.9708 9.3771,-19.7812 21.0313,-19.7812 z\"\r\n                   style=\"fill:#000000;fill-opacity:1;stroke:none\" />\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3240\"\r\n           d=\"m 1697.3655,658.47198 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3242\"\r\n           d=\"m 1753.0811,691.13729 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3244\"\r\n           d=\"m 1808.8983,658.47198 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3246\"\r\n           d=\"m 1808.8983,723.80258 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3248\"\r\n           d=\"m 1697.3655,723.80258 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3276\"\r\n           d=\"m 1808.9091,767.93694 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3278\"\r\n           d=\"m 1808.9091,833.26754 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3280\"\r\n           d=\"m 1753.5595,800.60225 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3282\"\r\n           d=\"m 1697.3763,767.93694 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccsscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3284\"\r\n           d=\"m 1697.3763,833.26754 c 0.015,2.0257 -1.5868,2.06443 -1.5686,0.58579 -0.1343,-7.42864 -6.4165,-11.08642 -10.9806,-10.21873 -7.0361,1.33763 -9.2818,8.32207 -9.2147,12.43542 0.2072,12.69631 12.9878,22.05842 24.5202,38.33458 8.4501,-14.69076 22.3972,-26.22964 23.2229,-37.58575 1.0977,-15.09805 -18.0089,-20.72969 -20.7369,-3.13271 -0.176,1.24304 -1.6397,1.80111 -1.5261,0.065 0.4145,-4.82259 -0.1749,-6.83135 5.2657,-18.7194 l -14.2217,0 c 3.1497,5.55487 5.0254,12.37457 5.2398,18.23576 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3318\"\r\n           d=\"m 1661.2189,659.82154 c 0.01,-0.87153 -0.8953,-0.46462 -1.0178,-0.1903 -1.1632,1.9856 -2.8648,2.44768 -4.5479,1.73181 -1.6673,-0.70915 -2.6042,-2.28034 -2.4539,-4.52215 0.3102,-3.43784 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22218 4.0767,-7.15411 1.6973,3.36322 2.5587,4.32058 4.4052,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62236 0,2.48491 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.2419 -2.5787,-0.44156 -3.5038,-2.03686 -0.2818,-0.40656 -0.8488,-0.19465 -0.8393,0.3619 0.1652,2.09332 0.9554,3.98322 2.8295,6.21164 l -6.8871,0 c 1.4101,-1.57596 2.8487,-3.70367 2.9153,-6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 1850.0342,832.56719 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44766 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52217 0.3102,3.43783 3.0354,7.19954 4.355,9.32621 1.252,1.92992 2.6279,4.22218 4.0767,7.15412 1.6972,-3.36323 2.5586,-4.32059 4.4051,-7.39151 1.626,-2.7044 3.8925,-5.35298 4.0675,-8.62236 0,-2.48491 -1.046,-4.83183 -3.3994,-5.25941 -1.3314,-0.24189 -2.5787,0.44156 -3.5038,2.03686 -0.2818,0.40657 -0.8487,0.19467 -0.8392,-0.36189 0.1651,-2.09333 0.9553,-3.98323 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57595 2.8487,3.70366 2.9153,6.34897 z\"\r\n           id=\"path3342\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  ", "<svg\r\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n   xmlns:cc=\"http://creativecommons.org/ns#\"\r\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n   xmlns=\"http://www.w3.org/2000/svg\"\r\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n   width=\"__width__\" \r\n                                                    height=\"__height__\" \r\n                                                    viewBox=\"0 0 224.21875 312.8125\"\r\n   id=\"svg4423\"\r\n   version=\"1.1\"\r\n   inkscape:version=\"0.48.4 r9939\"\r\n   sodipodi:docname=\"JS.svg\">\r\n  <title\r\n     id=\"title3002\">Vectorized Playing Cards 1.0</title>\r\n  <sodipodi:namedview\r\n     id=\"base\"\r\n     pagecolor=\"#ffffff\"\r\n     bordercolor=\"#666666\"\r\n     borderopacity=\"1.0\"\r\n     inkscape:pageopacity=\"0.0\"\r\n     inkscape:pageshadow=\"2\"\r\n     inkscape:zoom=\"1.4142136\"\r\n     inkscape:cx=\"131.45366\"\r\n     inkscape:cy=\"136.99533\"\r\n     inkscape:document-units=\"px\"\r\n     inkscape:current-layer=\"layer1\"\r\n     showgrid=\"false\"\r\n     inkscape:snap-global=\"false\"\r\n     inkscape:snap-bbox=\"true\"\r\n     inkscape:snap-page=\"true\"\r\n     inkscape:window-width=\"1116\"\r\n     inkscape:window-height=\"1036\"\r\n     inkscape:window-x=\"786\"\r\n     inkscape:window-y=\"0\"\r\n     inkscape:window-maximized=\"0\"\r\n     showguides=\"true\"\r\n     inkscape:guide-bbox=\"true\" />\r\n  <defs\r\n     id=\"defs4425\" />\r\n  <metadata\r\n     id=\"metadata4428\">\r\n    <rdf:RDF>\r\n      <cc:Work\r\n         rdf:about=\"\">\r\n        <dc:format>image/svg+xml</dc:format>\r\n        <dc:type\r\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n        <dc:title>Vectorized Playing Cards 1.0</dc:title>\r\n        <dc:date>4/24/2011</dc:date>\r\n        <dc:creator>\r\n          <cc:Agent>\r\n            <dc:title>Chris Aguilar</dc:title>\r\n          </cc:Agent>\r\n        </dc:creator>\r\n        <dc:rights>\r\n          <cc:Agent>\r\n            <dc:title>LGPL 3.0</dc:title>\r\n          </cc:Agent>\r\n        </dc:rights>\r\n      </cc:Work>\r\n    </rdf:RDF>\r\n  </metadata>\r\n  <g\r\n     id=\"layer1\"\r\n     inkscape:groupmode=\"layer\"\r\n     inkscape:label=\"JC\"\r\n     transform=\"translate(-259.93524,-369.77796)\">\r\n    <g\r\n       transform=\"matrix(0.99999525,0,0,0.99999525,-289.24049,-1384.0659)\"\r\n       id=\"g3941\"\r\n       style=\"display:inline\">\r\n      <g\r\n         style=\"display:inline\"\r\n         id=\"g4637\"\r\n         transform=\"translate(-1317.9815,1164.3989)\">\r\n        <rect\r\n           y=\"589.95166\"\r\n           x=\"1867.6582\"\r\n           height=\"311.81104\"\r\n           width=\"223.22835\"\r\n           id=\"rect6367-2\"\r\n           style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n           rx=\"10.629921\"\r\n           ry=\"10.629921\" />\r\n      </g>\r\n      <g\r\n         style=\"display:inline\"\r\n         id=\"g4031\"\r\n         transform=\"matrix(0.15646487,0.00258586,-0.00258586,0.15646487,828.41743,1874.1434)\">\r\n        <g\r\n           id=\"g3851-4\">\r\n          <path\r\n             transform=\"matrix(0.99986346,-0.01652454,0.01652454,0.99986346,-2934.8522,-683.42696)\"\r\n             sodipodi:nodetypes=\"ccccccccccccccccscccscccccccccccsscccsscsssscccsssccccccccccssccsscsccscsssccssccssccccscccsccssscccccccscscccccccccccccccccccccccscccccscccsccscccssccssscccccccscccscccsccccccsscccscccccccscscccccccccccccccccccccccccccccccccssscsccscsssssccsssscsssscccccccccsscccsscccccccccsscssscccccccccsssscsssssccsccssssccscsccsssccssscccscscscscsscccccsccccccccccssscssssssssssssccsccccccsscccccsccsssssscsssccsssssccccsscccccssscccssssscsssssccscsscsccccsccccsscsccscscscscsccsccscsccccssscsssscsscsccsscssscssscssscscccscsscsccscssccsscsssccsscccccssccsscsssccccscscscccscccccccccccccccccccccccccccccccccsscsccccccccccccccccccccccccsssscccccccccccccccccccccccccccccccccccccccccccccccccsccccccccccccccccccccccsscsscccccsccsscsccccssccccccccccccscccsssscccccccsccssccccccccccccssccccccccccccccsccsccscccccccccscccsccccccccccccccscccsscscsccccscccsscscscscccssccccccccccccccsccsccccccsccccsssscccscscsccccccccsccsscccsccsssccccscssscscsscsssccccsscscssccsscsssscccssssscscssccscccsccsccccccccccccccc\"\r\n             inkscape:connector-curvature=\"0\"\r\n             id=\"path4037\"\r\n             d=\"m 1327.125,110.53125 -0.25,1699.09375 1052.0938,2.2812 0.625,-1700.1562 z m 334.1562,9.9375 476.6876,1.75 c 0,0 -54.6125,70.65306 -65.9063,102.8125 -8.7747,11.25708 -12.7482,9.21522 -27.2187,6.28125 -38.7486,-10.13056 -104.0414,-9.94142 -136.4688,-10.53125 -61.2262,-2.73161 -116.2197,16.24781 -177.5312,19.34375 -21.184,-35.42146 -51.9018,-79.88675 -69.5626,-119.65625 z m -320.9687,3.09375 306.5625,0.90625 71.875,131.15625 c 2.6055,3.64741 0.121,11.17204 -1.4375,15.40625 -8.8699,24.97517 -16.7108,39.45009 -34.6563,69.21875 -16.997,28.19541 -23.0948,54.01706 -17.0624,71.375 0.9056,2.13257 1.6876,5.36846 1.375,8.09375 -0.9933,8.65604 -8.2617,18.67403 -18.1563,25.53125 -6.7227,1.07895 -20.6932,1.93952 -28.7813,9.9375 -6.9319,6.85467 -12.6117,16.88543 -11.7187,35.21875 0.4163,6.55678 1.25,10.71875 1.25,10.71875 -91.408,38.03174 -156.9194,82.58564 -154.75,84.21875 -0.8599,-0.39584 -80.3488,-36.97705 -113.4375,-46.03125 z m 814.6563,2.3125 210.1562,0.1875 1.25,599.6875 -80.6562,-52.28125 c 6.6151,-4.60691 10.7019,-7.34006 17.6562,-12.0625 1.2369,-0.37381 3.5744,-0.41126 5.0938,-0.75 14.0474,-3.13194 23.8426,-13.6403 18.9687,-24.53125 -3.3088,-7.39352 1.2103,-6.94338 5.2813,-12.96875 4.5828,-6.78284 3.6307,-12.82434 0.7187,-18.53125 -1.4453,-2.83221 -0.6495,-3.95349 1.7813,-9.1875 6.434,-7.98072 1.783,-21.48054 -6.5313,-25.84375 -0.8703,-1.28479 0.9104,-3.27074 1.3125,-5.125 2.345,-10.81367 -1.9605,-20.3071 -11.3125,-22.71875 -4.814,-1.24142 -6.417,-2.07787 -4.7187,-6.375 3.0137,-7.62589 -0.9574,-10.46098 -7.2188,-12.9375 -10.5345,-4.16666 -7.5528,-4.83319 5.4688,-10.6875 26.6527,-11.98274 32.9285,-47.60925 14.5937,-79.9375 -2.331,-4.11014 -8.5591,-13.75556 -12.7813,-20.21875 -4.9342,-7.55329 -9.7187,-14.0625 -9.7187,-14.0625 l 35.2813,-49.1875 c 0,0 -24.5641,-29.09706 -33.3126,-45.1875 2.0617,-7.94246 26.6534,-32.88209 29.8438,-57.09375 5.0025,-37.9628 -23.8258,-62.25806 -51.0938,-59.40625 -18.9162,1.97835 -42.1866,14.07635 -40.4374,49.21875 0.5433,10.91604 4.8051,22.18963 12.5312,35.84375 5.3994,10.21481 12.3943,21.02715 19.0938,31.40625 l -35.5,48.53125 35.875,45.4375 c 0,0 -0.4718,0.73139 -1.25,1.96875 -3.5708,5.67737 -13.9449,22.39155 -18.4376,32.1875 -13.2308,26.15962 -17.9166,54.87993 9.25,75.125 4.7515,2.91827 8.4149,5.3997 10.4376,7.40625 2.6659,2.64473 1.0039,4.65464 -3.2813,5.65625 -5.0458,1.0644 -10.1864,0.99305 -15.5,3.09375 -17.0359,6.21519 -34.1063,16.24376 -46.25,26.0625 -6.8158,5.51089 -17.8022,22.95602 -24.5,37.125 -7.2794,15.39926 -9.3125,18.8125 -9.3125,18.8125 l -124.7812,-79.875 c 0,0 -3.1687,-2.50264 -4.0313,-3.46875 -2.3238,-2.60268 -1.4881,-4.11273 0.125,-7 1.3661,-2.44517 1.4167,-9.63458 0.8125,-15.09375 -0.1701,-10.46923 -0.092,-10.50987 5.9375,-20.125 2.1244,-3.38804 3.0052,-6.77282 1.7813,-12 -1.9556,-5.87245 -2.1417,-4.00141 1.5937,-8.03125 1.4567,-1.79349 3.2147,-2.68065 3.5,-4.625 0.3819,-2.60259 0.1416,-7.14439 0.1875,-15.625 0.092,-16.99514 -0.1379,-15.5941 9.4062,-23.0625 11.8539,-9.27582 16.2736,-13.64925 18.1563,-17.84375 2.6991,-6.01343 0,-10.55099 -6.6563,-22.5625 -3.042,-5.48669 -7.7523,-12.89384 -10.0312,-17.03125 -4.2599,-7.4376 -10.413,-17.23188 -13.3438,-26.59375 -4.4376,-7.18928 -3.7623,-19.64988 0.3438,-26.96875 5.1544,-9.18746 6.5888,-14.74013 6.4062,-33.3125 -0.1691,-17.21441 -1.4169,-15.61194 2.9688,-21.375 32.7836,-43.39226 84.8438,-124.0625 84.8438,-124.0625 z m 133.5624,63.46875 c 0.7019,-0.001 1.4194,0.029 2.125,0.0625 10.3218,0.49048 20.5757,3.80821 30.0938,13.03125 12.9478,12.98228 12.0669,31.68735 7.8125,51.15625 -1.9605,5.65396 -3.4212,11.40356 -7.4063,17.3125 -2.2174,3.28803 -4.0294,6.33823 -4.0312,6.75 0,0.41176 -3.1916,5.54534 -7.0938,11.4375 -3.8122,5.7563 -8.1874,13.78125 -8.1874,13.78125 0,0 6.0983,10.93844 16.9062,24.625 8.1566,12.12025 13.443,22.68203 14.0625,22.0625 0,0 -2.0676,5.24026 -4.9063,8.96875 -8.5747,11.26258 -24.3693,34.76249 -25,37.21875 -0.1518,0.59125 -1.7807,1.19417 -1.75,1.78125 0.114,2.18154 3.2476,4.76805 7.9688,11.25 28.5001,39.12878 32.5295,72.16173 11.125,91.5625 -10.65,9.65305 -21.1621,12.68003 -32.4375,11.46875 -20.6603,-2.21947 -39.7296,-19.85037 -37.5,-45.5625 1.0068,-11.81242 0.392,-15.33341 7.3437,-29.0625 3.1391,-7.72977 10.2464,-20.9765 14.9688,-27.65625 4.13,-4.79487 8.5312,-11.625 8.5312,-11.625 0,0 -10.1385,-15.61558 -28.7812,-37.5625 -3.3603,-4.01299 -5.4375,-9.4375 -5.4375,-9.4375 l 31.9375,-47.3125 c 0,0 -3.7097,-9.17998 -9.9375,-18.46875 -12.7709,-19.04784 -21.007,-39.29908 -20.9302,-50.69632 0.1923,-28.40369 18.7662,-45.04304 40.5239,-45.08493 z M 2368.0628,865.25 c -18.86,10.03235 -37.2191,44.2849 -1.3359,20.39829 l 0.8984,19.69546 c -18.6635,26.48928 -55.1581,7.07041 -45.8761,-20.358 -25.1993,3.26549 -29.1268,-22.31309 -27.848,-34.48083 -33.1416,-7.22088 -21.6926,-42.31801 -21.6926,-42.31801 -19.1493,-16.00704 -22.5069,-32.7733 -6.9958,-50.44671 -15.6826,-9.75392 -20.1019,-16.00008 -37.3375,-23.08395 13.2139,117.52768 76.6471,178.56743 143.4062,232.96875 0,0 1.4783,37.8479 -6.1562,30.875 -95.3263,-71.22543 -156.6063,-152.67332 -167.1499,-284.41666 -0.8087,2.06848 -45.1957,-34.36196 -52.5376,-32.42709 -15.3839,213.33431 154.4552,353.56285 225.0868,381.20315 0,0 1.0007,29.7231 -0.2118,29.8281 -107.0453,-46.694 -226.0699,-183.73538 -249,-346.78125 l -63.1563,97.8125 -23.6562,-10.125 102.125,-160.90625 -69.0625,-43.28125 -112.4362,178.15578 c 0,0 -2.9849,14.85503 5.1549,14.62547 157.8291,16.88673 392.5522,206.5075 313.9063,515.125 -6.8218,-2.6979 -17.6803,-7.9803 -18.2187,-7.75 12.334,-26.5946 46.7492,-198.888 -56.7813,-338.0625 -47.4326,-63.76287 -120.994,-131.6247 -239.0313,-151.65625 9.7546,20.12798 5.5,65.78125 5.5,65.78125 l 27.5,5.5625 c -9.2801,-9.80919 -17.0393,-17.89068 -20.7187,-28.53125 -5.1504,-16.57598 2.3979,-26.39288 20.75,-16.53125 7.2873,4.08919 9.1226,3.93055 16.2187,-1.34375 14.7781,-10.98392 31.6421,0.32639 27.75,18.59375 -0.5749,2.69872 0.1398,4.39979 7.1563,5.03125 15.8957,1.5812 31.9122,9.45952 42.2813,21.8125 5.0819,6.51376 6.2332,5.54756 10.75,1.625 11.0915,-9.63249 29.4697,3.71568 26.1874,18.625 -1.8763,8.52365 -0.8436,10.56368 3.0938,12.21875 21.6775,9.1124 27.001,14.86156 33.75,33.84375 2.4724,6.95382 4.5023,9.24002 5.7812,8.84375 0.8953,-0.27745 4.4584,-1.46904 7.5938,-2.65625 16.1849,-6.12862 25.6581,13.44093 14.1875,28.78125 -2.3504,3.1432 -0.6102,6.161 3.5625,8.4375 13.4698,7.3486 22.6261,24.9037 24.2188,43.3125 0.6059,7.0034 1.342,7.012 8.3437,6.7188 17.9198,-0.7507 26.4513,23.4439 11.875,32.3437 -5.0772,3.0998 -4.1316,7.1028 -0.1875,11.7813 10.4478,12.3934 12.8891,21.3469 11.9688,35.4687 -1.2254,18.8023 -0.027,18.4349 5.9687,20.7187 17.4139,6.6328 14.1651,34.456 -2.9096,34.3634 12.2973,28.6488 -3.8953,63.5841 -3.3671,64.2295 32.809,18.461 3.1829,38.074 -6.3483,34.6259 0,0 -4.8609,12.8706 0.6563,19.5 -28.7793,38.0791 -66.4596,44.3997 -108.1876,63.3125 l -1.3124,-134.0625 c 17.3564,13.9716 34.557,27.0087 51.75,40 0,0 4.3587,-1.3077 0.3903,-4.9756 -7.6472,-7.0681 -26.8835,-19.5085 -32.2653,-24.4619 -11.6155,-8.813 -54.1804,-49.5135 -61.75,-59.1563 -3.3912,-6.4253 -8.51,-2.7067 -8.375,-2.3212 5.0909,8.7934 8.8848,19.0455 15.4775,28.1829 14.2376,19.7334 28.0542,41.6645 26.6162,63.3571 -0.035,12.1473 -4.8612,24.6838 -7.5625,30.7812 -2.0013,8.3298 -15.281,-1.4203 -11.9375,-8.4374 5.9035,-19.229 10.7934,-34.982 -10.3125,-65.875 -10.2921,-15.0646 -23.625,-42.4063 -23.625,-42.4063 l -8.5312,2.0625 0.3124,174.9062 c -7.156,0.2942 -25.3011,4.9974 -21.5624,5.125 56.5499,-11.2981 73.8514,69.6151 19.25,72.25 -10.3719,0.368 -21.093,18.2225 -22.1876,27.9063 0.4684,23.4934 3.9112,48.2748 -13.2812,70.8437 -4.519,5.9323 -6.6007,15.3476 -10.7812,22.75 -20.991,37.1684 -30.3592,58.4702 -28.2188,68.0626 0.5506,2.4674 1.0625,5.7187 1.0625,5.7187 -66.8538,16.7073 -116.9913,20.9915 -184.3437,22.5625 -0.6586,-1.0538 22.6107,-66.5042 39.5937,-100.0625 12.5515,-24.8016 19.0211,-41.7549 15.5,-46.875 -53.41,2.6782 -43.1685,-75.6305 7.9375,-72.8753 0,0 12.8192,-45.1148 27.1562,-65.4687 13.5853,-7.5628 40.9239,2.7376 56.25,-7.4063 36.1083,-11.0732 59.75,31.625 59.75,31.625 l 9.7188,-40.625 -319.3125,-1.531 c 0,0 -32.9025,12.3246 -49.7187,5.375 -10.7466,-4.4412 -23.0837,-17.036 -23.0938,-17.0312 0,0 122.0144,-195.9771 139.9375,-224.25 1.4568,-2.298 -3.1782,-7.2363 -3.1875,-7.2812 -0.6718,-6.4192 -142.0402,213.9419 -141.4688,223.6562 0,0 -3.7601,5.3425 -10.5624,0.625 -79.9572,-55.1714 -271.0313,-173.7812 -271.0313,-173.7812 l -0.25,-87.875 C 1406.0245,1053.4613 1400,1036.3482 1338.5,1082 c -0.8586,0.7252 -1.3125,-33 -1.3125,-33 46.8814,-41.8882 7.8944,-28.7719 -1.3616,-14.2569 0.2226,-10.4427 -2.201,-24.6229 4.4866,-30.8681 20.4842,-18.88539 44.63,-1.5479 45.8426,26.3706 26.7248,5.2389 23.411,28.7221 30.2985,38.1606 27.2452,15.3818 12.8984,38.7222 19.6586,46.6563 28.7002,18.0984 8.6819,47.1907 2.6066,46.5313 3.6184,2.4339 39.2854,26.3434 42.3437,25.4687 -3.0952,-125.3565 -141.1297,-245.03211 -144.9687,-238.75 l 2.9374,-27.03125 c 0,0 172.5123,110.34535 171,287.40625 l 55,32.6875 c -4.8871,-181.6656 -86.0125,-304.27828 -224.7187,-382.28125 L 1337.375,824.875 c 116.4373,54.19585 224.4193,163.87882 249.5625,343.6562 l 64.4687,-100.0624 22.7188,11 -103.5098,166.0838 64.6348,42.5099 c 50.1376,-66.0095 91.952,-146.9576 117.4375,-185.4687 -0.6714,-3.5205 -2.0625,-8.5626 -2.0625,-8.5626 C 1504.1567,1053.376 1365.3267,822.41812 1431.5,581.09375 l 17.125,7.53125 c -51.3922,178.72874 32.4182,435.9868 300.4688,488.5938 -0.5335,-19.0057 -3.875,-65.75 -3.875,-65.75 0,0 -35.2223,-10.5899 -30.0383,-6.3438 8.6276,7.3737 28.0126,39.1676 19.8195,50.4688 -5.8893,0.8251 -15.7468,-2.4732 -26.5312,-10.375 -4.0682,-2.9808 -4.1819,-2.3458 -8.75,2.5312 -12.6695,13.5262 -31.0804,5.7767 -31.25,-12.8125 -0.072,-7.8514 -0.3644,-9.5134 -11.5,-9.5937 -16.8875,-0.1213 -24.4707,-3.0189 -34.5938,-16.5626 -7.1806,-9.60684 -6.5206,-9.65027 -14.9688,-6.75 -16.1885,7.7037 -29.1078,-8.47503 -24.0312,-21.81245 2.5022,-6.24872 -0.1609,-8.24916 -7.5312,-9.46875 -14.3366,-2.37229 -30.5512,-20.36452 -33.5313,-35.0625 -0.609,-3.00334 -2.1102,-3.76142 -10.5625,-3.46875 -16.5795,0.57399 -25.758,-9.48126 -19.2188,-23.5625 3.5365,-7.61523 4.5306,-10.68895 -2.0937,-15.84375 -8.1225,-6.32054 -12.7064,-10.71254 -16.3125,-18.375 -2.86,-6.0771 -3.2839,-9.9669 -5.25,-22.90625 -0.6839,-4.50107 -2.1795,-5.23278 -8.0625,-6 -17.1446,-2.23611 -23.9053,-19.77908 -11.3125,-31.15625 3.8442,-3.473 3.8303,-3.38933 -2,-10.9375 -11.2162,-14.52086 -15.4188,-33.47556 -10.5312,-46.09375 1.3233,-3.41639 0.031,-7.59787 -3.9688,-8.59375 -15.6344,-3.89313 -15.9023,-21.23043 -0.9375,-30.96875 4.3451,-2.82762 4.5667,-4.70131 1.2813,-10.40625 -5.7552,-9.99317 -5.4677,-36.16411 0.094,-48.6875 3.5955,-8.09658 3.5721,-8.28382 -2,-11.84375 -11.8808,-7.59046 -8.4847,-28.46802 5.5625,-31.90625 6.8229,-1.66999 7.2746,-2.55906 5.4375,-10.84375 -3.2742,-14.76522 -3.8379,-18.60335 4.875,-24.4375 23.9627,-15.56339 85.3437,-45.3125 85.3437,-45.3125 l 20.2813,-9.65625 c 0,0 2.0257,123.88066 0.7187,138.53125 -0.7903,6.30769 4.876,10.12618 11.4688,16.6875 13.6285,13.39704 21.096,29.59715 39.2812,40.84375 0,0 11.3346,-6.30232 18.3438,-10.8125 l 0.6875,-176.53125 c 1.4351,-4.00682 2.4402,-4.4483 7.0937,-5 3.8716,-0.74615 13.5903,-1.82929 16.8438,-2.78125 7.8302,-2.2911 9.0633,-5.45233 -1.2188,-4.40625 -3.0981,0.3152 -7.7458,1.63436 -12.9374,2.6875 -32.1386,9.64357 -55.9097,-40.40433 -31.4376,-65.625 4.6975,-4.20771 22.2463,-11.5291 30.2188,-12.03125 2.3045,0.0184 9.1603,-8.42545 13.8438,-16.21875 4.7073,-7.8331 6.661,-13.65502 3.9687,-21.5 -5.6683,-16.51634 -0.2621,-41.87542 16.6887,-69.5625 18.3531,-26.13222 32.5307,-55.29577 39.9676,-86.34375 65.0402,-7.84188 120.2132,-24.01512 178.9997,-20.4375 2.2962,19.87005 -64.2734,137.01267 -50.375,143.875 52.3754,12.5431 34.4957,74.65234 -5.3126,72.59375 -5.9633,-0.0323 -6.5476,0.49578 -10.3437,13.6875 -7.2274,19.25903 -11.8942,33.95448 -19.6563,51.875 -0.025,4.60821 -3.2507,4.15562 -25.0312,4 -19.9077,-2.94761 -33.6437,7.90229 -48.125,8.53125 -18.462,0.84189 -34.2153,-8.00885 -40.625,-22.6875 -2.8562,-6.54098 -5.5096,-2.2397 -5.5938,13.28125 -0.067,12.34869 -0.5624,19.5625 -0.5624,19.5625 0,0 76.3181,0.22462 163.2812,0.375 175.7929,0.30399 158.2829,2.99833 172.2188,-3.96875 8.1429,-4.07099 13.51,-8.4815 27.5937,0.71875 22.5634,14.7396 21.8235,12.72812 15.25,22.21875 -44.185,65.52306 -141.8437,223.1875 -141.8437,223.1875 l 6.8437,6.6875 c 0,0 98.6285,-155.85495 143.5625,-228.875 2.0403,-2.37128 11.4375,0.625 11.4375,0.625 l 269.0625,175 c -2.2682,26.44453 0.375,85.71492 0.375,85.71492 -75.6293,40.15999 -52.5219,60.62224 -0.4534,11.9819 z m -456.594,-629.6875 c 0,0 78.0487,0.63244 117.1874,6.90625 34.2727,5.49377 32.51,4.4849 32.375,29.375 -0.096,17.67642 -0.1219,17.27447 -4.6562,25.75 -8.3587,15.62411 -6.9361,31.0252 6.2812,52.59375 12.8303,20.93696 22.2219,36.39615 22.2188,39.375 -0.01,4.62133 -0.7909,10.26386 -11.9062,18.03125 -13.1158,9.16527 -15.618,15.56879 -15.4376,24.875 0.1461,7.53412 -1.2798,9.99314 -5.7812,9.96875 -1.8045,-0.01 -8.1817,2.95609 -15.0312,6.1875 -12.0498,5.68473 -12.0702,5.68474 -23.3126,5.59375 -5.6374,-0.0456 -8.3678,-2.17506 -9.9374,-1.5625 -3.0263,1.41219 -5.7764,11.54617 -5.6876,14.5 0.3202,1.04532 1.9324,0.41675 5.25,-0.71875 18.6438,-6.38096 46.3777,-3.51342 47.1563,-0.71875 3.7591,3.40555 3.7661,8.66788 -1.9063,14.125 -3.6796,5.78095 -5.3496,8.76847 -3.8124,17.71875 2.0881,12.15818 0.5291,16.98342 -5.6876,21.1875 -18.9593,12.82154 -44.273,14.43733 -84.75,6.65625 -42.6574,-8.20017 -71.83,-24.46788 -96.0937,-53.59375 -10.8391,-13.01099 -13.5155,-17.56985 -8.1563,-18.46875 6.6125,-1.0229 13.9331,-2.39171 20.7188,-5.3125 29.9773,-12.90322 29.4485,-67.80388 -10.9375,-73.53125 -16.4759,-0.58392 34.0193,-78.26521 51.9063,-138.9375 z m 38.5079,37.82122 c -14.4987,8.11743 -22.0728,18.0206 -22.1017,23.39753 -0.012,2.20294 0.4816,1.80306 7.4062,-2.75 20.0996,-13.21585 73.0421,-32.30274 91.9376,-21.28125 13.6245,8.17887 18.9119,5.5136 11.0225,-5.48619 -18.5153,-25.81495 -68.4525,-4.67496 -88.2646,6.11991 z m 51.7733,8.64753 c -2.1413,0.0179 -4.3783,0.26396 -6.5938,0.71875 -13.9766,3.12017 -29.3529,14.63663 -42.0937,24.78125 -6.2841,5.0036 -15.1733,14.90857 -16.5625,17.5 -3.1443,5.86531 3.7981,12.32981 13.25,7.15625 5.4977,-3.0092 5.9856,-2.32922 11.2812,-1.59375 12.2012,3.67801 26.1129,9.37079 47.625,7.5625 2.0014,0.45898 1.8545,0.9294 1.1563,2.8125 -1.2761,3.44192 -8.8966,10.01501 -18.8437,17.375 -5.1292,3.79514 -9.6162,6.90503 -9.9688,7.46875 -1.5832,2.53082 5.27,2.72893 12.7812,-1.53125 10.6574,-6.04461 22.9329,-19.41281 30.4376,-30.15625 0.7149,-1.0235 1.7056,-1.86534 2.0312,-2.96875 0.7336,-2.48605 -3.754,-1.45898 -6.1562,-2.125 -1.0345,-0.28678 -0.8222,-2.8926 -1.0938,-4.09375 -0.7124,-3.15055 0.5206,-8.36365 1.0938,-12.84375 0.4635,-3.623 4.3517,-6.49919 6.9062,-9.15625 11.2373,-11.68862 10.3584,-16.98643 -4.75,-8 -2.5446,1.51353 -4.5562,2.42556 -7.0312,2.625 -22.2992,0.70177 -35.1898,-0.16218 -53.7813,15.5 -8.2679,6.66162 -13.2361,7.3123 -5.875,0.21875 11.2202,-9.08777 25.2874,-22.01878 40.8437,-25.4375 9.3887,-2.33812 18.3264,4.85316 22.4376,3 0.028,-5.13999 -7.8146,-8.88995 -17.0938,-8.8125 z m -3.2329,32.30705 c 2.5544,1.68236 5.0628,10.40715 4.8267,13.3492 -0.2744,3.41791 -6.1557,2.00111 -6.9688,0.375 l -3.1875,-9.6875 c -1.3888,-3.27088 2.836,-5.12612 5.3296,-4.0367 z m -11.3609,1.9742 c 2.7297,2.69318 3.3575,8.53012 4.9063,13.34375 -0.9882,3.47238 -22.9402,-1.21885 -25.6937,-5.10247 3.2904,-4.27808 14.6044,-9.39863 20.7874,-8.24128 z m 38.5,62.5625 c -1.6515,-0.10933 -3.8351,0.69388 -5.8124,2.71875 -9.8813,10.11872 -6.6983,27.35726 5.1874,32.9375 5.7953,2.72085 14.5631,0.71963 27.4688,-3.25 6.15,-1.89167 10.6007,-2.75619 11.75,-2.75 5.0439,0.0274 7.7885,-7.79124 4.25,-11.375 -4.0896,-4.14191 -13.7846,-3.53185 -24.2188,4.53125 -5.2774,4.07821 -9.049,6.05426 -13.3124,6 -10.4341,-0.13287 -15.5081,-10.87482 -4.8438,-22.15625 3.5502,-3.75562 2.2838,-6.47404 -0.4688,-6.65625 z m -73.1369,74.17167 c 12.3083,9.93092 35.6766,4.72484 51.3869,-5.67167 14.0384,-9.29011 19.8605,-12.03373 31.125,-10.09375 13.8049,2.37746 13.2918,-3.05043 7.3126,-9.875 -6.7794,-7.73781 -23.5231,-5.34903 -37.5313,3.9375 -31.0598,20.59062 -42.2918,24.03419 -51.3063,12.89379 -9.6835,-11.96705 1.8439,-27.32512 13.2432,-18.94404 9.3508,6.36531 9.2118,1.57793 5.3484,-2.7869 -22.5282,-18.9863 -38.7859,15.0426 -19.5785,30.54007 z m -109.1755,9.76583 c 15.6732,19.87551 30.6803,36.29327 53.2187,48.40625 l 0.25,3.75 -72.875,-0.15625 c 5.0882,-8.88932 19.5541,-51.40849 19.4063,-52 z m -246.75,51.78125 c -1.5431,29.95851 3.8307,47.55574 21.375,68.5 18.6476,22.26145 17.2623,56.96215 5.267,78.40044 -5.3083,9.48713 -16.1074,-2.1786 -11.017,-8.24419 7.2376,-9.10486 7.6713,-31.33008 4.25,-45.21875 -7.6798,-22.95722 -25.0994,-34.20178 -32.1563,-58.46875 -2.3757,-10.35565 -1.625,-28.96875 -1.625,-28.96875 z m 22.8124,2.53125 c 1.2759,-0.20086 3.3072,1.11789 6.3126,3.71875 10.3085,8.92109 8.5512,34.45911 -3.25,50.84375 -3.6146,4.96996 -6.6088,3.55167 -10.0626,-1.0625 -4.6636,-4.60902 -3.049,-5.06702 0.875,-13.15625 4.092,-8.43554 5.4026,-17.93467 4.5626,-29.03125 -0.5657,-7.47241 -0.3023,-11.01894 1.5624,-11.3125 z m 668.4688,8.75 c 9.0958,-0.13632 20.4658,1.79348 21.5,5.09375 0.9846,4.01502 -1.1741,7.23174 -6.25,9.375 -13.3116,5.62077 -30.9061,-2.24306 -26.4688,-11.84375 1.1092,-1.71575 5.7613,-2.54321 11.2188,-2.625 z m -23.0625,2.1875 c 2.6149,-0.0589 4.6437,0.5845 6.25,1.3125 4.3624,2.24819 -2.4915,17.61101 19.2187,17.3125 5.1903,0.76376 9.0247,-0.42908 8.3126,1.90625 -1.0796,3.54035 -10.3927,8.84931 -20.5,10.34375 -30.2513,4.47284 -28.9328,2.96383 -27.5626,24.34375 0.8945,13.95591 -0.013,18.66104 -1.9062,27.125 -3.283,14.67383 -4.5826,28.85221 -2.375,24.1875 2.9509,-6.23526 10.4844,-25.92802 10.4375,-37.125 -0.069,-16.51428 5.8275,-19.78109 8.1875,-7.8125 1.0096,7.92232 -2.5364,12.39159 2.7812,20.46875 3.0166,4.53878 4.3933,4.46185 2.375,11.5 -1.7804,6.20902 -0.5433,8.03525 1.625,11.1875 2.1834,3.17411 4.3808,3.90339 2.5313,8.34375 -3.9882,9.57514 2.2671,18.63958 11.3437,19.40625 4.1947,0.3543 5.3555,2.18202 4.0938,3.78125 -2.2196,2.76169 -6.6401,4.07426 -10.3125,4.875 l -96.0937,-61.40625 c 0,0 7.1285,-14.30027 9.25,-18.125 13.8053,-30.2691 24.7537,-44.05936 65.125,-59.90625 2.7906,-1.19984 5.1849,-1.6729 7.2187,-1.71875 z m 51.0625,19.875 c 2.6496,-0.0997 4.6126,1.28796 6.8438,4.15625 5.8978,7.58227 0.7501,17.05934 -13.75,25.21875 -12.3953,7.05067 -16.0016,7.89196 -18.6876,-3.1875 -0.6211,-1.9994 -2.2698,-4.45493 -3.3437,-5.4375 -2.8697,-2.6255 -2.2168,-4.81198 1.4375,-6.75 1.7488,-0.92745 7.3214,-3.2102 11.7812,-6.15625 7.7489,-5.11864 12.3122,-7.71553 15.7188,-7.84375 z m -40.9062,22 c 3.0338,0.0477 6.1637,0.78176 8.4687,2.28125 3.8428,2.49985 3.8799,8.77931 0,11.28125 -7.7157,3.14819 -19.9022,-1.06969 -18.875,-8.15625 0.5223,-3.60346 5.3499,-5.48577 10.4063,-5.40625 z m 49.4374,7.75 c 2.737,-0.0729 4.7929,1.20725 6.5,3.84375 4.5256,6.98927 -0.7895,14.00514 -16.0312,21.46875 -10.0295,4.91129 -22.8459,7.04375 -22,4.15625 0.681,-2.32447 -2.9026,-13.79386 -4.5,-15.625 -0.613,-1.94233 0.1857,-0.19342 12.8438,-4.1875 4.5856,-1.44692 10.1254,-3.83209 12.6874,-5.4375 4.3521,-2.72696 7.7631,-4.14588 10.5,-4.21875 z M 1603.5,595.8125 c -7.0507,16.94588 -8.1665,24.4312 -4.8125,42.25 2.7919,14.83233 6.0291,22.27147 21.25,44.1875 11.5846,16.68036 15.2918,23.16985 12.5,28.4375 -1.968,2.83852 -6.3914,5.48663 -9.1417,2.75872 -5.6592,-7.39946 -9.0576,-16.38975 -14.577,-24.63372 -21.2725,-31.20134 -22.7486,-39.14099 -25.4688,-63.78125 -1.243,-11.25927 5.2295,-35.22997 10.7627,-38.8127 6.1966,-2.42733 11.4013,5.70063 9.4873,9.59395 z M 2095,588 c -0.502,0.0633 -1.0346,0.34581 -1.5625,0.875 -2.8889,2.89619 -11.162,16.36871 -10.875,18.40625 0.6296,4.46866 4.2859,1.54807 13.875,-12.53125 2.3031,-3.38153 0.7378,-7.02442 -1.4375,-6.75 z m 183.0938,7.65625 c 8.5129,0.25692 11.5313,7.89086 7.7187,11.875 -5.5607,5.81084 -15.5627,1.42391 -15.5625,-6.71875 0,-3.45102 1.6064,-5.23123 7.8438,-5.15625 z m 47.2187,10.875 c 4.8806,0.20892 5.5273,5.06033 2.9375,12.09375 -3.2391,6.53046 -7.1421,7.63504 -18.8438,11.28125 -14.0135,4.36663 -16.301,3.72979 -18.4062,-9.15625 -0.809,-4.95104 -0.4117,-3.85179 12.5,-7.28125 5.5409,-1.47169 12.0141,-4.09828 15.4688,-5.53125 2.607,-1.05786 4.7168,-1.47589 6.3437,-1.40625 z m -827.5991,5.77643 3.4419,26.02997 5.5947,-19.4939 z m 782.0678,8.75482 c 6.8952,0.0278 10.5932,6.20006 7.0938,9.90625 -1.9499,2.06512 -6.9153,2.10861 -9.3125,0.90625 -5.4752,-4.00047 -4.4853,-10.83959 2.2187,-10.8125 z m -210.625,13.59375 13.4376,8.28125 -109.1563,172.34375 -13.1563,-0.28125 -1.25,-2.75 z m 247.6876,1.65625 c 8.0588,-0.11396 8.7548,7.4842 -1,14.46875 -4.0003,2.56455 -8.4874,3.18946 -11.9688,3.34375 -4.8527,0.21507 -8.1239,-1.04696 -8.5,-4.40625 -2.1063,-8.22832 -3.3073,-10.27168 4.1875,-9.78125 1.495,0.0978 5.5723,-0.13817 8.8437,-1.53125 3.347,-1.42524 6.1811,-2.06184 8.4376,-2.09375 z m -33.375,7.53125 c 5.5717,0.0302 9.1152,6.07207 5.375,9.03125 -4.6204,3.65558 -10.3738,1.39967 -10.3438,-4.125 0.019,-3.5304 0.98,-4.92789 4.9688,-4.90625 z m -785.4376,12.1875 -29.6963,26.3053 c 10.8878,12.88001 20.02,25.74218 29.4454,39.24892 z m 600.5,1.6875 c 12.8885,-0.5177 17.1124,5.71757 11,9.90625 -8.3049,5.55085 -15.4186,5.28508 -24.8437,4 -12.4679,-2.31732 -2.5426,-12.30119 11.125,-13.71875 0.9355,-0.097 1.8595,-0.15299 2.7187,-0.1875 z m -13.6874,18.75 c 2.603,-0.0697 6.4409,0.66181 11.4062,2.34375 8.432,2.85629 18.9325,11.69376 18.4375,16.59375 -0.8013,7.93194 -15.7295,3.83714 -27.75,-7.53125 -7.5302,-7.12164 -7.8204,-11.25287 -2.0937,-11.40625 z m -11.4063,0.125 c 7.3086,0.69174 14.6027,25.42635 8.9375,33.03125 -5.553,7.45437 -15.3411,-8.58817 -13.5625,-21.1875 0.704,-4.98718 1.9597,-11.57211 3.9063,-11.8125 0.2353,-0.0291 0.4829,-0.0536 0.7187,-0.0312 z m -477.3125,5.4375 c 4.1173,0.98379 9.3896,6.67797 8.25,11 -0.8303,1.73624 -2.5613,1.23164 -4.4375,0.78125 -3.3845,-1.43149 -5.9972,-6.14581 -5.3437,-10.0625 0.3181,-1.05855 0.7703,-1.6572 1.5312,-1.71875 z m 553.875,4.25 21.4688,14.5625 L 2150,701.6875 z M 2061.0312,715.75 c 16.4708,0.0893 19.9536,5.41782 7.6563,11.90625 -5.112,2.69723 -17.5599,3.20398 -24,0.96875 -10.2207,-3.54741 2.0437,-12.95255 16.3437,-12.875 z m 133.25,11.09375 1.125,14.9375 -41.3437,3.625 -2.125,-15.5625 z m -142.9374,7.4375 c 2.8635,-0.18097 7.4295,1.1437 13.4062,4.21875 11.2486,5.78756 17.6507,15.49515 11.8438,18.5625 -5.2611,2.77903 -14.632,-0.51744 -21.25,-7.46875 -8.7601,-9.20111 -9.4668,-14.967 -4,-15.3125 z m -14.0626,0.0312 c 7.5111,0.45047 14.0108,21.03667 9.0626,31.21875 -2.7073,5.57065 -6.1383,4.35297 -11.0626,-4.8125 -4.7613,-8.86231 -5.0195,-24.50955 0.4688,-26.21875 0.5066,-0.15777 1.0305,-0.21753 1.5312,-0.1875 z m -537.7401,5.8119 -18.0723,36.34435 32.7454,28.58547 z m 699.8339,28.0006 2.9062,14.375 -39.6874,9.78125 -3.875,-15.65625 z m -173.3125,2.8125 c 4.8411,0.0856 9.3883,1.23461 12,3.53125 3.6212,3.18437 2.8304,4.61324 -5.7187,8.09375 -15.2242,6.19802 -33.9775,2.44724 -23.0938,-6.8125 3.8438,-3.27024 10.5883,-4.92253 16.8125,-4.8125 z m 257.814,-0.84224 c -15.1558,10.16051 -0.5609,15.74935 10.2729,8.0686 -0.8107,-2.61722 -7.0935,-8.02743 -10.2729,-8.0686 z m -268.939,20.37349 c 10.8409,0.35476 32.1129,15.22626 27.5625,22.34375 -2.4711,3.89836 -16.6927,0.57138 -22.3438,-4.84375 -7.4263,-7.11644 -11.3541,-16.63272 -7.25,-17.375 0.6192,-0.11198 1.3086,-0.14865 2.0313,-0.125 z m -13.6875,0.6875 c 5.5946,-1.04247 14.5388,25.03407 7.7812,31.71875 -2.5264,2.49914 -3.2284,2.35053 -7.4687,-1.40625 -8.4703,-7.50453 -7.0155,-21.33328 -1.9375,-29.0625 0.4858,-0.73949 1.0463,-1.14216 1.625,-1.25 z m 333.1408,13.7421 c -1.4775,-2.76044 -3.3164,-4.04004 -5.3435,-5.55904 -52.6945,20.24772 -39.1853,39.53766 5.3435,5.55904 z m -124.8596,1.78915 5.25,14.5625 -39.9687,15.84375 -5.875,-15.9375 z M 1525.875,834.25 l -13.5312,35.625 c 14.7116,0.0861 27.9784,7.03457 41.4062,13.21875 z m 696.9375,10.46875 8.4687,14.3125 -37.5937,20.34375 -7.5,-15.09375 z m -873.375,27.875 15.4063,10.875 -22.625,28.125 -2.0626,-3.96875 0.25,-23.34375 z m 893.9063,8.84375 9.0937,13.125 -36.1875,25.15625 -8.875,-14.28125 z m -855.0938,16.875 16.625,12.8125 -26.2812,31.71875 -15.9063,-12.15625 z m 182.9375,7.84375 -0.7813,38.15625 39.125,1.5 z m 452.2148,17.1973 44.4712,25.60784 -6.6983,-39.08455 c -11.6184,2.26293 -26.5245,9.83318 -37.7729,13.47671 z m 244.2539,-8.0098 10.375,12.90625 -33.4374,28.09375 -10.7188,-13.4375 z m -845.4687,11.3125 15.5,14.40625 -27.3125,29.5 -14.3438,-13.53125 z m 874.0313,20.9375 12.0312,12.21875 -30.4688,31.6875 -12.0312,-12.21875 z m -838.8126,15.53125 12,14 -31.1874,24.7812 -11.5626,-14.06245 z m 179.7188,3.28125 8.75,37.37495 c -0.6362,-2.7174 38.8273,-11.14683 43.9688,-8.31245 z m 459.4224,3.15993 37.2409,39.32472 4.1874,-37.88018 z m 230.3276,6.18382 13.4688,10.53125 -25,35.62495 -15.25,-11.9687 z m -842.625,23.75 11.0938,16.0312 -32.6876,19.4688 -9.2812,-14.1562 z m 877.9062,3.7812 2.0626,2.0626 -0.031,25.4374 -10.375,15.25 -14.1563,-8.3437 z m -210.703,28.5717 32.9477,59.8994 9.2908,-44.6701 c -12.1831,-0.1808 -31.4682,-7.9845 -42.2385,-15.2293 z m -641.1407,7.9909 7.8437,17.2812 -34.5312,15.75 -7.875,-17.1875 z m 18.6563,41.25 6.3124,17.3437 -36.7187,12.1875 -5.8125,-16.7188 z m -164.1586,31.41 11.4368,8.0145 c 59.5693,-31.3106 41.0043,-40.5598 -11.4368,-8.0145 z m 336.6898,-19.91 c 2.2502,-0.2342 4.8452,2.8778 6.9375,9.75 3.163,10.3882 1.4844,23.2686 -5.5625,23.0937 -4.746,-0.5756 -6.5125,-12.7534 -6.5312,-16.2813 -0.055,-10.4225 2.263,-16.2614 5.1562,-16.5624 z m 32.6562,6.2187 14.1876,1.5313 -0.063,4 -113,179.4062 -13.6874,-8.6875 z m -60.8437,4.1563 c 4.5032,0.04 11.0954,3.1438 16.9375,9.3437 3.417,3.7035 7.0783,8.9624 7.9688,14.3437 -0.1008,1.7747 -3.129,1.1021 -6.0626,0.6876 -7.5023,-1.0604 -18.5429,-6.2556 -22.0624,-12.6563 -4.3244,-7.8642 -1.885,-11.7644 3.2187,-11.7187 z m 519.493,6.3869 15.0677,73.4751 c 4.6659,-18.3913 14.5238,-28.9946 21.8222,-43.4372 -19.2031,-8.843 -27.0877,-19.3233 -36.8899,-30.0379 z m -649.243,14.8631 3.5313,19 -38.0626,8.8124 -3.9374,-18.4374 z m 141.9687,6.5937 c 0.5392,-0.01 1.0764,0 1.5938,0.062 13.9193,1.5573 15.8905,4.6518 6.5312,10.9375 -5.672,3.8095 -21.0301,4.3447 -23.5624,0.2813 -2.6997,-4.3318 7.3496,-11.2025 15.4374,-11.2813 z m -276.1874,11.1563 11.8124,6.9062 c 20.2365,-14.6249 -1.8634,-17.5546 -11.8124,-6.9062 z m 256.1562,6.4062 c 4.2544,0.052 6.8151,7.6477 8.3125,14.625 1.4498,6.7551 1.9494,12.8553 -0.6563,16.25 -3.1895,4.1555 -6.3113,4.8915 -8.8437,0.7812 -7.4237,-12.0491 -7.1844,-31.7591 1.1875,-31.6562 z m -31.375,11.0312 c 1.986,-0.07 4.4895,0.4306 7.4062,1.5313 9.8765,3.7271 22.9693,18.8491 17.4376,20.9375 -8.1671,3.0833 -26.0179,-5.8782 -29.375,-14.9375 -1.692,-4.5658 0.1619,-7.378 4.5312,-7.5313 z m -81.4375,12.1876 0.9063,18.7812 -40.0313,1.625 -1.1875,-18.6875 z m 98.0625,15.8124 c 3.9432,-0.1128 7.8837,0.4074 11.0625,1.7813 5.7311,2.477 1.5572,6.9637 -8.2813,10.375 -6.495,2.252 -15.7535,2.8323 -19,0.25 -7.5936,-5.9882 4.3891,-12.0677 16.2188,-12.4063 z m -309.5625,2.1876 c 27.4194,16.6522 83.9375,53.75 83.9375,53.75 -2.683,0.53 -5.5395,2.6318 -8.1875,4.6874 -2.0435,1.6808 -4.2581,3.2414 -6.1875,4.0313 -3.0378,1.2437 -5.8337,1.4162 -8.375,1.9687 -17.6727,3.8428 -26.3296,13.8437 -20.8125,26.2813 2.1671,4.8854 2.7309,4.0996 -1.0313,8.2187 -10.5395,10.0565 -9.2523,13.0657 -5.5,25.9376 0.05,1.8202 -12.547,17.2877 -1.4062,28.9374 6.1622,5.3707 6.4556,2.0088 4.2188,14.2188 -0.7801,7.3417 1.2234,13.3671 11.9062,15.4688 5.9401,2.725 5.8554,1.7759 3.75,6.8124 -1.4405,7.2269 0.6222,10.2161 5.6875,12.8438 4.6015,2.8784 6.4709,3.6609 3.2187,6.1875 -35.5828,18.2186 -46.5273,49.919 -12.9687,96.625 3.9557,5.5055 13.9122,21.0443 13.9122,21.0443 -11.313,16.7926 -22.1122,30.6213 -33.6497,45.6185 l 33.5838,46.971 c -5.4436,8.5252 -18.1565,25.8584 -25.9713,42.9599 -11.7387,25.6883 -3.988,61.6974 29.7813,72.4688 14.4789,4.6183 33.5998,0.872 45.6503,-13.1248 9.7764,-11.3553 15.1047,-33.9144 6.1811,-57.4064 -11.2833,-26.322 -24.8161,-39.2313 -29.1938,-46.7188 l 35.9559,-45.1375 c 0,0 -24.7745,-35.6388 -34.6561,-48.5813 67.4289,-82.5386 12.3477,-105.6166 1.7813,-112.6874 -1.6408,-1.098 -1.25,-6.375 -1.25,-6.375 60.5616,-6.9394 81.246,-40.2205 99.0625,-82.3438 36.1271,23.2667 87.8539,54.5561 124.0938,79.0312 3.4927,3.2411 5.7841,5.2449 5.25,7.0313 -0.4363,1.459 -1.8377,8.1565 -1.9063,15.0313 1.685,10.9482 0.8815,15.9019 -3.5313,20.0937 -4.1529,3.9449 -3.3226,5.7371 -2.6562,10 1.1576,7.4054 2.2795,8.1453 -1.0312,11.875 -4.08,4.5963 -5.4458,6.7486 -4.6876,17.9063 0.4503,6.6253 1.2939,11.5904 -0.4374,15.5 -2.2537,5.089 -8.4285,7.6666 -16.5313,14.0312 -14.1803,11.1384 -12.2669,14.5414 7.3125,54.9688 16.685,34.4507 18.5911,42.3285 12.1875,54.5624 -5.3283,10.1788 -7.3338,18.0461 -6.6875,32.75 0.1649,3.75 0.4844,7.8036 0.4688,9.7813 -0.039,4.7571 0.024,4.2125 -2.7188,7.1875 -2.1354,2.3166 -5.6835,6.8993 -7.875,10.1875 -23.2819,34.9237 -84.5312,123.7813 -84.5312,123.7813 l -205.9688,-0.3438 z m 288.8437,16.25 c 2.4134,-0.1731 5.3263,4.1468 8.625,12.875 1.905,5.0403 1.7039,13.791 -1.375,17.1562 -6.1316,6.702 -14.5736,-9.0015 -11.9062,-21.4375 1.2045,-5.6157 2.7792,-8.4592 4.6562,-8.5937 z m 579.2626,-9.4397 c 0.033,31.8217 -0.6508,73.1218 -11.6067,103.57 l 12.4249,5.6286 c -4.0076,-31.2586 0.9631,-56.9232 29.638,-70.4465 -13.0476,-8.8574 -23.0167,-23.8193 -30.4562,-38.7521 z m -610.1376,20.0647 c 0.9951,-0.026 2.146,0.2211 3.4063,0.625 4.6481,1.2764 10.3078,3.991 13.75,7.5 5.8905,6.0048 11.9718,13.2219 10.4375,13.9062 -9.7405,4.2747 -34.4575,-8.7861 -31.2188,-19 0.7114,-2.163 1.9666,-2.9879 3.625,-3.0312 z m -43.3124,1.3437 0.25,15.5937 -23.9376,-15.3124 z m 546.6562,7.5 c 3.8762,0.3395 9.8687,5.413 8.9375,8.9375 -1.667,3.8152 -3.7132,3.4604 -6.3838,-0.5454 -3.3327,-4.9991 -4.6853,-8.1208 -2.5537,-8.3921 z m -485.0312,19.2813 c 5.8124,-0.1572 10.8279,1.1264 11.375,4.1562 -0.016,2.8656 -4.4317,6.5734 -9.875,8.25 -13.609,4.1915 -23.8145,1.4871 -20.0938,-5.1875 2.3331,-4.4178 11.1206,-7.0168 18.5938,-7.2187 z m 474,17.6857 c -5.7537,10.3138 -6.4645,43.2944 3.6874,56.7517 15.7722,17.4176 30.3362,40.0976 28.6563,70.2813 l -15.1563,6.7813 c 0.8373,-24.8222 -0.153,-40.9597 -19.5312,-62.375 -23.0767,-25.0783 -17.6502,-68.5323 -9.6865,-81.3107 6.8387,-12.6145 16.682,5.2467 12.0303,9.8714 z m -664,-13.717 c 4.8475,-0.2856 10.7742,2.5798 21.5,9.6563 27.4303,19.4166 42.3006,26.9087 69.5,46.125 3.9771,3.7251 3.7811,3.1911 3.0937,6.125 -10.3988,39.7955 -40.595,71.3708 -85.3437,77.1562 -5.1764,0.6692 -2.5061,-2.5732 -5.625,-8.8125 -3.2114,-6.4241 -9.1376,-9.2206 -15.7188,-9.2813 -18.4783,-0.1707 -2.6793,-10.5364 19.875,-13.5 7.4559,-1.1458 16.4393,-2.1571 21.1875,-6.6562 1.0304,0.486 -3.9169,-31.1263 1.1563,-42.25 2.5877,-10.005 0.1397,-14.8418 -2.6563,-8.6875 -1.755,3.8627 -4.2115,14.0085 -5.5313,24.4063 -1.1143,8.7798 -2.9638,9.9816 -5.0312,5.7187 -0.9439,-1.9462 -0.9244,-6.5525 0.5625,-10.1875 1.6811,-8.2771 -8.7575,-14.5172 -6.6563,-22.0938 2.7967,-6.3282 -0.1086,-13.3081 -3.625,-15.625 -1.914,-4.1033 -1.6888,-7.0693 -1.4374,-9.9374 0.5881,-6.7108 -3.8786,-13.1613 -10.9376,-15.9688 -3.1196,-1.5764 -2.1875,-3.2841 1.0626,-4.9062 1.5168,-0.7572 3.0091,-1.1861 4.625,-1.2813 z m -22.4376,11.3437 c 1.7767,-0.03 3.5408,0.163 5.2188,0.5938 3.6329,2.2116 6.5536,14.7872 2.5,15.2812 -1.4935,0.1821 -6.1614,0.7488 -9.7812,1.8126 -12.2667,3.605 -18.0829,3.121 -17.8438,-3.9376 0.2437,-7.1972 10.3121,-13.5855 19.9062,-13.75 z m 16.3126,1.2813 c 4.8294,0.026 8.7254,5.6823 5.6874,8.6875 -3.1423,3.1085 -9.1805,0.8377 -9.1562,-3.6562 0.013,-2.4228 1.1104,-5.0441 3.4688,-5.0313 z m 3.2812,19.5937 c 1.3837,-0.053 2.9173,0.2396 4.5625,1 4.4893,2.0749 7.0764,9.7982 4.2187,12.625 -2.1724,2.149 -8.3913,1.3933 -11.7187,-1.4374 -5.9448,-5.0576 -3.0587,-11.9554 2.9375,-12.1876 z m -15.2188,1.125 c 2.7795,0.059 4.7803,0.9534 5.3126,2.875 0.4572,1.6526 -0.3089,3.1776 0.4374,5.5313 1.1745,3.7041 3.522,6.544 1.4688,8.0313 -9.4088,-0.5634 -28.942,11.2479 -34.5938,10.6874 -4.7067,-0.6304 -5.2388,-4.9667 -1.1562,-12 4.7182,-8.1284 20.1928,-15.3002 28.5312,-15.125 z m 5.6876,22.8438 c 2.0495,-0.1299 2.3944,1.0037 1.5624,4 -0.5911,2.1294 -0.1019,7.2001 1.3438,10.4688 1.5508,3.5063 4.3666,5.5956 2.9062,6.9687 -2.4094,0.6931 -10.4905,2.3091 -17.2812,4.8437 -8.7651,4.8511 -33.382,19.4609 -27.1875,-3.9062 1.974,-7.8058 11.0316,-13.2233 26.8437,-18.75 5.9977,-2.0963 9.763,-3.4951 11.8126,-3.625 z m 12.9062,0.2812 c 3.8044,-0.2768 8.1487,1.5543 10.0938,6.2813 5.7091,11.367 -10.6705,12.9936 -15.9063,3.5313 -3.1016,-5.6055 0.9211,-9.4566 5.8125,-9.8126 z m 3.125,26.4688 c 8.5113,0.046 15.1147,10.5988 8.9375,14.5938 -4.5791,2.753 -10.2549,2.2349 -15.5,0.9374 -7.8827,-3.4632 -4.2451,-15.592 6.5625,-15.5312 z m 814.875,0.2188 c 32.3809,16.9517 76.4193,32.5796 119.125,44.1874 l -1.4375,420.0626 -290.5313,0.1874 -79.9374,-138.7812 c 0,0 -2.6516,-4.5128 -3.5,-6.5 -1.614,-3.78 -1.0343,-6.8602 0.062,-10.7812 2.6479,-9.4667 10.6679,-28.0218 18.0626,-41.1876 19.3068,-35.4462 46.7312,-74.3214 31.875,-108.375 -1.6987,-3.8936 15.3412,-25.0131 15.3412,-25.0131 26.2454,2.1443 47.9442,-14.966 40.1754,-55.357 54.7847,-22.3994 99.9199,-40.6075 150.7646,-78.4423 z m -829.9688,2.0624 c 0.7423,-0.028 -1.4909,9.1915 3.1563,14.8438 2.8975,4.4519 2.4275,4.3066 -7.4063,8.1875 -3.6765,1.9929 -7.3634,5.0243 -9.4374,6.875 -14.0789,12.5618 -28.0124,-3.8656 -14.4063,-17.0625 10.985,-9.8723 22.4699,-12.0301 27.9063,-12.7188 0.079,-0.088 0.138,-0.1231 0.1874,-0.125 z m 669.3951,8.6817 c 4.7227,0.8393 10.8417,7.1249 8.8807,10.551 -6.6606,11.1591 -6.9624,17.1602 -7.557,28.7049 -0.6639,12.8881 1.5398,14.7874 -3.375,12.5624 -3.2032,-1.497 -9.1895,-4.0678 -10.5312,-7.3437 -3.0942,-7.5545 4.8211,-45.854 12.5825,-44.4746 z m -673.9888,32.3496 c 5.2304,-0.091 10.7192,1.6171 13.8125,5.5937 2.5777,3.314 2.8448,6.1459 0.2812,7.5 -6.0941,3.2191 -26.2665,1.5442 -27.2812,-2.5937 -1.5658,-6.385 5.543,-10.3669 13.1875,-10.5 z M 1717,1383 c 24.6429,0.1003 53.3961,5.3409 75.6562,15.0625 31.5963,11.9169 59.4309,42.2901 65.7188,55.2813 1.9104,3.9471 -1.9974,3.9479 -5.375,4.3124 -37.633,6.2171 -50.1617,52.5233 -18.4062,74.6563 9.9575,6.224 18,5.5625 18,5.5625 8.0587,-0.6868 -35.7953,83.4515 -53.25,135.875 -54.0104,-2.212 -94.8221,6.109 -147.625,-12.0625 -5.6784,-9.4263 -4.326,-30.2466 -0.1876,-41 3.7923,-9.7624 8.7878,-17.2956 6.375,-28.5313 -4.2021,-19.5684 -22.0333,-45.0571 -28,-61.2187 -5.2367,-12.3353 -4.8997,-16.9358 4.2188,-24 10.7462,-8.3253 13.3937,-10.072 16.3438,-14.2813 2.7477,-3.9202 1.577,-4.8222 1.625,-13.6562 0.058,-10.7158 -0.1979,-9.051 8.6562,-10.625 3.0877,-0.5489 10.3721,-2.8793 15.9375,-5.8125 11.5446,-6.0846 19.5944,-5.8675 26.375,-2.0937 2.9489,0.795 2.6688,-2.2624 3.9063,-6.3126 0.5394,-1.7657 1.7883,-4.6545 1.6874,-5.5312 -0.2086,-1.8123 -4.1088,-1.2891 -8.4062,-0.6875 -17.2273,2.4117 -30.8009,2.9435 -37.7812,0.3437 -6.0529,-2.2542 -6.0692,-6.3309 -2.5313,-13.0937 3.155,-6.0292 5.3816,-5.9321 4.0937,-18.5 -1.6171,-15.7808 0.5758,-19.1029 7.9376,-24.2813 9.1843,-6.4603 25.8645,-9.4842 45.0312,-9.4062 z m 89.0625,13.9062 80.0937,0 c -7.8608,12.6805 -16.6049,32.2384 -21.5624,50.7813 -0.7246,1.4449 -1.5802,2.8653 -3.4376,1 -10.8029,-15.4709 -23.1007,-32.0143 -55.0937,-51.7813 z m -66.4063,56.4063 c -9.5722,0.273 -21.5463,4.8752 -36.5937,13.5 -10.2264,5.8615 -18.5789,9.5014 -29.4375,7.5 -6.2057,-1.1438 -7.0023,-0.2597 -7.8125,1.75 -3.6531,9.0615 9.902,18.7809 23.5937,12.4063 3.9788,-1.6661 34.503,-17.4913 36.1876,-18.8438 1.8336,-1.4722 14.4744,-5.1973 17.8124,-5.1562 10.098,0.1252 16.3272,8.0642 15.0938,17.2187 -1.6481,12.232 -18.991,12.8461 -20.125,1.9687 -0.8731,-8.375 -4.3659,-4.655 -4.6875,-0.5312 -0.019,3.5156 2.6352,11.5351 5.5313,13.3438 14.6529,9.1512 33.9729,-8.6602 24.7187,-27 -5.6635,-11.2238 -13.4327,-16.4657 -24.2813,-16.1563 z m -65.7256,42.6311 c -9.9378,1.8916 -16.4026,5.7598 -27.1181,6.6502 -8.8403,1.9523 -8.1848,8.991 -2.6563,12.6562 4.2444,2.8138 9.5952,1.1133 25.0626,-8.7188 15.1924,-9.6572 28.2157,10.46 16.0623,20.7624 -7.6502,6.4851 -2.3976,8.1892 2.8403,4.2812 13.4567,-10.0396 5.7356,-39.4242 -14.1908,-35.6312 z m 47.0382,51.7752 c -1.1645,-0.082 -3.0038,0.3399 -5.4688,1.4687 -11.3854,5.2137 -20.1403,10.7083 -25.5938,18.0313 -0.9339,1.5899 -0.4247,4.2751 -0.875,6.375 -0.3543,1.6526 -1.6704,3.7516 -1.4374,4.875 0.2027,0.9774 3.4191,2.0215 3.9062,2.9374 1.9803,3.7235 0.7046,13.2053 -0.4375,20.0626 -0.5471,3.2848 -5.4242,4.2992 -7.375,6.2812 -6.4159,6.5186 -4.8035,8.513 2.0313,5.9688 4.774,-1.7772 2.7493,-5.0719 14.5624,-2.7813 15.3031,2.9673 27.4305,-1.1885 39.4688,-7.875 13.3694,-7.4259 18.2081,-11.5438 18.75,-10.6563 0.8924,1.4615 0.1884,2.2337 -9.3438,10.1563 -23.8933,19.859 -41.6601,24.4709 -55.0624,17.0313 -4.0142,-2.729 -7.2249,-3.8416 -4.1876,2 0.3896,0.6379 3.6372,3.1633 5.9063,4.1874 13.768,6.2146 31.0324,0.9576 53,-16.4062 4.8228,-3.8121 9.0811,-8.0839 14.6563,-12.75 18.2281,-15.256 13.4335,-22.2392 -7.1563,-14.8125 -6.4912,2.3413 -8.3191,-0.1848 -17.0937,-3.5937 -11.7871,-4.5792 -15.6556,-5.0107 -29.2188,-5.25 -11.8068,-0.2083 -13.5734,0.8967 -13.5625,-1.0938 0.014,-2.5282 7.9501,-11.4558 16.875,-15.3438 8.7077,-3.7934 11.1496,-8.5677 7.6563,-8.8124 z m 21.7187,37.6562 c 2.1991,2.2231 -0.9534,3.6437 -9.4687,7.6875 -4.8229,2.2902 -9.255,4.1695 -9.875,4.1563 -0.757,1.3731 -8.7896,-16.7387 -6.5938,-17.625 0.9387,-0.3789 20.6056,1.2863 25.9375,5.7812 z m -30.9064,-1.9061 c 1.9735,4.1071 3.4786,8.4045 4.2501,12.3749 0.1782,1.2193 1.0486,2.9838 -0.875,2.9687 -1.513,0.2186 -4.0081,0.3469 -4.9062,-1.0625 -1.9261,-3.0225 -4.064,-13.3148 -3.3438,-15.3125 1.4785,-2.0038 4.0806,-0.6001 4.8749,1.0314 z m 70.0627,32.5623 c -0.7132,0.01 -2.0511,0.5381 -4.1563,1.7813 -33.8859,20.0104 -74.5269,30.435 -100.6563,20.5625 -8.8142,-3.3303 -10.4244,-2.1558 -7.2187,3.875 2.2244,4.1845 6.6344,9.0919 13.3437,10.9375 21.3486,5.8727 55.7324,-2.6774 82.1876,-20.0313 10.7678,-7.0634 19.5902,-17.1471 16.5,-17.125 z m 199.4374,53.625 c 0,0 59.8872,123.4444 71.5313,129.25 l -487.25,-0.875 82.0937,-117.3437 c 0.725,6.5246 198.0223,33.6214 333.625,-11.0313 z\"\r\n             style=\"fill:#131f67;fill-opacity:1\" />\r\n          <path\r\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccccccccccccsccccccccssssccscsccccccccccccccssccsccsssssssscccccccccccccccccccccccccccc\"\r\n             inkscape:connector-curvature=\"0\"\r\n             id=\"path4035\"\r\n             d=\"m -1336.7349,1087.2013 76.7523,-117.48926 c 116.7313,20.19614 221.2222,6.77808 335.55949,-15.58041 l 78.50183,127.54717 z m 609.79319,-443.20516 -1.64438,-68.9722 24.1772,8.53732 c -8.86975,-31.94669 11.63507,-65.82086 30.78718,-67.46906 -62.03874,-45.21525 -11.95635,-95.49808 -13.02719,-96.53797 -67.59484,-33.48331 -34.84417,-87.14747 -39.57064,-91.83252 -82.00812,-19.82293 -51.19396,-85.17157 -57.25734,-78.37784 -47.30092,15.07971 -74.13942,-24.32516 -75.47712,-56.70507 -40.74967,23.99576 -104.85526,-7.98849 -85.5525,-45.4371 0,0 21.96128,9.9834 25.77601,7.83165 33.18063,-24.97391 31.12977,10.11721 38.23698,17.61502 24.98944,-4.0434 40.09271,14.88634 46.48815,24.09667 36.95001,-0.57372 35.2849,-9.41023 36.1973,26.41959 27.95378,6.60912 27.09424,21.68089 43.56436,41.97962 35.09934,-0.19436 29.38275,11.32532 21.76113,30.8806 25.62983,19.72169 27.93965,35.45353 32.41265,53.69948 27.763,9.54836 32.7827,13.53702 15.15521,37.10018 24.95787,36.11253 13.58658,57.4533 17.32136,59.3849 30.72879,21.40924 15.68431,29.59202 2.56071,38.22451 5.0881,29.03877 8.84658,33.25692 -1.37064,63.07569 35.31734,24.19618 -4.94679,36.03858 -7.01476,35.55775 l 0.30687,24.54646 z M -1575.161,478.1104 l -2.118,-85.46133 299.0841,186.33396 -36.4211,59.30982 z m 395.2024,119.29961 67.5201,-147.60674 -27.7717,-159.32325 200.54619,1.06819 c 23.38227,50.86311 37.69537,94.20247 96.84809,178.0503 l -60.70144,20.02295 3.81893,102.62837 z m 170.8115,-41.34991 c -2.1143,-4.20275 -3.3,-7.07701 -2.9502,-8.97493 0.7101,-2.45015 2.5732,-2.36956 4.986,-1.0976 8.58987,3.99685 17.16778,7.4228 23.31699,-0.51214 3.07672,-4.14806 2.15993,-9.9739 -0.56574,-13.30194 -4.97029,-9.70656 -19.97155,-2.37332 -25.04975,-1.93908 -4.7203,0.18314 -6.6057,-3.75745 -2.8184,-9.47391 2.2731,-2.50068 3.676,-5.23808 4.0034,-8.44373 2.2828,-22.42897 -35.739,-13.83605 -22.144,7.6519 6.1505,7.94391 2.7212,12.8345 -6.2036,7.89637 -9.8192,-5.43301 -23.2609,0.007 -22.6185,11.76636 0.4866,8.90762 11.7736,14.23225 21.1063,8.69807 2.1547,-1.27771 3.8265,-2.65188 5.3578,-3.34836 4.344,-1.97581 7.5169,-0.45877 6.1436,4.49635 -3.814,6.22532 -8.2675,15.15597 -4.3208,20.90965 3.9885,8.43019 17.2482,7.41905 21.7118,2.06062 3.0735,-3.68965 3.8566,-9.61906 0.045,-16.38763 z M -554.11099,99.512426 -853.7877,-87.755226 l 9.98246,-16.415654 c 13.15546,-7.62586 18.46953,-16.93968 17.80591,-29.78191 l 7.76069,-17.88119 262.96659,162.672609 z m -464.64721,-57.299195 32.93168,154.644099 -206.94638,6.36783 c -12.2329,-51.90265 -85.2774,-168.632741 -85.0537,-166.57196 l 52.9512,-136.558327 274.67973,-4.866293 z m -78.6324,-56.482264 c 5.163,-4.889755 4.6889,-12.217867 -1.2288,-20.374054 -5.7324,-7.90079 -3.3316,-13.707463 5.7292,-8.442758 5.0285,3.252616 12.9285,3.817472 18.2329,2.032626 6.7264,-2.416855 9.4466,-7.8678 8.3343,-14.670483 -1.3456,-8.229199 -10.5302,-10.341587 -20.2415,-6.579088 -2.8113,0.641588 -4.4957,2.97648 -6.9129,4.11506 -5.2268,2.40603 -7.4297,-3.895441 -2.7458,-12.18323 5.1927,-9.188074 -0.514,-18.856786 -10.351,-19.554196 -10.5144,-0.745434 -16.5676,11.299484 -12.1801,17.778332 6.299,9.301571 1.9569,15.922832 -6.962,9.77995 -12.8347,-8.839951 -29.2018,2.905191 -22.1197,16.251303 3.436,6.475107 14.3598,8.006134 24.0522,3.708426 8.1031,-3.593011 10.5948,0.34628 5.7873,8.788243 -9.8795,17.34846 7.0632,32.1757677 20.6059,19.349869 z m -302.8452,-147.369407 -0.8236,82.710276 c -31.2756,-18.428481 -26.68,-18.740298 -27.8169,-18.436018 9.521,24.698793 -0.607,55.58403 -26.6249,71.106318 48.0714,43.626897 23.013,75.265944 15.5891,96.479609 61.0533,34.115955 31.3743,95.287865 31.5665,92.143455 59.6313,-0.64884 59.2877,51.50518 61.3661,73.23058 73.6506,-5.84784 64.7399,53.22218 74.5458,58.12925 35.4726,-16.58652 77.307,-11.79067 89.1707,36.06267 7.6177,27.13492 -19.0987,1.30531 -30.5286,2.64253 -40.3296,26.0507 -33.1298,-12.80775 -35.5129,-18.16248 -33.6972,3.76025 -38.504,-12.25814 -53.4785,-23.4278 -36.3361,7.61738 -33.5332,-4.42263 -31.7513,-26.59996 -28.6943,-5.31995 -35.2038,-23.06631 -46.8908,-40.34318 -39.4607,1.92504 -23.8178,-26.22684 -23.758,-31.71167 -4.8646,-4.21014 -27.9056,-26.14628 -29.4432,-51.66943 -40.7203,-10.78515 -15.6095,-31.65548 -14.2622,-38.6948 -15.6463,-18.851635 -19.9086,-32.877399 -15.1745,-57.027668 -36.261,-16.232929 -6.4684,-32.453099 -4.0783,-42.0592374 -12.2501,-31.1630806 -3.8579,-40.6898786 0.4924,-57.7309236 -23.6048,-26.76365 -9.7423,-25.486801 6.9294,-42.236145 2.096,-3.005336 -4.0485,-16.540876 -3.8527,-24.569866 z m 202.8378,-309.83606 -66.8085,-115.08457 463.48473,-7.65992 c 0,0 -49.28489,70.7319 -68.26213,106.22405 -115.88672,-16.33433 -223.9071,-5.88747 -328.4141,16.52044 z\"\r\n             style=\"fill:#d40000;fill-opacity:1\" />\r\n          <path\r\n             sodipodi:nodetypes=\"cscscccsssscscscsccsccccscccscccccccccsssccssccccccccccccccccccccccccccccccccccccccccccccsccccccccccccccccccccccccccccccccccsccscccccccccccsc\"\r\n             inkscape:connector-curvature=\"0\"\r\n             id=\"path4039\"\r\n             d=\"m -1496.4507,1014.3753 c -40.802,-8.563 -48.5516,-59.54735 -11.0899,-102.67158 3.0287,-3.48648 5.0428,-8.83978 5.0428,-8.83978 0,0 -6.9784,-11.05974 -25.1944,-35.42426 -3.3897,-4.53386 -8.3354,-11.80476 -8.3354,-11.80476 9.5149,-14.23054 19.5642,-26.05038 30.2272,-41.48521 1.4308,-2.08421 4.1031,-4.43469 3.6921,-6.32685 -0.5851,-2.69286 -4.5911,-5.32465 -9.4427,-12.22371 -28.1951,-40.09344 -31.4965,-56.1172 -17.9241,-80.46248 12.7598,-22.88756 44.0949,-26.02393 63.5215,-6.35789 20.9952,21.25373 20.3641,40.89217 -5.786,81.27647 -5.7398,8.86427 -9.8563,16.84711 -9.8563,16.84711 0,0 -0.198,2.78421 9.7131,15.15583 13.7498,17.16321 23.879,31.91681 23.879,31.91681 0,0 -5.9995,7.91944 -11.685,14.8277 -15.237,18.514 -22.0202,31.2163 -22.0202,31.2163 0,0 1.1172,3.62416 3.4823,6.21634 43.3929,47.55775 40.9524,103.04416 -7.1376,108.55276 -2.472,0.2832 -8.4971,0.014 -11.0864,-0.4128 z m 332.4296,-621.57268 c -1.1471,-1.81077 -149.2421,246.95824 -149.2421,246.95824 l 17.5537,10.85404 141.8006,-230.04206 c 2.2247,1.62972 4.4057,3.5826 4.0059,6.35712 0,0 -116.6652,197.35785 -136.1198,228.9155 -0.5228,0.84806 30.0374,18.2753 31.0519,18.30942 44.2217,-22.71027 230.5057,-6.75923 353.86235,-16.3648 0.49319,0.37068 -1.17956,43.41093 -1.17956,43.41093 0,0 -28.69541,-32.10358 -34.38826,-32.20809 -28.0889,-0.51566 -57.42038,11.93116 -78.59153,10.9373 -13.4386,4.35709 -28.0453,53.8405 -30.8734,66.23256 -24.6234,-2.44805 -47.9361,23.65612 -41.8612,47.51238 8.4739,26.47475 22.2436,24.24213 37.1851,24.43226 -0.8886,30.14564 -52.7621,110.41781 -52.3384,149.54122 56.1679,-5.37569 117.00677,-7.40718 174.73173,-25.8607 0,0 20.75461,-63.02703 47.56785,-104.78644 8.80722,-15.94868 12.76663,-39.7438 8.84017,-54.63099 -2.60006,-16.33413 4.38848,-20.58736 10.5003,-32.15187 3.71812,-7.22657 17.89992,-7.16473 19.70143,-7.71894 36.72458,-11.2979 22.75178,-58.79977 6.91216,-67.02565 -19.76327,-10.26353 -47.17953,6.59921 -58.17685,-14.69549 -11.63747,-22.53426 -8.76692,-69.58238 -8.76692,-69.58238 l -278.58087,5.93509 c 0,0 76.2484,-150.88775 74.2297,-151.95294 -21.72,-11.46093 -57.5556,-51.95203 -57.824,-52.37571 z m -184.0948,139.23632 c 1.0515,-15.14965 -0.5913,-261.01857 -234.8963,-379.38639 l 0.7015,-32.33713 c 1.3989,-1.68769 212.8708,91.24178 253.0061,341.0506 l 63.0844,-102.57024 23.9791,8.95613 c -34.3232,53.48165 -102.2218,183.02624 -105.8748,164.28703 z m -142.5169,-86.22524 c 9.1009,-28.54198 -6.3474,-13.22586 -20.6784,-14.15068 -9.8706,-5.16151 -19.5885,-11.87831 -28.7721,-17.70654 67.286,-37.09077 26.8914,-34.6841 -12.24,-8.77308 -10.3451,-5.39256 -23.5124,-17.3549 -24.3125,-16.31105 75.7848,-50.54466 47.0355,-51.06107 -1.3942,-14.57705 1.1355,-33.48585 0.1506,-20.90913 0.6216,-32.16704 41.0504,-45.46619 2.529,-20.49482 -0.3291,-19.91228 -11.0243,-44.50363 38.3318,-35.96474 43.4014,-2.2648 8.7649,6.29575 25.92,13.9853 31.3929,41.60862 23.878,14.6556 21.604,27.15955 20.8063,45.20288 9.3921,8.97752 33.5636,27.85196 6.0361,46.10777 z m -91.4786,-202.39061 1.162,-24.73899 c 3.0392,-10.12778 184.2902,114.72131 174.0926,279.16652 2.0944,-1.1875 -20.0149,-11.13958 -26.4017,-16.67596 -1.9018,-120.85529 -146.1826,-243.79775 -148.8529,-237.75157 z m 1029.76401,121.65646 c -120.4374,-52.8094 -236.10579,-182.2158 -244.89017,-352.867719 l -65.64291,114.197129 -24.13264,-9.75176 c 2.26876,1.81516 51.85504,-93.982211 103.4389,-160.481649 18.41683,215.195009 104.55913,313.981009 233.75108,384.637269 z m -627.28071,-68.43262 c -116.0567,-12.46221 -286.1313,-167.38909 -239.6144,-381.978168 6.7385,-21.826032 120.4282,96.596322 120.4341,96.589978 0.6136,-5.4652305 103.052,153.64053 100.7719,185.09016 84.6129,22.60186 248.62288,-2.86623 248.62288,-2.86623 137.18737,28.26988 282.53889,173.37494 234.40658,383.80393 0,0 -36.72378,-23.25854 -67.55155,-50.52022 -93.71935,-87.64826 -124.20335,-160.43835 -158.22297,-240.72859 -118.28244,-8.74425 -228.65624,14.27477 -238.84654,10.60914 z m 624.15017,-188.39129 c 2.19417,10.61368 1.25046,32.6907 1.64695,32.64 -30.22768,34.03147 -33.41119,34.69319 4.99601,23.28259 -4.2507,32.22261 -27.92357,37.89455 -42.22347,27.18805 -5.26967,-3.94545 -5.68454,-26.09652 -5.68454,-26.09652 -23.49993,-5.47656 -31.65041,-12.38389 -28.74823,-37.61209 -27.00843,-2.77242 -26.16281,-15.91294 -24.40135,-43.341623 -24.76899,-13.40115 -19.01949,-35.478551 -4.65506,-45.103398 l 12.27813,8.162655 c -3.83529,3.547419 -1.57912,25.339274 19.66649,8.747814 0,0 17.43763,14.000749 25.79795,19.405519 -61.57577,41.050193 -23.99449,31.628183 13.90788,4.706298 7.27468,4.787612 17.22799,12.65038 22.39964,16.028898 -49.90737,37.053527 -65.9794,67.611647 5.0196,11.991807 z m 5.27073,136.02541 -1.58049,28.88491 C -675.91183,200.01031 -710.81446,101.40607 -721.69324,-4.0504846 c 0,0 16.69402,11.8743998 24.32108,16.7909486 13.21691,136.056106 139.488,225.983266 147.16496,231.540586 z m -679.1255,-346.37067 294.71451,-2.98697 -75.68331,150.767811 42.0582,48.055905 c 0,0 99.73105,-161.235517 149.8212,-245.655436 l -17.98227,-10.35223 -143.09946,233.338116 -5.94302,-6.376762 141.02534,-233.115694 c -8.77807,-5.54851 -25.36863,-14.40162 -25.36863,-14.40162 0,0 -250.89036,8.17799 -359.97466,9.53984 3.2891,-15.11837 3.6101,-41.81647 3.6101,-41.81647 16.4644,22.83284 34.0447,43.1737 71.1732,19.85625 0,0 44.3845,0.76522 45.9801,-1.37405 5.2775,-8.8697 14.4428,-36.63374 25.1404,-67.99621 42.7439,-3.56938 38.1394,-24.19152 42.8932,-31.05637 -4.2814,-60.76494 -37.8456,-27.45179 -35.2765,-49.60948 8.9879,-39.55801 56.7872,-129.56374 50.4351,-137.28022 -12.8555,-8.2282 -138.4837,18.67804 -175.0899,23.80233 -3.4181,-1.25118 -20.3512,57.58479 -38.8269,82.92478 -20.0983,27.56541 -26.9405,56.88413 -15.994,84.24652 -10.3749,30.45292 -31.256,27.69433 -47.8532,36.54251 -18.6391,20.87828 -12.8884,52.27688 5.4053,64.1572 12.7398,8.27349 32.0712,7.51184 51.5153,-8.82079 z m 582.08966,-221.10848 -35.24486,-45.74293 32.61948,-49.26323 c -13.53746,-20.70267 -35.82325,-52.35764 -32.34122,-77.79916 7.68366,-50.45904 75.67412,-44.19924 82.37677,3.83888 3.58169,22.28718 -12.24609,49.95528 -28.39679,73.54527 11.24148,19.72222 15.99378,22.89129 32.24109,45.44218 -9.15751,16.80203 -31.57575,49.75793 -31.57575,49.75793 14.71443,23.85419 35.07099,50.07487 34.03446,74.60485 -1.16609,21.0685 -23.74312,42.7726 -45.21989,38.64421 -66.77855,-12.83655 -30.78729,-84.62496 -8.49329,-113.028 z\"\r\n             style=\"fill:#e2cf00;fill-opacity:1\" />\r\n          <g\r\n             id=\"g4049\">\r\n            <path\r\n               style=\"fill:#000000\"\r\n               d=\"m 1241.5,17.375 0,22.25 22,0 c 0,0 0.5218,21.45172 0.7188,67 0.191,44.20432 1.0959,66.13672 -1.75,78.71875 -7.7399,29.03206 -50.552,29.17139 -59.0626,8.3125 -4.9558,-12.14668 -3.6136,-21.57364 -3.875,-33.78125 l -23.6562,0 c 0,0 0.1214,6.14583 0.1562,13.65625 0.1299,32.66253 11.1485,48.23825 36.9063,54.40625 26.4867,7.0182 57.4175,-3.67638 68.4375,-25.90625 6.5711,-12.66549 5.8129,-13.50246 5.9688,-90.0625 0.1038,-51.10001 0.9062,-72.34375 0.9062,-72.34375 l 20.25,0 0,-22.25 z m 416.3125,101.78125 C 1676.089,153.49149 1728,246.125 1728,246.125 c 123.4442,-25.60216 227.2522,-32.11804 336.3438,-8.21875 l 77.9374,-118.1875 z m 16.0937,6.96875 22.3126,0 43.7812,90.09375 75.5312,-15.09375 -12.875,-74.8125 21.375,0.125 10.8126,71.9375 110.9687,-2.8125 14.375,-69.4375 20.4687,0.25 -14.6874,70.5625 87.875,11.84375 43,-82.65625 29.5312,0 L 2061,228.1875 c -116.2999,-22.66655 -231.8342,-15.0516 -328.5312,8.75 z m 42.0938,0 65.1562,0 15.625,60.8125 c -7.9997,4.17757 -37.8783,11.31909 -47.875,10.3125 -11.9393,-20.91096 -24.2715,-51.15053 -32.9062,-71.125 z m 125.6562,0 99.1563,0 -8.4687,51.78125 -83.1563,2.65625 z m 157.1876,0 76.4062,0 -30.1562,62.875 -57.625,-7.84375 z m -488.4688,15.75 c -15.3326,32.99244 -36.9285,65.17929 -55.0312,88.96875 -53.6549,70.14225 -65.1798,90.10718 -75.7813,131.40625 -16.5976,64.64585 40.6191,116.87801 90.25,81.75 11.6914,-8.27499 24.6358,-31.08859 24.6875,-40.9375 0.038,-7.08461 4.8835,-10.90923 8.8125,-6.9375 0.7909,0.80007 0.9911,3.97132 0.75,8.5 -2.7491,29.2931 -14.5,76.92368 -37.25,106.8125 l 90.9063,0 c -27.5144,-36.48711 -36.7178,-73.25937 -36.2188,-107.84375 0.072,-14.86286 8.8665,-13.40092 10.8438,1.8125 9.6974,74.61244 105.9155,60.60268 110.4062,-14.03125 2.6423,-39.02461 -21.9926,-80.60593 -54.0938,-126.6875 -26.1895,-37.5955 -58.0459,-78.19188 -78.2812,-122.8125 z m 779.375,47.1875 c -4.468,-0.0242 -8.5894,0.36343 -12.375,1.15625 -19.8195,4.15126 -30.2065,19.38181 -30.375,44.25 -0.075,11.39723 8.3229,31.54591 21.0938,50.59375 6.2276,9.28877 10.375,17.84375 10.375,17.84375 l -33.25,48.875 35.375,46.21875 c 0,0 -5.5095,6.46326 -8.7813,11.09375 -16.224,22.94866 -23.7258,44.40241 -22.6875,62 1.1215,19.00697 12.2043,33.51267 32.9688,40.46875 11.3953,3.81748 27.6403,-0.85015 38.5624,-10.75 8.8136,-7.98857 13.2502,-18.37144 13.4376,-30.5625 0.2676,-17.41577 -8.1425,-38.51433 -24.9063,-61.53125 -4.5513,-6.24851 -6.7813,-11.15625 -6.7813,-11.15625 0,0 23.4608,-33.4072 32.3126,-48.6875 l -32.0626,-46.0625 c 25.4946,-38.30906 30.6329,-46.79873 31.3438,-70.34375 -1.1546,-23.33173 -18.0824,-43.26433 -44.25,-43.40625 z m -3.1875,2.8125 c 1.1005,-0.0183 2.2118,0.009 3.3125,0.0937 29.1136,2.24328 44.4883,23.88178 40.625,51.65625 -3.9529,26.48656 -27.8267,51.16675 -31.6562,59.6875 11.4816,18.66042 33.125,45.1875 33.125,45.1875 -9.185,16.69761 -32.9063,49.0625 -32.9063,49.0625 0,0 1.3676,2.67677 2.875,4.8125 24.7677,35.0961 31.579,51.68331 29.875,72.71875 -1.3456,16.5937 -14.4424,31.39934 -30.7813,34.40625 -25.88,4.76282 -47.1119,-13.60446 -49.7187,-38.40625 -1.5929,-21.71015 12.4022,-42.81542 23.2813,-59.28125 4.6091,-6.89854 8.5624,-13.5 8.5624,-13.5 l -35.25,-46.28125 c 0,0 2.5256,-3.97781 4.1563,-6.34375 6.1979,-8.99503 14.2145,-20.13268 18.3125,-25.46875 7.4143,-9.65009 11.8125,-16.3125 11.8125,-16.3125 0,0 -5.2525,-8.45637 -10.125,-16.15625 -19.3312,-30.53731 -24.7237,-46.18766 -21.75,-63.0625 3.6562,-20.758 19.7419,-32.53841 36.25,-32.81245 z m 2.625,15.65625 c -10.7578,0.2858 -21.0326,8.21943 -25.125,19.6875 -5.911,21.50768 16.7233,54.06978 27.0313,62.8125 19.3047,-22.19733 31.5998,-47.09863 24.4687,-64.53125 -4.6929,-10.5416 -15.619,-18.25455 -26.375,-17.96875 z m 2.6563,6.96875 c 19.4961,0.40273 26.7911,23.54762 11.75,49.875 -5.1942,8.98561 -12.8438,18.375 -12.8438,18.375 0,0 -7.1442,-8.90186 -11.4375,-15.625 -17.425,-27.27549 -12.9325,-48.57078 8.4687,-52.375 1.4053,-0.181 2.7628,-0.27685 4.0626,-0.25 z m -387.9688,12.03125 c -51.0319,0.27005 -119.2212,8.77007 -179.1562,22.375 -5.2029,32.14835 -21.3397,64.3916 -38.9376,90 -16.9505,27.68708 -23.0728,51.79616 -17.4062,68.3125 5.3069,15.46352 -9.1791,38.54889 -25.0938,40 -19.7782,1.80341 -32.3678,15.57566 -32.125,35.1875 -0.5623,31.42204 21.1219,50.68531 50.5626,40 2.9582,-0.37036 4.9374,1.5625 4.9374,1.5625 l -1.7187,179.84375 c -16.5677,2.60164 -27.6314,6.20692 -41.7187,13.6875 l -5.9376,-6.375 c -3.2651,-3.50541 -7.392,-7.99467 -9.1874,-10 -1.7956,-2.00534 -5.0495,-4.80157 -7.2188,-6.1875 -2.1675,-1.38592 -5.1105,-4.37791 -6.5312,-6.65625 -3.4709,-5.56489 -18.2075,-19.72508 -26.25,-25.21875 -1.37,-0.93575 -4.8428,-3.88196 -7.7188,-6.53125 l -5.25,-4.8125 L 1555.156,592 c 0.017,-32.84342 -0.3188,-60.0657 -0.75,-60.5 -0.4311,-0.43431 -7.1589,2.43435 -14.9687,6.375 -26.8251,11.74025 -52.4555,27.93325 -72.125,41.0625 -8.7129,5.83415 -9.5849,9.07853 -6.3125,23.84375 1.8371,8.28472 1.3837,9.17376 -5.4375,10.84375 -14.0473,3.43823 -18.4415,25.81579 -6.5625,33.40625 5.5722,3.55993 5.5955,3.74717 2,11.84375 -5.5597,12.52339 -5.3488,36.47558 0.4062,46.46875 3.2855,5.70494 3.064,7.54738 -1.2812,10.375 -14.963,9.73831 -13.947,30.57565 1.6875,34.46875 3.9976,0.9959 5.042,2.7086 3.7187,6.125 -4.8874,12.6182 -0.4349,31.7916 10.7813,46.3125 5.8285,7.5481 5.8129,7.4645 1.9687,10.9375 -12.5926,11.3772 -5.7694,31.7639 11.375,34 5.883,0.7672 5.9116,0.78015 6.5938,5.28125 1.9661,12.9376 2.8588,16.5479 5.7188,22.625 3.6059,7.6607 7.9401,12.83575 16.0624,19.15625 6.6243,5.1548 6.6303,5.22845 3.0938,12.84375 -6.5375,14.0795 3.8579,28.04275 20.4375,27.46875 8.4505,-0.2927 8.4553,-0.3158 9.0625,2.6875 2.9802,14.698 20.4448,31.9402 34.7812,34.3125 7.3704,1.2196 8.5317,2.97175 6.0313,9.21875 -4.0267,10.0554 -1.4193,16.53575 8.75,21.74995 6.8178,3.4979 8.8098,3.6257 16.2813,1.0626 8.448,-2.9004 8.538,-2.8569 15.7187,6.75 10.1213,13.5417 16.8315,16.9428 33.7187,17.0624 11.1357,0.08 11.5535,0.3674 11.625,8.2188 0.1696,18.5892 19.8308,26.3387 32.5,12.8125 4.5681,-4.877 4.557,-4.8557 8.625,-1.875 17.8207,13.0572 33.6272,16.4324 32.1563,4.2187 -3.4431,-28.5904 -24.125,-46.0312 -24.125,-46.0312 l 25.8437,6.75 c 1.1347,30.186 2.211,66.5836 8.5,91.75 l -115.1874,183.4688 c 0,0 -6.9856,-4.2696 -14.3438,-9.3438 -10.8292,-7.469 -24.0876,-16.2537 -32.2188,-21.3438 -4.162,-2.6078 -9.474,-5.7878 -13.6562,-9.3124 -4.01,-3.3412 2.4765,-7.7498 3.8438,-11.2813 26.524,-47.3573 68.0338,-104.2874 98.25,-159.625 l -29.25,-11.3125 c -22.3765,35.2311 -38.8558,63.5821 -59.6876,96.0625 -20.7477,-152.218 -126.981,-285.8483 -255.5,-342.125 l 0.4376,39.84375 c 134.9224,69.0187 231.2186,211.45875 228.6562,379.46875 -0.5278,0.6318 -11.2959,-5.8151 -25.8438,-15.5 -7.6722,-5.1077 -23.1116,-15.2032 -25.0312,-16.1875 6.2421,-186.0592 -178.2787,-296.0742 -178.5938,-290.875 0,0 -1.1602,24.0432 -1.6874,35.1875 78.6277,52.6818 140.4016,148.5236 146.6562,233.8125 0.07,0.6977 -36.9062,-23.0625 -36.9062,-23.0625 22.0057,-10.9548 15.9463,-39.3416 0.094,-47.0312 -4.9597,-2.2262 -5.2523,-3.302 -2.7813,-10 5.07,-13.7465 -4.2282,-34.4346 -17.0312,-37.9063 -5.6125,-1.5224 -6.5404,-2.9943 -6.8125,-10.875 -0.5007,-14.4121 -8.4722,-23.8359 -22.8437,-27 -3.9674,-0.8734 -4.003,-0.9087 -4.2188,-5.875 -1.2109,-27.9185 -28.5158,-39.2898 -49,-20.4063 -2.2888,2.1109 -4.6875,6.125 -4.6875,6.125 l -0.1563,30.2813 c 6.9942,-3.8489 17.6101,-17.006 21.9688,-16.4687 4.815,0.5623 2.4805,3.8016 -8.3438,13.1562 -7.0224,6.0691 -13.8437,12.4688 -13.8437,12.4688 l 0.4375,39.875 c 11.6655,-7.5743 23.3482,-16.1374 34.2812,-23.75 9.4229,-6.5719 14.2466,-8.7101 15.4063,-6.8126 1.3005,2.1328 -0.8021,4.9198 -6.1563,8.125 -14.3632,9.5681 -31.0757,20.7962 -43.1562,30.25 l -0.031,27.4688 2.3124,3.4062 0.6876,24.0626 -2.1563,0.5312 0.031,30.3125 283.7812,181.2813 144.4062,-227.8126 2.375,2.4063 -144.4374,226.8437 c 0,0 5.9401,5.1094 11.5624,8.0626 5.733,3.2097 12.899,7.4873 19.0313,11.5624 2.8902,4.7365 7.9504,8.9085 13.375,8.3126 4.9718,-5.427 26.6662,-11.1681 28.7507,-13.6708 80.793,-1.1887 312.718,0.3895 312.718,0.3895 l 1.3126,37.0937 c -10.4228,-35.969 -44.0444,-43.3891 -70.4688,-27.2812 l -43.4062,0.062 c -0.3349,0 -25.6862,46.1982 -29.4063,70.3125 -18.2425,-2.4799 -42.5197,15.2989 -43.75,33.3438 -2.955,25.675 13.9145,44.3948 35.9687,40.75 0.4011,0.1602 -3.4612,25.4399 -15.9374,45.1874 -16.5505,34.8579 -25.0838,54.358 -35.1876,84.0938 -6.8396,18.6868 -4.505,22.0043 -3.3437,22.4688 64.7548,-0.9363 124.3296,-7.2075 185.7813,-27.0313 0,0 -1.137,-4.3782 -1.6876,-6.8437 -2.2199,-9.9496 6.1437,-30.3147 29.7813,-72.375 18.2545,-32.4865 23.4826,-44.8848 25.3125,-60.2188 0.9272,-7.7617 0.7574,-9.7711 -1.9375,-24.25 -0.1698,-1.3472 -1.2233,-3.2937 -0.9375,-4.75 1.9139,-9.7505 16.7519,-26.8844 17.0938,-26.4688 0,0 5.385,-1 7.5312,-1.1874 33.4792,-2.3495 43.8508,-47.8509 15.5938,-68.375 -13.7688,-8.4365 -21.8771,-9.0742 -36.4688,-5.25 l -0.25,-176.4688 20.3499,0.7648 22.3689,-11.0458 c 35.9371,30.6899 59.3771,62.06 98.0624,85.6874 l -0.625,1.5626 -28.75,-19.7188 0.063,115.625 c 33.2794,-17.3238 64.3032,-33.2984 94.2187,-57.5312 l -6.0313,-5.2188 0.25,-16.5312 c 28.1126,2.2174 30.8177,-33.5717 7.7188,-37.8438 0,0 0.5319,-2.8827 2.75,-7.4375 7.088,-14.5433 7.9712,-28.2506 2.8125,-43.375 -3.1496,-9.2308 -3.0128,-11.5496 0.7187,-11.5313 17.0748,0.093 15.5077,-30.211 -1.9062,-36.8437 -5.9944,-2.2838 -5.569,-0.3852 -4.3438,-19.1875 0.9203,-14.1218 -2.5226,-23.7003 -12.9687,-36.0938 -3.9441,-4.6765 -3.6081,-6.9314 1.4687,-10.0312 14.5763,-8.8998 4.0137,-34.5925 -13.9062,-33.8438 -6.9999,0.2933 -6.9879,0.2847 -7.5938,-6.7187 -1.5925,-18.4088 -11.8756,-35.9639 -25.3437,-43.3125 -4.1728,-2.2765 -4.7861,-4.1399 -2.4375,-7.2812 11.4706,-15.3405 0.7456,-36.31445 -15.4375,-30.18755 -3.1354,1.1873 -6.4487,2.37875 -7.3437,2.65625 -1.279,0.3963 -2.3106,-1.39165 -4.7813,-8.34375 -6.7304,-18.9299 -12.7037,-24.8659 -34.125,-33.875 -4.2124,-1.7718 -4.4621,-3.01905 -2.5625,-11.65625 3.2823,-14.9093 -17.2522,-28.78695 -28.3438,-19.15625 -4.5165,3.9226 -4.6681,3.8888 -9.75,-2.625 -10.1308,-11.6558 -26.6141,-19.7781 -41.2812,-21.3125 -7.0148,-0.6315 -8.0732,-1.178 -7.5,-3.875 3.8921,-18.2674 -13.8784,-30.1697 -28.6562,-19.1875 -7.0962,5.2743 -8.9315,5.43295 -16.2188,1.34375 -15.3151,-8.5949 -22.0289,-8.91725 -23.625,-1.15625 -0.4923,6.4643 0.9347,14.1148 2.5,18.875 3.7277,12.8334 8.5548,17.5953 19.125,26.625 0,0 -17.5402,-4.86438 -21.9688,-5.75 0.436,-0.4591 -1.2752,-60.89946 -12.7812,-95.125 l 112.1562,-178.5 64.25,42.375 -102.75,162.53125 29.9063,12.15625 c 0,0 39.9377,-66.3468 60.8437,-98.875 13.6885,161.5558 138.5827,303.22035 251.7188,345.24995 -0.3824,0.1912 0.3632,-23.2286 0.8438,-34.5624 -119.3642,-52.5565 -232.9009,-199.42099 -225.75,-375.68755 l 47.9374,30.6875 c 13.9156,141.27593 75.4551,224.06425 178.0313,294.06245 l 0,-43.2812 c -70.6409,-52.2809 -129.3413,-120.56905 -144.9063,-229.84375 0,0 23.9518,15.1319 34.6876,22.3125 0,0 -3.029,1.72895 -4.5938,3.03125 -12.8165,10.6676 -8.9631,32.55 7.9375,44.9375 2.744,2.0125 2.7707,2.01695 0.1875,8.90625 -5.1253,13.672 2.7767,30.19625 16.125,33.65625 7.658,1.9848 7.6115,1.89055 7.75,10.65625 0.2721,17.0213 7.1301,24.8649 25.3125,28.9375 2.4851,0.5551 2.5724,0.8127 2.5313,8.4375 -0.102,18.814 17.9741,31.46845 33.7187,23.59375 4.9291,-2.4661 20.4375,-15.4375 20.4375,-15.4375 l 0,-30.28125 c 0,0 -7.0215,5.74255 -12.0938,10.46875 -8.8815,8.2756 -11.6818,9.3022 -11.6562,4.25 0.02,-3.6649 4.1067,-8.4719 12.625,-14.8125 4.4187,-3.2883 11.125,-10.3125 11.125,-10.3125 l 0,-35.28125 c 0,0 -3.9632,-6.2837 -3.7188,-13.8125 0.1331,-4.095 1.2813,-10.3125 1.2813,-10.3125 l 4.25,0.0937 -0.062,-40.84375 -5.1562,-4.03125 0.2187,-27.0625 L 2088.8438,550.8125 1942.6875,783.25 1939.0312,778.96875 2085.3438,548 2046.4688,523.15625 2023,534.71875 c 0,0 -162.4144,-2.56158 -320.8125,-0.53125 0,0 -0.3777,-4.37006 -0.3125,-16.71875 0.084,-15.52095 0.8002,-17.69723 3.6562,-11.15625 6.4097,14.67865 22.3192,23.52939 40.7813,22.6875 10.4267,-0.47555 11.8772,-0.90107 23.4687,-7.15625 4.3089,-2.32524 5.0922,-2.39517 25.4063,-2.25 21.7788,0.15566 25.6937,-0.6418 25.7187,-5.25 7.583,-17.2485 15.0475,-37.26174 19.375,-52.3125 2.0845,-7.29359 3.013,-10.51064 4.7188,-12 1.3235,-1.1543 2.3662,-0.89405 5.5312,-1.09375 13.9363,-0.89673 17.8111,-1.79621 27.8438,-11.59375 20.1206,-20.2173 8.5822,-61.34192 -20.5625,-61.5 -7.7181,-0.0419 -2.438,-20.58333 13.875,-53.90625 16.8763,-34.47717 19.2427,-39.7646 27.9687,-62.875 5.7038,-15.1059 8.428,-25.93634 9.125,-32.53125 -1.6094,-0.008 -3.26,-0.009 -4.9062,0 z m -1.5312,9.96875 c 4.0356,3.38658 -6.0484,28.28634 -24.2188,65.96875 -14.9982,31.10762 -21.7088,46.66453 -24.9062,57.9375 -0.922,3.2504 -2.2389,7.93572 -2.9376,10.40625 -0.9831,3.47682 -2.2743,5.19273 -5.7187,7.65625 -2.4488,1.75051 -5.8608,4.32869 -7.5937,5.71875 -4.914,3.94122 -6.0796,2.68934 -4.875,-5.25 2.2351,-14.73297 8.0745,-30.62553 21.5624,-58.28125 10.6887,-22.00914 21.1461,-45.59839 29.2813,-69.65625 1.8277,-5.61812 2.6786,-11.32539 5.7187,-13.40625 4.3688,-2.45159 8.9952,-1.96735 13.6876,-1.09375 z m -21.875,1.4375 c 2.781,1.92465 -10.4095,36.02545 -33.25,83.375 -28.4994,59.08002 -30.0107,100.46803 -4.375,110.59375 20.2107,7.98304 40.5649,-14.28657 28.0937,-30.53125 -5.9967,-7.81006 -18.9236,-8.46902 -23.4063,-0.375 -2.4455,4.41594 0.9485,9.50659 5.2813,3.3125 6.3034,-9.0137 18.9268,1.3926 15.875,12.0625 -2.0913,7.3179 -12.3381,13.20482 -18.6875,11.9375 -28,-5.58906 -22.7264,-45.07748 6.3125,-47.25 27.7874,-2.07903 40.4236,35.23575 20.25,56.59375 -6.3984,6.91551 -13.8913,10.36123 -26.9375,10.34375 -18.0887,-0.0242 -34.9928,-14.96419 -33.2812,-28.8125 2.3913,-12.67673 2.7556,-22.91993 -1.5313,-32.90625 -1.3776,-3.2077 -3.0605,-6.39686 -2.9687,-10.4375 0.2555,-11.22786 9.5021,-28.65902 30.125,-71.71875 7.3894,-15.42904 16.4573,-42.17523 20.9374,-59.0625 1.5811,-4.93886 0.8016,-6.3261 2.6578,-7.00955 4.6124,-1.01536 11.1984,-2.40241 14.9048,-0.11545 z m -23.8438,0.59375 c 4.2313,0.18298 -5.5091,31.2501 -17.7812,57.71875 -9.3189,20.26638 -22.0362,46.30042 -31.5,70.375 -3.029,5.10477 -5.0495,5.50159 -11.25,2.1875 -6.8317,-3.65141 -4.8106,-9.46055 11.3124,-41.53125 12.1571,-24.35638 23.8393,-51.90991 32.0313,-79.65625 0.7401,-3.33201 1.8631,-6.21479 4.625,-7.8125 4.2079,-1.83857 8.3094,-1.4679 12.5625,-1.28125 z m -22.6875,3.5 c 2.2569,2.98352 -12.5197,44.86593 -35.375,92.09375 -4.8823,10.02687 -8.1844,19.19284 -13.0937,29.4375 -2.3591,2.37346 -11.4493,3.5788 -16,4.5 -4.6924,-0.62544 -0.2437,-9.43013 13.125,-36.46875 10.8977,-22.04125 13.9944,-28.27762 19.7187,-41.6875 4.171,-9.81826 10.2446,-26.68617 15.9375,-42.4375 0.4577,-1.27109 0.8979,-4.09772 2.125,-4.75 4.2425,-1.7911 9.4102,-2.51879 13.5625,-0.6875 z m -22.3125,2.625 c 0.3705,1.00759 -0.4722,3.08639 -0.7812,4.6875 -3.5943,16.8538 -11.8107,32.54556 -17.8126,48.65625 -0.7177,2.19614 -7.2973,15.91169 -14.625,30.46875 -7.3275,14.55706 -14.0487,28.45762 -14.9374,30.90625 -0.8889,2.44863 -3.3242,8.9496 -5.4063,14.4375 -13.1531,28.21487 0.9909,50.45312 18.4098,52.00798 27.1681,2.24842 29.7341,-35.84042 10.5644,-39.50363 -7.2299,-1.21498 -15.1766,2.75039 -15.2217,11.0636 -0.5075,4.34862 4.8385,9.39221 4.7616,3.15044 -0.2852,-11.34949 15.5725,-10.82657 17.5255,-1.18714 3.8062,18.78611 -17.5404,27.96713 -30.2583,13.21875 -5.2386,-6.07493 -5.1927,-13.00404 -4.2188,-19.21875 2.6391,-16.81068 22.0139,-28.97052 39.9688,-16.28125 24.5667,17.36219 16.0879,55.75288 -15.6563,62 -10.8511,2.82628 -24.5318,-0.78899 -33.0937,-9.59375 -5.4523,-5.60672 -9.0348,-13.87025 -10.4063,-24.125 -0.7644,-5.70792 -1.0646,-12.42668 -0.1875,-18.71875 2.5716,-19.71097 16.9504,-48.49681 29.5625,-72.875 9.7344,-20.22732 17.3834,-46.94325 26.25,-68.4375 2.5019,-1.83166 15.9388,-3.52592 15.5625,-0.65625 z m -23.9688,2.6875 c 1.445,0.44639 -5.9758,23.79931 -16.5624,49.03125 -11.6499,25.59425 -26.7704,54.87663 -35.3438,80.0625 -2.6989,6.17974 -4.6657,5.99544 -12.3438,-1.15625 -4.0525,-3.77477 -1.7715,-9.40051 12.4376,-38.40625 21.8586,-44.62107 29.9713,-63.65584 33.25,-74.28125 1.5407,-4.99384 2.7792,-11.12045 6.0624,-13.0625 4.1992,-1.98523 8.3311,-3.44461 12.5,-2.1875 z m -21.8437,5.59375 c -2.3126,7.51244 -9.8878,29.776 -22.8437,56.15625 -8.1286,16.6515 -16.0669,35.09694 -24.0938,52.28125 -4.4799,10.60406 -4.6095,10.59314 -12.25,12.1875 -12.8784,2.68772 -12.88,2.54484 -1.5,-20.53125 3.382,-6.85676 9.8829,-19.45116 14.4688,-27.96875 8.4512,-15.69732 21.5114,-46.26103 26.25,-61.5 1.2686,-4.08047 3.0342,-7.91047 5.0937,-10 1.3231,-0.70439 11.4639,-3.73207 14.875,-0.625 z m -28.1563,2.8125 c 2.3021,-0.0833 4.3719,0.32948 5.3438,1.59375 0.573,5.24059 -13.5819,38.75162 -22.2812,54.28125 -2.6565,4.76153 -5.2922,10.93335 -8.2813,16.4375 -11.0842,17.63501 -24.4084,51.52818 -27.8437,65.59375 -5.4577,22.3465 20.0848,39.24149 33.3314,22.99377 8.4069,-9.83458 -0.3426,-27.52823 -12.4564,-22.58752 -4.231,1.72563 -2.5033,3.61484 3.2746,4.09967 9.5388,0.80043 10.2613,15.50706 0.1531,18.73775 -11.2343,3.43961 -19.5132,-6.3057 -19.4713,-16.28319 0.086,-20.46074 22.4691,-27.97876 36.479,-16.80065 13.9766,11.63868 16.2025,39.30547 -4.9667,50.02767 -20.6374,10.45229 -46.0511,-3.7162 -51.1563,-28.5 -3.896,-18.91464 0.326,-36.24745 18.5313,-65.40625 10.4617,-16.78451 26.7135,-45.76016 35.0313,-71.1875 1.6306,-4.30974 3.0683,-7.87899 4.5624,-9.6875 1.3878,-1.60571 5.9134,-3.1736 9.75,-3.3125 z m -497.3437,5.125 c 0,0 -8.2315,15.78396 -19.5937,34.71875 -13.8623,23.41713 -34.2749,46.53569 -37.2813,72.71875 -0.808,7.45621 0.427,14.93944 1.9375,19.53125 6.3358,19.26609 33.9293,22.17285 43.5625,5.9375 2.8922,-4.87731 3.8686,-5.77933 6.6875,-4.25 1.21,0.65601 1.7183,2.55035 1.6562,5.21875 -2.3954,17.28745 -9.0572,26.78892 -18.625,39.78125 l 46.0313,0 c -9.691,-10.66908 -17.913,-25.38646 -18.9063,-40.28125 -0.2977,-6.1014 3.4262,-6.61503 9,0.0625 17.9556,24.81741 46.1831,-3.06437 43.875,-26.21875 -2.5684,-25.76825 -29.5137,-59.0954 -36.9374,-72.1875 -11.2254,-16.61091 -21.4063,-35.03125 -21.4063,-35.03125 z m 1050.625,54.40625 -27.7187,35.25 c 7.9961,11.55317 27,34.28125 27,34.28125 L 2316.5,350.875 z m 0.25,19.71875 11.4687,14.875 -13.125,15.5 -12.3124,-14.46875 z m 1.0313,76.625 c 0,0 -33.5099,36.72206 -25.8126,63.96875 6.8788,24.27415 43.3913,30.17418 52.2813,-5.34375 0.6254,-2.82812 0.1321,-6.65217 -0.25,-11.40625 -0.7615,-14.46529 -26.2187,-47.21875 -26.2187,-47.21875 z m 0,7.25 c 0,0 9.6223,13.95252 16.4062,26.3125 7.5919,11.75694 9.585,44.61453 -17.375,43.59375 -14.6126,1.50679 -28.561,-17.75564 -16.9375,-41.3125 3.1633,-7.17413 17.9063,-28.59375 17.9063,-28.59375 z m -553.125,5.90625 c 1.8631,-0.28978 3.7334,3.73247 4.9062,6.65625 1.5971,3.97536 -2.9658,15.42652 -7.7812,21.125 -0.9163,0.9585 -7.0724,1.48744 -16.2188,6.15625 -0.025,-4.28737 2.5926,-13.68318 4.3125,-17.84375 6.2362,-6.16443 11.5302,-13.50649 14,-15.6875 0.2618,-0.23274 0.5151,-0.36485 0.7813,-0.40625 z m -66.7813,2.0625 c 4.1164,4.66245 8.1645,8.70792 8,11.59375 -0.2432,4.2225 -5.2106,9.4436 -8.9687,13.15625 -4.7164,4.65924 -14.1249,1.88806 -14.0938,-4.15625 0.012,-2.23396 13.4467,-20.60255 15.0625,-20.59375 z m 141.8437,6.0625 c 3.9805,2.1326 8.0109,9.39597 8.5313,12.6875 -5.8338,31.40418 -27.4157,69.7839 -26.6875,68.34375 0,0 -13.2295,2.35773 -18.8438,-0.5 14.5388,-20.17918 24.2698,-45.85325 30.875,-66.875 2.8337,-9.06666 4.1241,-13.63008 6.125,-13.65625 z m -12.25,4.40625 c 2.2241,-0.12831 3.0839,1.66809 1.2188,6.53125 -8.5424,34.72725 -27.7489,71.22987 -42.8438,77.875 -19.8249,8.72752 -39.5337,1.48091 -48,-13.4375 -9.1639,-16.14787 -7.5358,-41.63847 23,-47.21875 17.9614,-1.84193 36.3666,12.31968 26.7813,35.09375 -10.6684,16.8935 -39.3425,7.47776 -30.9375,-14.3125 6.3513,-7.98486 19.6549,-1.05901 15.3125,7.96875 -2.2037,4.57966 -0.073,7.3943 3.1875,4.21875 10.4571,-10.18043 -6.7433,-27.64905 -18.3438,-18.90625 -18.9203,14.2596 4.444,45.60495 26.4688,32.15625 6.7126,-4.09847 18.8497,-27.0911 23.4062,-43.84375 1.9612,-7.21071 3.7292,-14.05903 8.375,-18.4375 4.4199,-4.16536 9.5156,-7.52254 12.375,-7.6875 z m -50.1562,1.375 c 1.0801,0.0419 2.3513,0.57923 4.0938,1.4375 2.2074,1.0874 4.7998,3.07025 4.5,5.625 -0.3472,2.95728 -2.0337,9.38229 -5.4376,12.5 -2.0503,-0.70226 -7.7065,-2.96216 -11.5624,-4 -2.4214,-0.6517 0.8016,-5.86558 2.2812,-8.75 2.3868,-4.64735 3.7034,-6.59689 5.6562,-6.78125 0.1465,-0.0138 0.3145,-0.0372 0.4688,-0.0312 z m -62.4062,1.1875 c 2.8499,-0.0531 7.3647,3.10617 10.3437,3.53125 0.5734,4.31124 -4.9129,13.54045 -13.8437,24.4375 -7.3258,8.93854 -7.2891,8.95447 -12.1563,-0.875 -3.1706,-6.40077 -3.2547,-6.22446 5.7813,-17.46875 4.8569,-6.04415 7.1993,-8.81199 9.3124,-9.5625 0.1741,-0.0339 0.3726,-0.059 0.5626,-0.0625 z m 28.3437,3.15625 c 0.1342,2.3046 -1.0417,7.38768 -2.0313,10.34375 -10.1282,30.25517 -33.7913,60.22862 -53.3124,67.59375 -25.4795,8.32743 -48.8128,-5.09436 -49.4063,-36.03125 0.6462,-36.45292 44.046,-46.55667 57.1563,-13.3125 5.9193,15.01024 -10.211,37.57645 -24.1563,33.8125 -14.072,-3.79763 -19.947,-25.7583 -8.3437,-31.1875 7.6036,-3.55788 15.4703,2.40675 13.8124,10.46875 -0.5748,2.79625 -0.4163,3.18102 1.2188,2.875 7.2308,-1.3519 3.4146,-15.87744 -5.125,-19.5 -16.1351,-6.84546 -28.3261,14.88838 -17.4375,31.09375 13.0342,19.40143 33.5358,15.68234 45.3437,-8.25 2.01,-4.07374 5.8366,-9.92031 8.4688,-12.96875 7.1509,-8.27618 9.4284,-11.5302 15.75,-22.46875 3.4832,-6.02551 5.3488,-9.83556 7.125,-11.8125 2.8308,-0.19214 4.77,0.59282 10.9375,-0.65625 z m 57.1563,1.59375 c 3.0573,0.0237 5.412,2.01103 5.3437,6.25 -0.059,3.54576 -5.1319,18.48804 -7.5,22.0625 -0.9098,1.37216 -3.0293,6.17501 -3.3437,5.125 -2.9787,-9.94284 -8.3054,-13.01634 -9.0626,-15.625 -0.8879,-3.05941 1.8017,-5.99518 3,-8.75 2.5475,-5.8556 7.6315,-9.09296 11.5626,-9.0625 z m 53.875,4.71875 c 3.6952,-0.0307 8.9223,1.66445 10,4.40625 3.3733,5.91859 -19.4477,61.02078 -20.2813,61.1875 l -17.0313,-0.75 c 10.2282,-21.97132 19.2717,-43.74453 25.8438,-64.71875 0.449,-0.0766 0.9408,-0.12062 1.4688,-0.125 z m 228.5,87.21875 21.6562,12.875 -142.75,226.84375 -20.75,-15.875 z m -356.1563,4.6875 c 133.3341,0.49662 316.9687,0.25 316.9687,0.25 l -7.75,14.71875 c 0,0 -200.5669,-1.95652 -309.2187,-1.75 z m -180,9.28125 -0.2813,74.5625 c 0,0 -1.0013,-0.43702 -13.7187,-8.90625 -15.2608,-10.16158 -32.0142,-20.63329 -37.4063,-23.375 -7.9477,-4.04118 -6.9084,-5.99167 8.375,-15.71875 15.009,-9.03011 43.0313,-26.5625 43.0313,-26.5625 z m 570.9063,7.40625 13.4062,8.46875 -150,238.75 -8.3438,-16.375 z m -390.875,3.3125 20.875,0 0,23.59375 -20.875,0 z m 47.8124,0 25.3438,0 0,23.59375 -25.3438,0 z m 55.375,0.25 26.0626,0 0,23.59375 -26.0626,0 z m 54.3438,0.0937 26.3438,0 0,23.59375 -26.3438,0 z m 54.75,0.15625 26,0 0,23.59375 -26,0 z m 54.7812,0.5 26.5938,0 0,16.625 -4.0312,6.96875 -22.5626,0 z M 2111.5,569.9375 2365.9062,734.53125 2365.75,757.25 2100.9062,586.09375 z m -16.6875,19.25 2.1875,1.5625 -10.7812,16.5 L 2084,606 z m -393,2.4375 285.5625,0 -8.5938,14.46875 -276.9687,-0.40625 z M 1467.375,599 c 1.9234,-0.12316 5.6695,1.57135 11.5,4.84375 14.0426,7.87914 22.8794,24.49854 16.8125,30.5 -5.3968,5.33847 -18.0364,-6.09906 -25.875,-22.4375 C 1465.6563,603.24534 1464.5658,599.18 1467.375,599 z m 505.2812,14.25 -92.125,147.25 c -20.8266,-28.54194 -44.1723,-53.20215 -95.1562,-36.5 -26.5788,-20.55167 -54.6822,-23.72328 -84.5938,-6.28125 L 1701.125,613.75 z m -474.25,0.0625 7.1876,6.21875 c -2.1213,4.05518 -3.0969,9.92339 -4.4688,15.15625 -0.1083,-7.17537 -0.7335,-14.31694 -2.7188,-21.375 z m 584.0313,1.53125 283.8437,186.75 0,17.3125 -293.75,-189.25 z m -621.6875,4.25 c 3.6725,-0.0704 7.2628,1.49841 9.9688,4.75 4.2936,5.15947 2.5246,14.61628 -3.5,18.65625 -11.997,8.04453 -26.3943,-7.52604 -16.875,-18.25 2.9829,-3.36062 6.7355,-5.08587 10.4062,-5.15625 z m 47,2.21875 15.5,12.40625 c -26.9049,153.43497 49.9562,308.3345 215.5,354.75 l 1.875,19.65625 c 0.3122,0.9369 -70.3309,-20.9806 -101.1875,-44.0625 -42.1862,-28.5378 -77.8282,-68.72465 -102.4063,-115.46875 -16.7666,-30.14077 -25.9663,-63.33208 -31.9062,-90.15625 -7.0253,-46.02013 -6.826,-91.57528 2.625,-137.125 z m -17.5938,20.8125 c 5.941,0.24312 6.5849,4.52443 1.8126,12.75 -6.137,10.57723 -15.3364,17.93969 -30.25,24.21875 -8.215,3.45871 -10.3588,1.88786 -9.4063,-6.875 1.4304,-13.1761 10.5966,-22.82007 26.4687,-27.90625 3.8101,-1.05739 7.6628,-2.20995 11.375,-2.1875 z m 45.625,1.65625 c 2.4256,2.05365 3.1863,2.69946 6.1563,5.21875 -5.0856,1.74282 -8.75,6.54235 -8.75,12.21875 0,7.1452 5.7925,12.9375 12.9375,12.9375 6.4039,0 11.6843,-4.64062 12.7188,-10.75 2.3174,1.98543 4.4908,3.84133 6.1874,5.3125 -2.985,7.5268 -10.3221,12.84375 -18.9062,12.84375 -11.2275,0 -20.3438,-9.11615 -20.3438,-20.34375 0,-7.44292 4.0286,-13.90021 10,-17.4375 z m 10.3438,10.1875 c 0.7055,0 1.3866,0.1245 2.0312,0.3125 1.623,1.38055 2.9303,2.50531 4.5,3.84375 0.4507,0.94439 0.7188,1.97794 0.7188,3.09375 0,4.0029 -3.2471,7.25 -7.25,7.25 -4.0028,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2472,-7.25 7.25,-7.25 z m -48.8438,4.6875 c -1.6845,19.78735 -1.1558,40.47647 -0.5312,61.1875 -3.8197,-16.41271 -12.3422,-28.69383 -26.5312,-37.09375 9.7977,-6.77002 20.0484,-15.00395 27.0624,-24.09375 z m 74.5938,15.53125 13.7812,11.90625 c -11.8504,162.42154 130.4915,224.05785 134.3126,221.34375 l 6,18.375 c -98.288,-33.4512 -166.2332,-135.0448 -154.0938,-251.625 z m 792.8438,389.3888 -0.7188,20.4549 c -111.5344,-43.2791 -238.6483,-202.9489 -237.0312,-355.93745 -28.6358,43.90285 -44.7295,73.2034 -69.3126,112.75 l -19.5683,-9.31613 c 32.1854,-47.94234 62.7747,-99.22086 95.0488,-146.31949 3.6722,-5.31899 6.6864,-7.75785 6.8523,3.87185 -0.022,52.63867 16.3056,269.19749 224.7298,374.49632 z M 1457.8438,686.875 c 3.5863,-0.2292 8.718,1.50781 15.1874,5.84375 10.2028,6.83793 21.6439,27.97261 17.6876,32.6875 -3.5586,4.24086 -18.6817,-0.8047 -26.1876,-8.75 -14.8746,-15.74535 -15.8529,-29.19552 -6.6874,-29.78125 z m 86.9687,2.125 c 11.2259,0 20.3437,9.08493 20.3437,20.3125 0,11.22757 -9.1178,20.34375 -20.3437,20.34375 -11.2277,0 -20.3437,-9.11618 -20.3437,-20.34375 0,-11.22757 9.116,-20.3125 20.3437,-20.3125 z m 45.5313,1.9375 13.2812,15.5625 c 2.596,136.31807 110.1929,178.3524 109.1875,178.6875 l 3.25,14.65625 c -5.9978,0.8404 -133.1232,-57.03165 -125.7187,-208.90625 z m -45.5313,5.4375 c -7.1452,0 -12.9375,5.79232 -12.9375,12.9375 0,7.14518 5.7923,12.9375 12.9375,12.9375 7.1433,0 12.9375,-5.79232 12.9375,-12.9375 0,-7.14518 -5.7942,-12.9375 -12.9375,-12.9375 z m 0,5.6875 c 4.0011,0 7.25,3.24713 7.25,7.25 0,4.00287 -3.2489,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.24713 -7.25,-7.25 0,-4.00287 3.2471,-7.25 7.25,-7.25 z m 68.75,12.34375 c 1.6343,0.009 9.3125,11.15625 9.3125,11.15625 0,0 -8.429,2.95615 -12.0625,-0.71875 -3.6102,-3.64955 -1.664,-10.46144 2.75,-10.4375 z m 589.1563,5.03125 19.9374,13.625 c 9.3085,91.96681 61.9904,175.8614 141.4376,234.0625 l -0.5,22.78125 c -96.7671,-65.3862 -150.4931,-154.22439 -160.875,-270.46875 z m -747,1.5625 c 0.3247,-0.0196 0.6532,-0.005 0.9687,0 12.197,0.20458 17.3634,18.9424 4.3125,24.3125 -8.205,3.3769 -17.1275,-1.49995 -18,-9.84375 -0.6123,-5.8747 3.7544,-12.16368 9.6875,-13.90625 1.049,-0.30849 2.0566,-0.50368 3.0313,-0.5625 z m 166.375,12.28125 c 3.1971,0.01 6.6728,1.8452 9.9687,5.5625 8.7443,9.8626 8.6626,12.72645 -0.5625,16.46875 -12.9735,5.2636 -23.7605,-2.0498 -19.4375,-13.1875 2.2687,-5.8498 5.9205,-8.85035 10.0313,-8.84375 z M 1489.25,733.75 c 1.0539,-0.022 2.0349,0.11675 2.9375,0.46875 9.5661,3.7294 -11.1679,41.7129 -24.875,45.5625 -8.7083,2.4465 -10.5323,-0.95265 -7.6875,-14.28125 3.1641,-14.8155 19.4393,-31.5391 29.625,-31.75 z m 61,0.875 c 11.2277,0 20.3438,9.0849 20.3438,20.3125 0,11.2276 -9.1161,20.34375 -20.3438,20.34375 -11.226,0 -20.3438,-9.11615 -20.3438,-20.34375 0,-11.2276 9.1178,-20.3125 20.3438,-20.3125 z m 0,7.375 c -7.1435,0 -12.9375,5.7923 -12.9375,12.9375 0,7.1452 5.794,12.9375 12.9375,12.9375 7.1451,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1452 -5.7924,-12.9375 -12.9375,-12.9375 z m -50.8438,1.09375 c 1.8067,18.8108 4.8641,36.2142 13.2188,59.375 -7.8349,-12.5272 -19.0077,-18.74935 -29.7188,-25.84375 7.5087,-11.1771 16.1979,-22.35415 16.5,-33.53125 z m 50.8438,4.59375 c 4.0029,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2471,7.25 -7.25,7.25 -4.0012,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2488,-7.25 7.25,-7.25 z m 115.125,2.21875 c 21.2126,-0.45599 36.2136,17.01307 35.2812,33.75 0.6207,19.4373 1.3208,31.88595 -0.2812,56.03125 l -17.2188,-31.53125 c -0.2443,-8.9365 1.2778,-15.70155 0.5938,-24.59375 -1.953,-23.9122 -25.3875,-20.59225 -26.5,-18.21875 l -7.4062,-12.03125 c 5.4384,-2.24166 10.636,-3.30102 15.5312,-3.40625 z m 74.7188,2.40625 c 19.8764,-0.022 31.3925,11.17345 32,31.09375 1.1628,38.1398 -0.875,125.21875 -0.875,125.21875 l -43,0.0312 -23.4688,-58.1875 c 0,0 -0.9316,-5.59655 -0.75,-9.65625 1.4939,-18.6607 0.559,-39.43035 1.1875,-56.28125 2.4769,-17.8655 17.1585,-32.19885 34.9063,-32.2187 z m -99.5,6.03125 c 2.7655,-0.035 5.3309,0.80785 7.2812,2.78125 9.9773,10.086 9.9189,16.6992 -0.1875,21.25 -13.368,6.0183 -20.3148,4.878 -24.875,-4.0625 -4.4723,-8.7646 7.9039,-19.84435 17.7813,-19.96875 z m 626.875,2.75 10.9062,7.03125 c 0,0 -2.2924,3.58675 -3.5312,5.71875 -6.1924,10.6535 4.3307,16.9029 18.9062,11.25 2.6311,-1.0207 4.875,-2.46875 4.875,-2.46875 l 9,6.125 c 0,0 -6.4881,3.50545 -13.5625,6.96875 -18.1904,8.9011 -31.2656,5.12395 -35.6563,-10.28125 -1.7427,-6.115 0,-13.7723 3.4063,-18.25 1.7421,-2.2903 5.6563,-6.09375 5.6563,-6.09375 z m -461.25,1.28125 c 16.6427,-0.56706 32.8381,12.43478 36.6874,29.90625 1.5953,8.1826 -0.4687,116.375 -0.4687,116.375 l -66.0313,-0.0312 1.1563,-113.5 c -0.4358,-7.1766 10e-5,-14.2793 3.8437,-19.375 7.258,-9.03818 16.0949,-13.07797 24.8126,-13.37505 z m -68.5626,4.96875 c -13.3376,0.61382 -20.9108,22.21741 -7.1874,32.40625 5.7316,4.2556 5.8506,5.0559 2.7812,19.4375 -3.5,16.4073 0.1239,38.88485 8.3125,51.53125 6.2799,10.4736 4.9971,5.11985 1.7813,-4.21875 -4.1327,-17.5101 -2.1075,-30.37375 8,-50.71875 9.032,-17.1381 17.7825,-43.4909 -10.9376,-48.25 -0.9356,-0.15506 -1.8608,-0.22842 -2.75,-0.1875 z m 548,4.9375 5.9688,4.03125 c 0,0 -0.8937,0.7447 -2.1875,2 -2.387,2.3127 -7.136,2.68065 -8.5937,0.90625 -2.4136,-2.9407 4.8124,-6.9375 4.8124,-6.9375 z m -475.6874,8.375 c -14.3338,-0.48132 -23.7732,26.10582 -5.4376,32.53125 4.1656,2.69 4.8652,6.2124 2.2813,11.1875 -3.4733,6.6827 -6.9476,22.5589 -6.4063,29.1875 0.7775,9.5157 3.2088,21.9378 5.125,26.25 4.812,11.8813 3.8482,7.13555 2.5938,-6.59375 -0.4828,-15.3414 2.6094,-26.4052 11.5312,-41.0625 10.599,-17.577 25.1939,-46.1626 -8.2812,-51.375 -0.4718,-0.0735 -0.944,-0.10947 -1.4062,-0.125 z m -246.625,0.0937 c 11.2274,0 20.3437,9.0849 20.3437,20.3125 0,11.2276 -9.1163,20.34375 -20.3437,20.34375 -11.2276,0 -20.3438,-9.11615 -20.3438,-20.34375 0,-11.2276 9.1162,-20.3125 20.3438,-20.3125 z m 94.2812,2.0625 c 3.5091,-0.034 6.1492,2.2988 9.3438,7.0625 8.782,13.0956 7.773,15.77845 -9.1563,25.09375 -17.9392,9.8682 -29.9379,-14.9498 -12.7813,-26.4375 5.1885,-3.4723 8.8633,-5.3991 11.875,-5.6875 0.242,-0.023 0.4865,-0.0294 0.7188,-0.0312 z m -186.1875,0.96875 c 18.9222,0.1951 48.4804,27.2068 34.0625,31.125 -2.0595,0.5605 -4.6502,0.942 -5.75,0.875 -23.7704,-1.4508 -51.0064,-32.2321 -28.3125,-32 z m 91.9063,4.34375 c -7.1452,0 -12.9376,5.7923 -12.9376,12.9375 0,7.1452 5.7924,12.9375 12.9376,12.9375 7.1449,0 12.9374,-5.7923 12.9374,-12.9375 0,-7.1452 -5.7925,-12.9375 -12.9374,-12.9375 z m 749.375,3.8125 9.4374,6.40625 c 0,0 -5.7695,2.65345 -12.5624,6.28125 -18.4553,9.8558 -23.813,17.08785 -17.4376,23.53125 2.2764,2.3013 4.9692,3.30125 9.8126,1.46875 12.7918,-4.9675 24.7236,-13.7155 36.6562,-20.625 l 7.0938,4.875 c -0.1629,-0.3258 -28.2118,19.94415 -43.5313,28.46875 -24.0484,12.3474 -37.7853,-12.8954 -24.4063,-29.75 10.3211,-10.263 21.3787,-13.62815 34.9376,-20.65625 z m -749.375,1.875 c 4.0026,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2474,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2471,-7.25 7.25,-7.25 z m 764.125,6.78125 5.1562,3.46875 c 0,0 -0.5568,0.2609 -16.3125,9.3125 -17.1438,9.849 -17.8954,10.02035 -18.8437,8.46875 -0.8416,-0.4673 0.3286,-4.49055 5.5937,-8.03125 9.2249,-6.2037 25.5428,-13.74375 24.4063,-13.21875 z m -446.0313,0.5 c 11.6783,-0.22576 23.5777,5.31992 30.375,17.1875 3.4635,9.0138 3.7601,17.37975 3.7187,26.84375 l -0.2812,63.53125 -66.5,0 c 0,0 -3.0858,-43.30435 0,-79.34375 3.0188,-18.10597 17.6725,-27.92849 32.6875,-28.21875 z M 1674.9062,810.5 c 4.2243,-0.3093 7.3334,3.8348 11.3438,12.8125 3.9737,8.8916 0.986,13.9193 -11.5,19.3125 -1.5776,0.6821 -3.3759,1.1844 -4,1.125 -12.6248,-1.2046 -17.7888,-15.75775 -8.7188,-24.59375 5.6238,-5.4767 9.5896,-8.41565 12.875,-8.65625 z m 675.875,6.5 5.7813,3.59375 c 0,0 -2.9617,2.68085 -24.4375,18.34375 -17.3427,12.6498 -19.8411,16.0883 -16.2188,23.1875 2.9236,5.7295 9.2668,4.9844 18.0313,-1.75 12.1549,-9.3407 31.2813,-25.15625 31.2813,-25.15625 l 0.625,10.8125 c -12.5891,10.1154 -27.7811,27.3704 -39.875,33.9375 -23.3368,11.4956 -40.0803,-20.0717 -18.75,-35.625 C 2325.6042,830.93605 2350.7812,817 2350.7812,817 z m -466.8124,0.0312 c -17.3842,-0.1443 -23.8484,25.6571 -5.1563,31.125 5.3794,2.8818 4.9312,4.36815 1.3437,17.21875 -2.1719,7.7804 -2.8722,17.37235 -1.6874,23.46875 1.3981,7.7723 3.1223,7.5911 2.4062,-0.75 0.025,-4.5623 4.7194,-16.737 9.4062,-24.375 17.3346,-24.1629 12.7891,-46.4558 -6.3124,-46.6875 z m -405,0.3125 c 11.4669,0.078 17.8856,16.0514 7.9374,22.9375 -7.047,4.8794 -21.7922,-1.07455 -21.75,-8.78125 0.036,-6.569 5.2073,-12.8237 11.4688,-13.9375 0.8061,-0.1434 1.5793,-0.22415 2.3438,-0.21875 z m 33,1.34375 c 3.6111,-0.01 5.6856,5.2794 5.6562,15.75 -0.04,15.0168 -5.374,28.1016 -14.5625,35.75 -13.3034,11.0713 -16.2752,-19.1053 -3.8437,-39.0625 5.1781,-8.313 9.5636,-12.4323 12.75,-12.4375 z m 851,3.96875 c 3.2758,-0.051 2.7646,2.45515 -1.0313,5.09375 -2.9468,2.0473 -7.95,6.14945 -23.4375,19.21875 -2.8109,2.3716 -6.842,5.4683 -8.9375,6.875 -5.1587,3.4582 -9.5305,2.5581 -7.0313,-1.4375 2.4609,-3.9322 37.4914,-29.7029 40.4376,-29.75 z m -779.3126,0.6875 c 11.2276,0 20.3438,9.0864 20.3438,20.3125 0,11.2276 -9.1162,20.34375 -20.3438,20.34375 -11.2274,0 -20.3437,-9.11615 -20.3437,-20.34375 0,-11.2261 9.1163,-20.3125 20.3437,-20.3125 z m 0,7.375 c -7.145,0 -12.9374,5.7938 -12.9374,12.9375 0,7.1452 5.7924,12.9375 12.9374,12.9375 7.1451,0 12.9376,-5.7923 12.9376,-12.9375 0,-7.1437 -5.7925,-12.9375 -12.9376,-12.9375 z m -243.2812,0.375 c 137.5886,69.5634 223.362,199.7102 244.5312,347.9688 l 66.8438,-106.0314 18.0625,6.8126 -97.4063,158.75 -4.2187,-1.3126 c -0.4063,-155.089 -77.7047,-301.8038 -228.125,-382.3124 z m 243.2812,5.3125 c 4.0028,0 7.25,3.2486 7.25,7.25 0,4.0029 -3.2472,7.25 -7.25,7.25 -4.0027,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0014 3.2473,-7.25 7.25,-7.25 z m -56.7812,0.8438 c 6.0153,13.3046 13.3401,27.26365 24.6562,43.21875 -11.4753,-10.7782 -24.0152,-10.3123 -36.4374,-11.9375 z m 163.5938,2.875 c 2.136,-0.104 4.2667,0.79665 5.9374,3.09375 5.6267,7.7338 6.6659,14.90755 2.75,18.78125 -5.3622,5.3046 -13.8965,3.20835 -17.75,-4.34375 -4.0092,-7.8556 2.654,-17.21935 9.0626,-17.53125 z m 674.75,10.75 0.2187,12.03125 c 0,0 -2.5652,3.086 -5.2813,5.625 -7.669,7.174 -18.1567,18.61255 -18.9062,21.53125 -2.4344,9.4883 6.9461,12.9698 16.1875,6 3.1886,-2.4062 7.7813,-6.0625 7.7813,-6.0625 l 0,14.8125 c -7.8022,6.6302 -15.5752,13.1479 -26.2188,11 -6.2052,-1.8927 -11.6478,-6.771 -12.7812,-13 -4.4436,-18.6618 13.6324,-29.078 27.6562,-41.5625 4.5235,-4.0299 11.3438,-10.375 11.3438,-10.375 z m -752.9063,10.5 c 0.3452,-0.017 0.6804,0 1.0313,0 11.2274,0 20.3437,9.0849 20.3437,20.3125 0,11.2276 -9.1163,20.34375 -20.3437,20.34375 -11.2276,0 -20.3438,-9.11615 -20.3438,-20.34375 0,-10.8767 8.5702,-19.769 19.3125,-20.3125 z m 408.5,4.5625 c 11.087,-0.044 16.9562,14.88695 8.0313,23.34375 -3.5079,3.3245 -11.424,5.68484 -15.9063,2.5625 -12.3604,-8.61012 -3.2598,-25.3394 7.875,-25.90625 z m -22.125,11.84375 c 6.416,6.8044 11.2768,26.5746 7.5,30.3125 -8.3631,8.63087 -32.6593,-20.07951 -31.2081,-38.84099 2.5807,-11.2528 21.335,6.01172 23.7081,8.52849 z M 1701.375,867 c 4.6449,0.025 5.5191,4.19455 4.4688,6.65625 -1,2.3434 -4.6375,2.53205 -7.5313,1.34375 -4.9177,-2.0181 -2.6143,-8.0308 3.0625,-8 z m -88.0312,1.75 c -7.1452,0 -12.9376,5.7923 -12.9376,12.9375 0,7.1452 5.7924,12.9375 12.9376,12.9375 7.1449,0 12.9374,-5.7923 12.9374,-12.9375 0,-7.1452 -5.7925,-12.9375 -12.9374,-12.9375 z m -96.8438,5.6875 c 24.5363,0.03 50.4176,19.3546 27.9062,23.1875 -16.7109,2.8453 -27.5497,-0.45845 -40.5624,-12.34375 -6.6147,-6.0396 -4.2586,-9.24825 7.7812,-10.59375 1.6091,-0.1798 3.241,-0.252 4.875,-0.25 z m 96.8438,0 c 4.0026,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2474,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2471,-7.25 7.25,-7.25 z m 33.9687,18.40625 c 0.3453,-0.018 0.7129,0 1.0625,0 11.2277,0 20.3438,9.0862 20.3438,20.3125 0,11.2276 -9.1161,20.34375 -20.3438,20.34375 -11.2264,0 -20.3438,-9.11615 -20.3438,-20.34375 0,-10.8755 8.539,-19.7703 19.2813,-20.3125 z m 399.7813,1.03125 c 5.8042,-0.097 10.8988,0.9932 13.8437,3.6875 3.6,3.2952 -1.8091,9.6206 -12.8437,15 -12.8923,6.285 -35.3789,5.411 -35.3438,-1.375 0.049,-9.0255 19.5102,-17.064 34.3438,-17.3125 z m -489.75,5.34375 c 11.2772,0.059 14.3278,35.02795 4.5312,51.78125 -5.0813,8.6928 -11.9248,2.88275 -16.8125,-14.28125 -4.0094,-14.0761 3.6827,-37.5466 12.2813,-37.5 z m 91.0312,1 c -7.1439,0 -12.9375,5.7936 -12.9375,12.9375 0,7.1452 5.7936,12.9375 12.9375,12.9375 7.1451,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1439 -5.7924,-12.9375 -12.9375,-12.9375 z M 2069.9062,902.5 c 0.9579,0.016 2.1743,0.49395 3.7813,1.28125 12.31,6.0454 21.2602,34.26075 14.8437,46.84375 -6.7555,13.2484 -21.9446,-12.2531 -21.8124,-36.625 0.043,-7.9706 0.5633,-11.17975 2.7812,-11.46875 0.1262,-0.015 0.2696,-0.0344 0.4062,-0.0312 z m -544.5312,1.8125 c 0.261,-0.011 0.5237,-0.01 0.7812,0 11.1322,0.2736 19.2254,15.662 8.75,23.5625 -4.5854,3.4585 -11.6397,4.0038 -15.9687,1.25 -8.5324,-5.4256 -8.0687,-18.6338 0.8125,-23.25 1.8994,-0.987 3.7998,-1.4882 5.625,-1.5625 z m 123,1.59375 c 4.0029,0 7.25,3.2484 7.25,7.25 0,4.0029 -3.2471,7.25 -7.25,7.25 -4.0016,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0016 3.2484,-7.25 7.25,-7.25 z m -76,2.4375 c 6.0939,9.06553 30.7717,32.99603 34.1875,35.0625 -10.9038,-3.52828 -22.1257,-2.03225 -33.3437,-0.53125 1.2642,-8.2837 2.6001,-21.87475 -0.8438,-34.53125 z m 396.5938,2.0625 c 167.2848,39.1555 269.4033,216.66435 229.0312,383.18755 0,0 -14.0849,-7.8627 -16.3125,-11.625 5.9167,-28.8149 9.5619,-74.4501 2.1563,-120.3438 -12.5616,-77.8435 -75.661,-192.0704 -213.9063,-231.25 -1.5284,-5.0343 -0.9687,-19.96875 -0.9687,-19.96875 z m 90.141,1.21967 c 1.8922,11.38731 3.7146,22.86182 6.5196,33.108 -11.7835,-8.46573 -25.1336,-15.74222 -38.7999,-21.61964 9.7603,-2.05238 18.674,-3.78006 32.2803,-11.48836 z m 48.234,3.65533 c 6.6569,-0.1721 13.4299,4.57425 13.2812,12.78125 -0.063,3.6121 -3.9171,10.0997 -6.9062,11.625 -11.1179,5.6731 -22.5272,-5.1313 -17.625,-16.6875 2.1987,-5.1835 6.6951,-7.59975 11.25,-7.71875 z m -420.2813,4.40625 c 11.2265,0 20.3437,9.0849 20.3437,20.3125 0,11.2276 -9.1173,20.34375 -20.3437,20.34375 -11.2277,0 -20.3437,-9.11615 -20.3437,-20.34375 0,-11.2276 9.116,-20.3125 20.3437,-20.3125 z m 0,7.375 c -7.1452,0 -12.9375,5.7923 -12.9375,12.9375 0,7.1452 5.7923,12.9375 12.9375,12.9375 7.1439,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1452 -5.7936,-12.9375 -12.9375,-12.9375 z M 1340.9062,929 c 83.119,49.0581 157.6824,153.3883 163.2188,271.375 L 1484,1187.2188 c -8.6671,-79.468 -49.3506,-165.9352 -143.75,-236.81255 0,0 0.2429,-7.63095 0.6562,-21.40625 z m 460.2813,0 107.4375,0 0,23.15625 32.2188,-16.59375 0,51.21875 -32.2188,-19.5 0,22.34375 -107.4375,0 0,-23.5 -32.9063,15.90625 0.375,-50.96875 32.5313,18.28125 z m -114.125,3.75 c 4.0016,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2484,7.25 -7.25,7.25 -4.003,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.247,-7.25 7.25,-7.25 z m 42.25,4.0625 c 0.1321,-0.01 0.2733,0 0.4063,0 l 1.2812,7.375 c -0.2099,-0.01 -0.4122,-0.0312 -0.625,-0.0312 -7.1449,0 -12.9375,5.7922 -12.9375,12.9375 0,7.1449 5.7926,12.9375 12.9375,12.9375 1.7271,0 3.369,-0.3237 4.875,-0.9375 l 1.25,7.40625 c -1.9377,0.6138 -3.985,0.9375 -6.125,0.9375 -11.2273,0 -20.3438,-9.11645 -20.3438,-20.34375 0,-10.8769 8.539,-19.73775 19.2813,-20.2813 z M 1972,939.375 c 0.3555,-0.0145 0.7062,0 1.0625,0 11.2272,0 20.3437,9.0849 20.3437,20.3125 0,9.6421 -6.74,17.69005 -15.75,19.78125 l -1.2187,-7.3125 c 5.5025,-1.488 9.5625,-6.49515 9.5625,-12.46875 0,-7.1452 -5.7927,-12.9375 -12.9375,-12.9375 -0.2908,0 -0.5894,0.0132 -0.875,0.0312 l -1.25,-7.3125 c 0.3467,-0.036 0.707,-0.0793 1.0625,-0.0937 z m 142.6562,6.875 c 25.0868,0.136 35.5,14.53905 14.9376,20.65625 -9.5251,2.8346 -21.9929,1.3311 -34.3126,-4.125 -10.2706,-4.5468 3.873,-16.61535 19.375,-16.53125 z m -524.4062,1.375 c 6.0698,-0.022 11.9443,0.91225 16.2812,2.96875 10.4848,4.9697 10.2467,8.3444 -0.9687,14.8125 -15.6378,9.0197 -52.4704,-0.1107 -41.3437,-10.25 5.2299,-4.7641 15.9167,-7.49545 26.0312,-7.53125 z m 140.125,2.21875 c 0.5562,0 1.1049,0.0691 1.625,0.1875 l 2.25,13.1875 c -1.1221,0.7128 -2.4474,1.125 -3.875,1.125 -4.0026,0 -7.25,-3.2474 -7.25,-7.25 0,-4.003 3.2474,-7.25 7.25,-7.25 z m 242.75,2.59375 c 3.973,0.035 7.1875,3.2688 7.1875,7.25 0,3.1572 -2.0263,5.8181 -4.8437,6.8125 z m 44.25,5.1875 c 11.2276,0 20.3438,9.0849 20.3438,20.3125 0,11.2276 -9.1161,20.34375 -20.3438,20.34375 -11.2265,0 -20.3438,-9.11615 -20.3438,-20.34375 0,-11.2276 9.1172,-20.3125 20.3438,-20.3125 z m -396.0312,5.125 c 1.2055,-0.067 2.5723,0.4931 4.0312,1.6875 12.1902,9.9685 18.2664,31.0624 13.4688,46.75 -4.577,14.9658 -23.5821,-11.6133 -23.4688,-32.8125 0.053,-9.7772 2.3516,-15.4246 5.9688,-15.625 z m 526.7187,1.78125 c 1.6798,0.014 3.4613,1.29295 5.2187,4.21875 7.5724,12.6053 7.2279,38.6418 -0.625,46.75 -4.4554,4.6004 -6.1104,3.7311 -10.75,-5.6562 -7.9287,-16.0461 -1.9456,-45.37645 6.1563,-45.31255 z M 2017.375,965 c -7.1441,0 -12.9375,5.7923 -12.9375,12.9375 0,7.1452 5.7934,12.9375 12.9375,12.9375 7.1452,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1452 -5.7923,-12.9375 -12.9375,-12.9375 z m -379.875,3.46875 c 15.3587,9.6944 31.0805,18.54115 47.4375,25.90625 -15.3057,-3.62 -26.6155,1.5205 -38.2813,8.4375 2.2378,-12.7973 -2.1231,-23.20195 -9.1562,-34.34375 z m 461.5615,2.73836 c 11.4497,1.61665 22.7844,3.4922 36.0626,0.99464 -2.4531,11.25574 -3.3128,22.72391 -2.2311,34.45095 -9.8778,-12.78398 -20.8942,-24.77971 -33.8315,-35.44559 z m -81.6865,-0.51961 c 4.0029,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2471,7.25 -7.25,7.25 -4.0018,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2482,-7.25 7.25,-7.25 z m -419.4375,5 c 2.2624,0.043 4.6632,0.68255 7.1563,1.90625 9.4117,4.6177 9.6891,16.0333 0.5312,22 -11.5132,7.50055 -26.5254,-5.66335 -19.3438,-16.96875 2.7579,-4.3415 6.4548,-6.67485 10.6876,-6.90625 0.3173,-0.018 0.6452,-0.0382 0.9687,-0.0312 z m 460.25,8.5 c 11.2266,0 20.3437,9.0849 20.3437,20.3125 0,11.2276 -9.117,20.3438 -20.3437,20.3438 -11.2276,0 -20.3437,-9.1162 -20.3437,-20.3438 0,-11.2276 9.116,-20.3125 20.3437,-20.3125 z m 119,3.40625 c 1.9584,-0.038 4.0016,0.40515 6.0313,1.46875 7.2331,3.7904 8.7499,13.392 3,19 -6.3681,6.2107 -15.0583,5.1402 -19.3438,-2.375 -4.8883,-8.5754 1.8187,-17.93205 10.3125,-18.09375 z m -196.2187,3 C 2081.0986,1024.6755 2148.157,1136.0715 2132,1243.3125 L 2119.5,1231.5 c 9.5194,-60.7724 -23.8579,-176.8927 -135.375,-224.5625 z m 77.2187,0.96875 c -7.1452,0 -12.9375,5.7923 -12.9375,12.9375 0,7.1452 5.7923,12.9375 12.9375,12.9375 7.1442,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1452 -5.7933,-12.9375 -12.9375,-12.9375 z m 0,5.6875 c 4.0019,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2481,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2471,-7.25 7.25,-7.25 z m -380.7187,1.28125 c 5.1086,0.45 13.7293,-0.47055 15.75,4.34375 2.2746,6.0921 -10.2165,16.6213 -26.0626,18.6875 -6.4518,0.3837 -20.2741,2.024 -23.1874,-2.625 -2.7319,-5.8004 15.9195,-20.22925 33.5,-20.40625 z m -317.875,3.56255 c 13.5351,-0.5967 28.7918,17.5112 15.0937,32.2812 -10.9645,11.3471 -33.4063,26.8125 -33.4063,26.8125 l 0,-9.9375 c 0,0 21.9846,-16.082 22.3438,-23.3125 0.046,-8.4027 -6.873,-13.1432 -14.5938,-8.0937 -1.5272,0.997 -7.5624,5.9062 -7.5624,5.9062 l 0.5,-16.6562 c 4.0914,-4.4808 11.3147,-6.722 17.625,-7 z m 345.7812,4.25 c 10.0349,0.3831 33.3021,36.2532 27.375,43.5937 -4.6945,5.8162 -23.5907,-7.0775 -30.6875,-20.9375 -3.8099,-7.4391 -2.6649,-20.6992 1.9375,-22.4375 0.4246,-0.1603 0.8832,-0.2377 1.375,-0.2187 z m 154.75,4.3437 c 0,0 1.034,83.4642 -3.6562,91.3437 -18.808,34.0444 -59.4111,16.3273 -62.875,-9.1874 -2.4953,-15.3874 -1,-82 -1,-82 z m 5.9375,0 64.875,0 c 0,0 -0.2903,117.4805 -2.9063,124.2187 -2.1288,5.4854 -11.5512,14.9451 -17.4687,17.5313 -19.0535,8.3248 -39.4251,-3.4839 -44.4687,-25.7813 -3.6373,-16.0776 -0.031,-115.9687 -0.031,-115.9687 z m 70.3125,0 43.0625,0 c 0,0 1.4781,6.2283 3.1875,11.3437 2.9855,8.9285 13.1408,34.5302 14.3125,36.0938 5.2594,7.0214 5.5182,83.8166 0.3125,92.5625 -18.9941,28.4794 -50.6029,20.1925 -62.1562,-11.3437 -2.8959,-10.1065 1.2812,-128.6563 1.2812,-128.6563 z m 50.2188,2.9063 c 77.2321,36.6842 136.3395,114.4667 128.9374,214.2812 l -14.1874,-14.1562 c 5.1747,-68.8905 -47.2656,-155.0011 -108.4688,-180.5938 z m 106.3437,2.3437 c 11.2267,0 20.3437,9.0849 20.3437,20.3125 0,11.2276 -9.1169,20.3438 -20.3437,20.3438 -11.2276,0 -20.3437,-9.1162 -20.3437,-20.3438 0,-11.2276 9.116,-20.3125 20.3437,-20.3125 z M 2169.125,1018 c 7.5548,0.1106 16.7859,2.7192 23.6875,8.4062 8.2491,6.8011 9.3978,12.1831 3,14.1563 -12.363,3.812 -27.21,0.122 -36.5313,-9.0625 -8.6594,-8.5325 -1.196,-13.6617 9.8438,-13.5 z m -76.1875,5.3125 c -7.1452,0 -12.9375,5.7923 -12.9375,12.9375 0,7.1452 5.7923,12.9375 12.9375,12.9375 7.1443,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1452 -5.7932,-12.9375 -12.9375,-12.9375 z M 1686,1024.9375 c 10.8354,0.059 15.8074,15.3113 7.5,23.0313 -3.4061,3.1649 -12.7047,3.8446 -16.75,1.2187 -11.1267,-7.2238 -4.608,-24.3252 9.25,-24.25 z m 143.2188,3.875 c -3.5851,10.3128 -9.3527,21.9484 -14.125,29.9063 -12.7886,21.3242 -11.127,35.622 2.375,42.8437 19.8251,10.6038 34.2272,-17.8634 14.6874,-29.0313 -6.8547,-3.9158 -6.8537,-3.9638 -4.375,-14.5312 3.0929,-13.1852 3.6342,-28.9113 1.4376,-29.1875 z M 2092.9375,1029 c 4.002,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.248,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2471,-7.25 7.25,-7.25 z m -194.1875,4.1875 c -0.9064,-0.06 -0.2126,5.2443 -0.2812,14.6563 -0.1112,15.1936 -1.3817,19.8165 -11.0938,40.1874 -12.4011,26.0172 -10.7492,43.797 4.625,49.5626 11.9414,4.4757 23.5512,-4.6562 23.625,-18.5938 0.036,-6.6359 -2.9253,-11.8419 -7.4688,-13.1875 -4.1126,-0.2624 -8.6636,-2.1834 -8.3437,-4.1563 2.5184,-15.5355 15.9796,-44.7987 -1.0625,-68.4687 z m 256.5625,2.0937 c 10.0399,6.3159 20.3661,12.3074 35.3125,13.0626 -6.3682,15.2666 -5.7199,26.4227 -6.7812,38.5937 -6.391,-16.3931 -16.2635,-34.5291 -28.5313,-51.6563 z m -766,2.375 c 0.8064,-0.01 1.6119,0.044 2.4063,0.1563 9.5975,1.4926 17.7059,13.7831 15.125,22.9375 -2.2532,7.9911 -2.9544,9.3398 -33.8438,29.9688 -17.1412,11.4467 -18.9375,11.9374 -18.9375,11.9374 l -9.1875,-6.1874 c 0,0 7.7777,-5.1898 20.0938,-13.4688 23.702,-15.9329 27.1879,-19.726 24.75,-26.8438 -2.6503,-7.7355 -11.5154,-6.109 -25.5313,4.6876 -20.7455,15.9766 -22.9063,17.0312 -22.9063,17.0312 l 0,-9.5312 c 0,0 9.0948,-7.2362 13.0313,-10.625 9.6187,-6.8356 22.9042,-19.9376 35,-20.0626 z m 613.7813,4.1563 c 2.3297,-0.024 4.121,2.1472 3.3124,4.2187 -0.3871,0.9932 -1.752,1.6349 -3.5624,1.625 -3.721,-0.018 -3.9191,-5.3058 -0.2188,-5.8124 0.1594,-0.022 0.3135,-0.03 0.4688,-0.031 z m 208.2815,11.0873 c 4.3842,15.0414 -5.0483,40.1104 -10.8235,43.3171 -6.1514,6.0868 -10.0013,0.2786 -11.333,-15.4669 0.034,-12.774 14.6602,-52.6937 22.1565,-27.8502 z m -246.9691,-8.431 c 1.8841,21.6644 2.5652,39.6562 -7.5935,57.25 -13.1727,22.8139 -9.7548,42.3738 4.3437,46.6874 14.0422,4.2983 26.4542,-5.7497 23.9688,-19.4062 -0.7592,-4.1811 -6.4998,-11.0095 -10,-11.9062 -4.3187,-1.1093 -4.832,-3.7883 -2.375,-12.375 4.7639,-16.6403 3.1628,-37.7121 -4.0312,-52.9376 -0.6619,-2.2733 -3.3007,-7.3936 -4.3126,-7.3124 z m 47.25,7.2187 c 11.8444,0.064 17.432,15.4645 8.5626,23.5937 -4.9408,4.5294 -8.0831,2.4743 -13.25,-8.625 -4.7938,-10.2954 -3.315,-15.012 4.6874,-14.9687 z m 110.3126,3.1563 c 11.2274,0 20.3437,9.0858 20.3437,20.3124 0,11.2276 -9.1163,20.3438 -20.3437,20.3438 -11.2276,0 -20.3438,-9.1162 -20.3438,-20.3438 0,-11.2266 9.1162,-20.3124 20.3438,-20.3124 z m 0,7.375 c -7.1452,0 -12.9376,5.7932 -12.9376,12.9374 0,7.1452 5.7924,12.9376 12.9376,12.9376 7.1449,0 12.9374,-5.7924 12.9374,-12.9376 0,-7.1442 -5.7925,-12.9374 -12.9374,-12.9374 z m 0,5.6874 c 4.0026,0 7.25,3.2481 7.25,7.25 0,4.0029 -3.2474,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0019 3.2471,-7.25 7.25,-7.25 z m -87.2813,5.3438 c 1.6602,-0.069 3.2777,0.2104 4.7813,0.9375 10.7162,5.1818 9.5444,20.0175 -2.2813,28.875 -7.4848,5.6052 -10.6476,3.6637 -17.625,-10.8125 -3.7861,-7.8529 6.1506,-18.6253 15.125,-19 z m -621.125,1.6875 c 1.0923,0.029 2.1129,0.2008 3.0937,0.4687 11.0485,3.0394 18.0441,15.9275 15.2813,25.7188 -6.0927,15.0982 -26.7173,20.1807 -42.375,26.5 l -8.125,-5.9375 c 0,0 11.479,-6.5212 22.625,-11.6563 10.437,-4.8073 12.1233,-6.7191 11.3437,-12.7812 -1.5227,-11.8414 -7.2437,-11.414 -33.1874,2.5625 -10.5554,5.6864 -18.3126,10.7187 -18.3126,10.7187 l -5.75,-4.7187 c 8.5856,-5.6545 13.7418,-8.7809 23.125,-15.1875 15.666,-10.7263 24.6039,-15.3395 31.1563,-15.6562 0.3776,-0.019 0.7609,-0.041 1.125,-0.031 z m 825.1652,8.7696 c 3.7781,11.4799 -3.9231,21.5443 -15.5284,17.0342 -6.2986,-2.4478 -10.7647,-10.4999 -6.8555,-17.9601 5.218,-8.1839 19.8518,-6.7681 22.3839,0.9259 z m -232.8527,-3.9883 18.2812,32.8437 c 0,0 0.2399,9.1385 0.4063,14.2187 0.6986,21.3241 5.2622,28.3797 17.75,26.3126 0.8929,-0.1478 5.3437,-1.4376 5.3437,-1.4376 l 7.9376,13.375 c 0,0 -8.5832,3.7509 -10.8126,4.2188 -14.705,3.086 -35.0561,-7.957 -38.2187,-22.7188 -3.0622,-14.284 -0.6875,-66.8124 -0.6875,-66.8124 z m -598.875,13.5 c 5.5184,0.4033 3.1735,4.6193 0.625,6 -10.7383,5.4683 -20.884,11.4164 -32.0938,17.875 l -7.5,-4.6563 c 0,0 5.7871,-3.2317 9.7813,-5.6875 12.2835,-7.5522 24.7936,-13.3539 29.1875,-13.5312 z m 734.6875,4.2187 c 11.2269,0 20.3437,9.0849 20.3437,20.3125 0,11.2276 -9.1167,20.3438 -20.3437,20.3438 -11.2276,0 -20.3437,-9.1162 -20.3437,-20.3438 0,-11.2276 9.116,-20.3125 20.3437,-20.3125 z m -86.0625,2.7813 c 4.6804,-0.135 8.5865,1.8764 11.125,6.0937 5.4312,9.017 -0.3228,20.0328 -13.5,25.9063 -7.3602,3.2795 -8.5885,2.6013 -16.4375,-9.0313 -5.3068,-7.8632 -5.2735,-9.2734 0.5937,-14.2813 6.5766,-5.6111 12.9161,-8.5364 18.2188,-8.6874 z M 1341.6562,1102 1633,1290.6562 l -8.3125,14.125 -282.4687,-184.9062 z m 865.6876,2.4375 c 17.7023,0.3388 40.8109,20.8396 32.625,28.9375 -0.869,0.8596 -2.5524,1.508 -3.75,1.4375 -25.2737,-1.4915 -53.1726,-30.8401 -28.875,-30.375 z m -65.6563,0.375 c -7.1452,0 -12.9375,5.7923 -12.9375,12.9375 0,7.1452 5.7923,12.9375 12.9375,12.9375 7.1445,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1452 -5.793,-12.9375 -12.9375,-12.9375 z m -389.0937,3.5937 7.7187,20.0626 -145,230.8437 -14.25,-9.1563 z m 389.0937,2.0938 c 4.0022,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2478,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2471,-7.25 7.25,-7.25 z m 53.25,2.4062 c 7.1,13.202 18.9259,21.2916 32.375,26.9688 -12.6975,10.4789 -19.0899,24.0698 -18.5937,38.2812 -3.219,-21.3326 -6.007,-42.5507 -13.7813,-65.25 z m -766.5313,6.9688 c 3.1074,0.023 5.9125,0.6716 8.125,2.1875 27.1741,18.6173 2.2205,37.0368 -0.094,35.5937 l -9.25,-5.8437 c 3.1811,-5.2734 10.4024,-12.4251 -1.2187,-19.0937 -6.5934,-2.8747 -13.9403,0.5795 -20.3438,5.0312 l -9.7188,-6.6562 c 0,0 19.0348,-11.3181 32.5,-11.2188 z m 640.8126,10.5312 c 1.0229,-0.032 2.0251,0.03 3,0.2188 15.3381,2.9636 14.275,19.2401 -1.75,26.7812 -9.1173,4.2916 -10.7287,3.4189 -18.6876,-10.25 -3.7366,-6.4157 7.5476,-16.4248 17.4376,-16.75 z M 1423.5,1136.375 c 1.6326,0.043 3.7208,1.4726 3.9688,2.8125 0.7889,4.272 -7.125,8.5625 -7.125,8.5625 l -9.0938,-6.0312 c 3.8836,-2.1423 7.9475,-5.0416 12.25,-5.3438 z m 817.1562,3.9062 c 2.2215,-0.1721 3.8475,0.875 4.5,3.5313 3.1071,12.6436 -10.9404,36.0981 -23.9062,39.9063 -7.5702,2.222 -9.7611,-1.3373 -7.2812,-11.8126 3.4844,-14.7172 18.7536,-31.0032 26.6874,-31.625 z m -469.9374,0.9688 23.5937,17.125 -141.5625,223.75 -24.5,-14.5625 z m 385.2187,1.8125 c 11.227,0 20.3437,9.0849 20.3437,20.3125 0,11.2276 -9.1166,20.3438 -20.3437,20.3438 -11.2276,0 -20.3437,-9.1162 -20.3437,-20.3438 0,-11.2276 9.116,-20.3125 20.3437,-20.3125 z m 0,7.375 c -7.1452,0 -12.9375,5.7923 -12.9375,12.9375 0,7.1452 5.7923,12.9375 12.9375,12.9375 7.1446,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1452 -5.7929,-12.9375 -12.9375,-12.9375 z m 0,5.6875 c 4.0023,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2477,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2471,-7.25 7.25,-7.25 z m -325.2813,0.75 c 15.3558,17.3202 32.6197,56.0515 92.875,37.7812 20.5273,16.7257 48.8755,26.2463 83.8126,7.6876 l 0.25,104.375 -267.5313,0.2812 z m -488.625,2.6562 263.4688,173.4063 -8.25,14.5625 -255.4688,-163.2812 z m 739.6563,0.1563 c 0.2496,0 0.4676,0.016 0.6563,0.062 13.4683,3.2955 14.9861,16.757 2.4687,21.9062 -6.6998,2.7569 -8.0724,2.0722 -14.4687,-7.3437 -2.5515,-3.7559 -3.9926,-6.87 -3.625,-7.8125 0.8981,-2.3038 11.1983,-6.8598 14.9687,-6.8125 z m 169.0625,14.25 c 4.7098,0.032 9.3956,2.5252 11.5938,7.4375 3.2991,7.3727 1.3939,13.5614 -5.4063,17.6562 -11.2587,6.7811 -23.8438,-5.6703 -18,-17.8124 2.347,-4.8813 7.1045,-7.3135 11.8125,-7.2813 z m -164.9688,14.1563 c 6.2126,0.032 11.4269,5.9625 8.4063,9.5624 -2.0047,2.389 -4.5797,1.7028 -7.875,-2.0937 -3.87,-4.4562 -4.096,-7.4881 -0.5313,-7.4687 z m 75.5313,2.5937 c 11.2271,0 20.3437,9.0849 20.3437,20.3125 0,11.2276 -9.1165,20.3438 -20.3437,20.3438 -11.2276,0 -20.3437,-9.1162 -20.3437,-20.3438 0,-11.2276 9.116,-20.3125 20.3437,-20.3125 z m 57.3125,1.125 c 15.3328,0.083 36.577,25.6963 32.9688,39.75 -1.1772,4.5848 -9.7771,2.1093 -20,-5.75 -13.8114,-10.6178 -22.7528,-34.0531 -12.9688,-34 z m -57.3125,6.25 c -7.1452,0 -12.9375,5.7923 -12.9375,12.9375 0,7.1452 5.7923,12.9375 12.9375,12.9375 7.1447,0 12.9375,-5.7923 12.9375,-12.9375 0,-7.1452 -5.7928,-12.9375 -12.9375,-12.9375 z m 49.2813,2.625 c 4.2345,12.4007 8.5698,25.3152 27.6874,34.2813 -29.6683,13.8207 -35.3261,37.0962 -30.875,66.9374 l -6.9374,-4.25 c 6.3566,-26.7359 11.1701,-57.1886 10.125,-96.9687 z m -49.2813,3.0625 c 4.0024,0 7.25,3.2471 7.25,7.25 0,4.0029 -3.2476,7.25 -7.25,7.25 -4.0029,0 -7.25,-3.2471 -7.25,-7.25 0,-4.0029 3.2471,-7.25 7.25,-7.25 z m -3.7813,32.6562 c 11.2276,0 20.3438,9.0849 20.3438,20.3126 0,7.0965 -3.6405,13.3593 -9.1562,17 l -6.5626,-4.9063 c 4.8566,-1.8634 8.3126,-6.5819 8.3126,-12.0937 0,-7.1453 -5.7925,-12.9376 -12.9376,-12.9376 -6.8045,0 -12.3589,5.2651 -12.875,11.9376 l -6.5937,-4.9376 c 2.5476,-8.3192 10.3119,-14.375 19.4687,-14.375 z m 92.5626,2.5938 c 9.6791,0.053 -5.3701,26.8993 -19.1876,34.2188 -10.5213,5.5715 -20.1525,6.0072 -20.125,0.9062 0.072,-13.3469 24.5304,-35.2052 39.3126,-35.125 z m -92.5626,10.4688 c 4.0028,0 7.25,3.247 7.25,7.25 0,4.0022 -3.2472,7.25 -7.25,7.25 -3.9758,-0.434 -7.2046,-3.5596 -7.25,-7.25 0,-4.003 3.2473,-7.25 7.25,-7.25 z m 89.4376,24.4687 c 4.7654,0.07 9.4906,2.1318 11.5,6.1563 2.5978,5.2014 1.6059,9.8517 -3.1563,14.5624 -11.6993,11.5731 -27.617,-0.3106 -19.9687,-14.9062 2.0773,-3.9645 6.8594,-5.8824 11.625,-5.8125 z m -37.4063,10.9063 c 16.2951,0.5073 28.628,20.7816 25.6875,32.25 -2.5847,3.038 -20.5329,-10.5762 -22.4688,-11.9688 -2.2935,-4.0622 -2.4301,-10.6335 -3.2187,-20.2812 z m -22.2187,12.5624 51.0624,30.6876 -50.9374,32.7187 z m -454.6876,15.1876 274.2813,1 0.031,11.5312 -281.8126,0.1562 7.5,-12.6874 z m -11.1874,18.0312 18.4374,0 0,22.4688 -25.3124,0 0,-12.4063 z m 263.5624,0.5312 22.1876,0 0,22.4688 -22.1876,0 z m -217.7187,0.1563 25.25,0 0,22.4687 -25.25,0 z m 52.5313,0.1875 27.2812,0 0,22.4688 -27.2812,0 z m 55.8124,0 26.25,0 0,22.4688 -26.25,0 z m 56.0626,0.375 25,0 0,22.4688 -25,0 z m -228.375,27.6875 304.2187,0.7187 0,13.4688 -312.9063,-0.7188 z m 259.5624,28.375 c 30.9728,-0.3425 49.0209,34.2266 24.8126,58.5 -22.2535,22.3131 -59.3767,-6.1835 -40.8438,-31.2813 10.3494,-14.0122 35.7888,-2.7206 29.4375,12.2188 -4.1812,9.8321 -17.8888,5.2478 -17.4687,-5.4062 0.023,-4.2803 -3.1364,-1.3538 -3.5,3.1874 -0.4615,5.7639 5.4551,12.141 12.3437,12.1563 17.9748,0.041 20.6672,-23.7827 3.3437,-32.5313 -15.4759,-7.8137 -31.7708,2.1559 -35.5312,21.9376 -0.409,2.1591 -2.9587,7.559 -4.9062,11.375 -5.7229,11.4897 -7.5715,18.1261 -10.4376,31.25 -1.3178,1.6391 -5.3323,4.26 -8.125,5.6562 -8.8289,4.414 -8.4621,2.5527 -5.1562,-11.8125 9.5195,-41.3733 25.0782,-68.0211 44.0938,-73.4375 4.139,-1.179 8.1339,-1.7704 11.9374,-1.8125 z m 91.5938,2.1563 c 19.1232,-0.4113 33.5254,15.3453 36.0376,27.5122 10.9879,37.0307 -38.1713,59.7113 -55.305,26.1611 -9.5732,-19.1784 10.2556,-42.0591 28.4236,-33.1421 14.873,7.2998 13.9132,29.987 -1.2812,29.9065 -8.2491,0.3881 -13.2708,-7.0247 -8.7188,-12.969 2.3609,-2.3427 5.1902,-0.5118 6.375,-4.4375 0.4966,-1.6452 -1.84,-2.9555 -7.4687,-1.8125 -9.3263,1.8933 -8.3784,20.6934 2.4375,24.4375 16.1122,5.5766 29.8885,-11.414 22.2188,-28.2188 -9.2218,-20.2031 -34.178,-20.2901 -45.5938,0.8438 -1.6574,3.0716 -4.2543,7.4609 -5.6875,9.4062 -17.028,23.1064 -18.3685,26.5651 -23.4375,39.4376 -0.5032,1.2827 -1.3978,2.2361 -2.9375,2.0624 -4.6917,0 -9.2923,1.0173 -12.4375,2.25 -2.1221,-0.5622 0.7012,-8.6657 0.9062,-9.2812 11.6009,-35.8141 41.3926,-71.2851 66.4688,-72.1562 z m -148.1875,10.0624 c -4.0377,7.0344 -16.1816,29.8887 -24.5937,63.6563 -2.2175,-1.3793 -8.1852,-3.8672 -12.5,-5.375 -1.634,-0.571 -0.3054,-2.4584 -0.4063,-5.3125 3.0637,-15.2322 12.9043,-41.8497 23.75,-55.4062 2.304,-1.6925 17.1041,-2.2259 13.75,2.4374 z m 17.3437,6.75 c -10.3875,13.2626 -21.236,48.5031 -23.5,66.6876 -0.342,2.7462 -0.8391,5.789 -1.125,6.75 -1.6186,5.4381 -11.7982,-6.2413 -11.75,-13.4688 0.082,-12.2772 13.6883,-49.6812 23.4063,-63.9688 3.3866,-4.9797 3.792,-5.8041 11.0316,-6.0627 11.6297,-0.2911 6.5189,4.2128 1.9371,10.0627 z m -507.9687,-8.75 c -2.5654,0.062 -5.1165,0.3971 -7.625,1 -15.0447,3.7301 -32.9769,19.6757 -34.7187,36.5938 -0.8253,0.5096 -2.8764,12.3427 -1.5626,18.3438 4.9722,22.705 18.22,38.1056 34.4376,60.625 0,0 -20.3674,31.5749 -34.3438,46.1562 l 33.0625,47.8438 c -9.1453,18.0565 -25.0419,31.7182 -29.0313,54 -6.2364,29.3374 9.126,57.9274 41.8126,60.5624 24.3895,0.7327 40.3776,-15.7482 43.4062,-40.7187 1.2337,-16.5966 -5.5958,-37.4146 -30.1562,-70.3125 -1.2162,-1.6291 -3.5938,-5 -3.5938,-5 0,0 2.7599,-3.2372 4.2188,-5.4062 8.633,-11.6854 31.1562,-40.25 31.1562,-40.25 L 1429.0938,1514 c 0,0 1.4595,-3.1996 4.0624,-6.75 27.4693,-37.4648 32.5865,-56.5119 27.7188,-75.125 -1.9166,-7.3357 -6.4779,-12.9774 -12.6562,-19.25 -9.9874,-10.1394 -21.4167,-14.9846 -32.5313,-14.7188 z m -0.7813,4.5938 c 10.7349,-0.1558 21.8074,4.1434 30.7813,13.5312 20.6394,21.5979 18.8121,39.8659 -8,79.8126 -5.8855,8.7663 -11.6563,18.4062 -11.6563,18.4062 l 33.8438,46.75 c 0,0 -5.4851,8.2062 -11.1875,14.9062 -15.4733,18.1802 -24.125,31.25 -24.125,31.25 5.8613,9.001 15.3908,18.62 21.375,29.4376 7.2279,12.2537 11.5316,24.4712 12.8125,35.6562 2.6975,23.5221 -12.5932,48.5798 -38.75,49.1875 -25.3847,0.1766 -44.7106,-20.9768 -44.1562,-47.5313 0.247,-11.8402 5.1396,-22.7781 11.0937,-33.4374 6.085,-10.8471 20.3437,-31.9376 20.3437,-31.9376 l -32.75,-47.75 34.6876,-46.3124 c 0,0 -25.2278,-30.8887 -32.9688,-53.1563 -6.2896,-25.2863 5.4965,-39.7018 7.0625,-41.9063 7.6872,-10.8223 19.4277,-16.7297 31.5937,-16.9062 z m 730.1876,2.625 c 19.4812,22.1997 30.0112,53.9585 34.5312,81.25 1.8259,11.2059 2.1551,30.332 0.5625,32.4062 -3.065,3.9913 -9.9993,1.8378 -9.5625,-2.9687 3.5117,-38.4889 -37.9156,-66.0555 -73.7812,-49.375 -27.662,12.8652 -42.4436,42.7722 -35.5313,79.9687 13.0357,70.1481 71.8774,121.5503 111.6875,191.9063 14.0947,23.8312 17.4365,37.2455 17.3438,36.7813 0,0 5.2174,-13.9227 17.0624,-33.7188 28.3777,-52.1058 66.9029,-85.7161 95.5626,-137.8438 13.4509,-24.4705 22.0055,-48.6707 23.4374,-70.5312 0.2711,-50.8743 -49.3918,-89.2229 -88.1874,-62.5 -15.3569,9.4364 -28.3316,27.6654 -30.375,42.6875 -0.8728,6.4162 -2.0005,8.3281 -4.875,8.3125 -6.6207,-0.036 -6.7115,-2.5429 -1.375,-32.7188 8.0929,-29.9763 17.7649,-58.4107 35.3437,-83.6562 z m -751.6475,64.4608 c 5.0325,13.1183 13.2269,22.8834 22.5,32.2042 8.5961,-10.0481 18.1899,-23.2665 23.4528,-35.8762 25.3475,-60.731 -72.5585,-65.682 -45.9528,3.672 z m 22.1287,26.2335 c -12.4228,-14.4508 -21.198,-26.4658 -22.0444,-45.5267 -1.3649,-37.7564 47.986,-33.5158 45.534,0.2394 -2.7476,18.3784 -12.4012,30.0002 -23.4896,45.2873 z m 611.675,-59.3505 c 0.9502,5.3151 6.1315,14.315 5.6875,16.4374 -2.4009,5.5747 -5.9041,8.3515 -10.7813,17.5313 -1.0239,1.9567 -0.5464,2.3595 -3.2812,1.875 -2.5706,-0.3634 -7.0891,-1.7778 -9.5,-2.4687 -1.3773,-0.3998 -2.9636,-1.1509 -2.3125,-2.9063 4.6817,-10.7636 9.9254,-23.5971 20.1875,-30.4687 z m -81.8125,16.25 -5.8063,15.0561 c -0.5514,1.6218 -0.6093,1.8868 -2.3126,1.5312 -3.308,-0.4183 -6.2068,-0.6765 -9.5061,-0.4311 -7.1998,-0.8831 6.3606,-27.7928 8.4001,-31.8688 2.9455,0.4965 7.3004,11.9892 9.2249,15.7126 z m 5.4687,3.4687 c 0.122,-0.016 0.2507,-0.01 0.375,0 2.9564,0.382 7.3553,1.9783 10.625,3.4063 1.8014,0.7431 1.8577,0.7929 1.0626,3.0312 -1.6648,3.316 -3.7089,12.8733 -5.9063,16.213 -0.067,0.4865 -10.2607,-6.057 -13.1628,-7.319 -0.1128,-1.8167 3.226,-14.8219 7.0065,-15.3315 z m 86.4688,1.7813 c 3.3705,0.1168 7.5329,3.1822 9.8125,4.9374 1.0702,2.1179 0.094,4.2442 -3.6563,10.7188 -3.3181,5.7264 -6.7828,11.9102 -7.625,11.25 -2.5198,-1.9754 -7.1907,-4.5362 -9.5,-7.7188 -1.7215,-2.3726 1.5536,-8.4326 3.7813,-11.75 3.5137,-5.235 5.2049,-7.124 7.1875,-7.4374 z m -54.9998,-0.7629 c 3.1201,0.6986 -1.8245,16.7579 -2.7502,18.7629 -2.9482,4.4124 -7.5363,10.222 -11.1875,12.5624 -1.8643,1.1954 -7.5985,-2.2322 -7.4687,-6.25 0.092,-2.8529 5.553,-17.2435 7.3688,-21.0628 0.2662,-0.5592 10.5428,-3.9511 14.0376,-4.0125 z m -127.219,6.1379 c 0.6989,-0.022 1.3971,-0.01 2.0938,0.031 12.2511,-0.3566 24.8472,5.6865 32.7812,19.1875 3.752,6.3847 3.7995,6.6604 2.9376,12.625 -2.0264,14.0199 -1.3221,23.4397 2.375,32.0313 4.2107,9.7835 3.5778,13.1416 -6.7188,34.9062 -10.334,21.9118 -22.8739,48.6012 -32.4062,73.3438 -4.2282,10.6009 -8.106,22.6068 -10.5313,32.4374 -1.5949,6.1815 -9.1387,4.3232 -16.6563,4.0313 -3.8192,0.8355 5.5138,-24.883 19.3438,-55.625 11.0712,-24.6064 26.1297,-52.3245 32.1376,-79.8624 4.8973,-22.4477 3.3295,-31.6784 0.6436,-41.1063 -10.3658,-27.4314 -46.4306,-20.7075 -46.3437,4.5624 0.7739,16.3689 19.7129,25.1435 26.6563,9.0938 1.157,-7.378 -2.484,-3.084 -5.5313,0.5 -6.5333,7.6794 -17.7303,-0.8587 -15.9687,-12.1875 2.3138,-14.8796 21.5239,-19.7715 30.8124,-8 10.1729,12.8921 7.9405,26.1828 -6.75,36.1563 -15.1327,11.1161 -28.9139,4.796 -36.4687,-6.75 -16.1362,-25.9283 5.9303,-54.7022 27.5937,-55.375 z m 74.8438,10.875 c 15.0225,0.3085 31.3307,12.8989 33.97,22.8665 1.4138,6.7631 -0.7611,14.726 1.655,21.2585 2.0119,5.2366 3.946,8.253 2.5,12.9062 -12.3627,39.7836 -41.5485,82.214 -55.9688,129.3125 -1.6639,3.2797 -3.186,3.6904 -6.9062,4.75 -5.7634,1.6421 -8.0166,1.4712 -8.625,-1.5313 -0.58,-2.8689 1.3518,-8.3041 4.7188,-18.5 4.0336,-12.2126 12.9528,-33.134 18.1874,-42.9687 12.1936,-22.9083 18.9875,-38.5805 27.8438,-58.1563 1.6556,-3.6567 2.1211,-5.8266 4.7188,-11.0937 11.1609,-22.6301 -1.4472,-44.9371 -24.5626,-45.0625 -18.313,-0.099 -26.5019,28.5842 -10.4687,36.9688 15.6816,8.1997 27.3816,-13.3425 13.4375,-20.9688 -3.3651,-1.8414 -4.2289,-0.083 -1.5312,3.1562 6.2083,7.4602 0.6372,17.4923 -8,13.5 -13.375,-6.1799 -6.485,-28.9715 9.125,-27.6562 24.0987,2.0305 27.2336,37.0859 2.6562,45.9688 -33.7903,12.2113 -51.5165,-42.1903 -19.7188,-60.5 5.2751,-3.0379 11.1489,-4.3513 16.9688,-4.25 z m 71.1875,1.0937 c 8.8921,-0.2229 18.2332,2.9442 25.9063,10.3125 18.8984,18.1478 13.8629,46.1513 -18.0626,100.3125 -10.4558,18.1515 -20.6553,39.9494 -26.2187,55.875 -1.3825,3.9699 -2.5439,5.9837 -5.6875,7.719 -5.5366,3.0551 -11.8124,3.4333 -12.625,1.281 -2.0762,-5.5041 13.7426,-39.718 41.9062,-93.4687 7.4035,-14.3242 16.7557,-30.954 16.2813,-48 -1.8571,-13.5346 -13.1128,-23.2713 -28.1875,-18.8438 -10.1438,2.9798 -14.2896,17.289 -6.8125,24.5 3.121,3.0117 6.9611,4.5913 9.4375,4.3438 4.6733,0.1503 9.9839,-4.4698 0.9375,-4.9688 -9.5652,-0.052 -12.8284,-12.0745 -4.75,-17.5 11.6108,-7.7992 24.938,1.393 24,16.5625 -1.9405,30.5035 -46.4778,25.9518 -47.6563,-5.4687 -0.7292,-19.4413 14.5521,-32.2308 31.5313,-32.6563 z m 441.5313,13.1875 c 11.0391,7.8161 18.9832,22.0796 20.8437,35.7188 0.5886,4.2178 1.1339,8.5066 -0.6875,9.4687 -2.2341,1.181 -3.8055,-0.5556 -8.4062,-6.625 -10.7193,-14.1405 -31.924,-8.1126 -39.0313,11.2813 -6.7693,18.4652 0.2342,39.2103 28.6875,80.4687 10.2298,15.2626 19.2238,27.9177 27.6875,42.875 5.9972,-14.8836 16.1631,-30.8983 24.8437,-44.125 32.5073,-49.2266 38.462,-74.8038 20.7813,-91.2813 -11.3636,-10.3468 -29.3495,-10.6681 -35.4375,2.5626 -4.1436,5.4433 -6.6064,8.0703 -8.3438,4.7812 -0.7574,-1.4341 -0.6726,-5.7856 -0.1874,-9 3.0844,-15.6314 8.1789,-25.8709 19.4374,-36.125 z m -567.375,35.6562 c 6.7311,-0.5167 -4.8519,35.7489 -25.0938,76.4376 -11.0435,22.5334 -19.4101,46.7473 -28,70.3124 -2.3296,3.1523 -16.2771,3.73 -16.25,0.4688 24.7499,-79.2956 42.2315,-92.9504 50.6875,-123.1562 1.4774,-5.2171 2.5488,-12.7569 2.75,-13.4063 6.2526,-1.7969 11.5248,-9.2872 15.9063,-10.6563 z m -458.125,5.3438 -26.2188,34.1875 25.5938,36.3125 26.5937,-34.7188 z m 567.75,10.5625 c -0.022,4.0963 -7.8791,23.8075 -13.75,35.6563 -25.6823,51.8291 -32.0653,65.8067 -36.5,79.625 -0.8005,2.4923 -2.0984,4.1439 -3.7188,4.75 -3.1963,1.1941 -12.1003,2.9053 -12.8438,1.6874 5.4302,-30.2936 47.0008,-99.2112 55.0626,-129.4062 3.2357,-0.1436 11.4801,4.7685 11.75,7.6875 z m 20.5624,-3.1563 c 1.7373,-0.1268 2.4358,0.5857 1.9376,2.9063 -0.8065,3.7553 -5.288,12.5971 -13.0938,27.9375 -21.634,42.5201 -32.9785,67.7096 -36.5938,80.6562 -0.8467,3.0331 -1.3669,5.4143 -2.8145,6.186 -2.9745,1.5856 -13.3764,5.7787 -13.8729,1.2516 3.2505,-19.2187 15.9139,-31.7259 48.6562,-111.875 1.5311,-2.6332 2.8713,-3.9195 4.3125,-4.1563 4.026,-0.6615 7.5156,-2.5764 11.4687,-2.9063 z m -88.7517,13.1636 c -0.8238,4.9459 -6.4973,15.3152 -15.8733,34.4614 -15.5982,31.8559 -25.695,55.5934 -31.8124,76.6563 -0.9936,3.4207 -2.3561,7.0156 -3.6876,7.9375 -2.5334,1.7542 -13.9062,1.2188 -13.9062,1.2188 -1.7242,-8.7096 11.9965,-41.1887 27.2812,-75.3438 8.3132,-18.5763 17.9508,-37.0892 24.4179,-53.7544 4.4322,0.6606 12.9689,4.9144 13.5804,8.8242 z m 23.1471,-8.2064 c 4.6271,-0.046 1.0353,7.7315 -10.0516,29.6366 -8.991,17.7729 -23.3316,42.7012 -32.5938,71.3438 -2.4181,6.31 -5.2604,14.1491 -6.3124,17.4374 -1.3585,4.2482 -2.6267,6.3459 -4.375,7.2188 -3.3406,1.6678 -11.423,1.5728 -12.8438,-0.1562 -2.2565,-2.7513 9.7135,-34.9897 21.375,-59.75 10.2945,-20.8091 17.5432,-37.5154 26.4375,-56.75 2.434,-3.8215 2.5384,-4.0851 5.0109,-4.5792 5.142,-0.4099 10.4651,-3.851 13.3532,-4.4012 z m -522.2704,4.1366 13.5,18.0625 -15.8437,19.7187 -13.1875,-19.1874 z m -2.0312,77.9062 c 0,0 -5.7344,6.6053 -11.625,17.0626 -17.2478,28.7165 -17.7204,49.9131 2.625,62.5 8.5856,4.3726 19.7776,3.4147 26.8438,-2.75 23.0422,-20.1034 5.9136,-47.7118 -8.9688,-66.4376 -3.9486,-5.4981 -8.875,-10.375 -8.875,-10.375 z m 0.8438,7.3438 c 8.6383,10.1926 14.9621,17.845 20.7187,30.6562 6.6218,17.2083 2.3765,30.7378 -10.4375,37.0938 -20.2515,10.046 -38.6734,-12.5136 -29.0625,-36.5938 7.1213,-17.8451 18.7813,-31.1562 18.7813,-31.1562 z m 567.0937,34 c 1.898,3.62 -192.749,48.6446 -336.3437,10 l -87.375,126.4375 504.4374,-0.875 z m -7.375,8.9688 c 0,0 46.8887,81.1609 69.9063,120.9062 l -32.3438,0 -46.0938,-98.6875 c -24.6576,6.8744 -48.9672,11.8451 -73.625,14.9687 l 16.4063,83.7188 -24.2187,0 -13.6876,-80 c -35.3332,2.7258 -71.3153,3.7631 -108.0624,2.7188 l -15.8438,77.2812 -25.3438,0 16.25,-76.75 c -27.893,-3.7633 -55.6593,-7.3105 -84,-11.9688 L 1608,1795.375 l -35.7812,0 74.5937,-111.3438 c 111.3573,22.3461 214.0505,17.0892 329.375,-9.5624 z m 503.875,18.5937 c -22.0363,0.074 -45.3024,11.9122 -51.9063,37.3125 -2.3201,8.0682 -2.3258,8.087 -2.4062,79.9688 -0.064,59.4263 -0.5625,73.75 -0.5625,73.75 l -20.3125,0 0,23.7371 66.125,0 0,-23.7371 -21.9375,0 c 0,0 -0.308,-73.9263 -0.3125,-120.5313 -0.9073,-12.0837 0.1942,-22.7225 3.4062,-30.125 11.6948,-26.9505 52.8541,-21.0491 57.8126,1.9375 2.9559,13.7036 1.2988,17.2928 1.5,29.125 l 22.9062,0 c 0,0 0.6091,-20.8012 -1.625,-32.9375 -3.014,-27.0887 -26.3779,-39.141 -50.5625,-38.4687 -0.7077,-0.022 -1.4142,-0.034 -2.125,-0.031 z m -521.5,24.9687 36.5625,77.3438 -69.25,0 -12.75,-69 z m -296.4687,5.625 60.5312,7.8438 -15.625,63.875 -81.75,0 z m 197.625,9.5313 8.3124,62.1875 -104.3124,0 11.5937,-60.9688 z\"\r\n               id=\"path4033\"\r\n               inkscape:connector-curvature=\"0\"\r\n               sodipodi:nodetypes=\"cccscscccccsccccccccccccccccccccccccccccccccccccccccccccsccccccscscscccccccsssscccccsccccccccscccccccccccsccccscccccccccsccccccccccccscccccccsccscccccscccsccccccscsccccccccccccccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscscscccccccccccccccccccccccccccccccccccccccccscccccccccccccccccccssscccccscsccccccccccccccsscccccscscccsccccccsccccccccscccccccsccccccsscscccccccccccsccccccccccccccccscsscsccccccccccccccccccscccccccccccccccccccccccccccccccsccccccccscsscccccscscccccccccccccscccccsccccccccccccccscccccsccccccccccccccsccccscccccccccccccccccccccccccccccccccccccccccccccccccccscccscccccccccccccccccscccsccccccccccscscccssccsscsccsscscccccccccccccccscssssscssccsccssssssscssccccccccccccccccccccccsccssssssscssccscssssscsccccccccccccccccccccccccccccccccsccccccsccccccsccccccscccccccsccsscccccccssccscssscsccccscccssssscsccscscccccscccccccccccccccccccccccccscccscsccsscccsssssscssscsccscccssssscccccccccccccccccccccccssccsscsccsssccsssssssccsscssscccsscccsccssccscssscccccccccccccscssccccccccscccccccscccsssssscsssccccccscccccccccccscssscccsssccsscccssccsscccsccccscccsccscscscsscsscccscccsccsscscscccccscsscssscscscscscscsccccccscscsssssscscscccccccccccccccccccccccccccccccccccccccscscssscsssccssccsscccccsscccscsssccccccccccccccccccccccccccccscccccccsccccsccssssssssssssssscscsccccccsccccccccccccsccscccsccccccsccscscsscccccsccssccssssscscscscccsccsscccccccccccccccccccccccccccccscscssssssssssscsscccccccccccccccccccccscccsccscssscsscscscscscccsssssscscssscscsccscccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccsccccccsccccccccccccccsscccccccccscsccccccccsccccccccsccccscccccccccccscsccssccccccscsccsccssccccccccccccccccccccccccccccccccccccccscccccccsccccsscccccscsccccccscccccscccscccccccccccccsscccccccccccccccccccccccccccccccccccccsccsccccccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\"\r\n               transform=\"matrix(0.99986346,-0.01652454,0.01652454,0.99986346,-2934.8522,-683.42696)\" />\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </g>\r\n  <g\r\n     inkscape:groupmode=\"layer\"\r\n     inkscape:label=\"Printing Marks\"\r\n     id=\"printing-marks\"\r\n     transform=\"translate(-259.93524,-369.77796)\">\r\n    <g\r\n       id=\"CropMarks\"\r\n       inkscape:label=\"CropMarks\" />\r\n  </g>\r\n</svg>\r\n", "<svg\r\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n   xmlns:cc=\"http://creativecommons.org/ns#\"\r\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n   xmlns=\"http://www.w3.org/2000/svg\"\r\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n   \r\n   width=\"__width__\" \r\n                                                    height=\"__height__\" \r\n                                                    viewBox=\"0 0 224.21875 312.8125\"\r\n   id=\"svg4423\"\r\n   version=\"1.1\"\r\n   inkscape:version=\"0.48.4 r9939\"\r\n   sodipodi:docname=\"QS.svg\">\r\n  <title\r\n     id=\"title3002\">Vectorized Playing Cards 1.0</title>\r\n  <sodipodi:namedview\r\n     id=\"base\"\r\n     pagecolor=\"#ffffff\"\r\n     bordercolor=\"#666666\"\r\n     borderopacity=\"1.0\"\r\n     inkscape:pageopacity=\"0.0\"\r\n     inkscape:pageshadow=\"2\"\r\n     inkscape:zoom=\"1\"\r\n     inkscape:cx=\"169.40526\"\r\n     inkscape:cy=\"142.35457\"\r\n     inkscape:document-units=\"px\"\r\n     inkscape:current-layer=\"CropMarks\"\r\n     showgrid=\"false\"\r\n     inkscape:snap-global=\"false\"\r\n     inkscape:snap-bbox=\"true\"\r\n     inkscape:snap-page=\"true\"\r\n     inkscape:window-width=\"1920\"\r\n     inkscape:window-height=\"1018\"\r\n     inkscape:window-x=\"-8\"\r\n     inkscape:window-y=\"-8\"\r\n     inkscape:window-maximized=\"1\" />\r\n  <defs\r\n     id=\"defs4425\" />\r\n  <metadata\r\n     id=\"metadata4428\">\r\n    <rdf:RDF>\r\n      <cc:Work\r\n         rdf:about=\"\">\r\n        <dc:format>image/svg+xml</dc:format>\r\n        <dc:type\r\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n        <dc:title>Vectorized Playing Cards 1.0</dc:title>\r\n        <dc:date>4/24/2011</dc:date>\r\n        <dc:creator>\r\n          <cc:Agent>\r\n            <dc:title>Chris Aguilar</dc:title>\r\n          </cc:Agent>\r\n        </dc:creator>\r\n        <dc:rights>\r\n          <cc:Agent>\r\n            <dc:title>LGPL 3.0</dc:title>\r\n          </cc:Agent>\r\n        </dc:rights>\r\n      </cc:Work>\r\n    </rdf:RDF>\r\n  </metadata>\r\n  <g\r\n     id=\"layer1\"\r\n     inkscape:groupmode=\"layer\"\r\n     inkscape:label=\"QS\"\r\n     transform=\"translate(-259.9347,-369.77719)\">\r\n    <g\r\n       transform=\"translate(-512.47115,-1384.075)\"\r\n       id=\"g3952\"\r\n       style=\"display:inline\">\r\n      <g\r\n         style=\"display:inline\"\r\n         id=\"g4646\"\r\n         transform=\"translate(-1317.9825,1164.3989)\">\r\n        <rect\r\n           y=\"589.95166\"\r\n           x=\"2090.8867\"\r\n           height=\"311.81104\"\r\n           width=\"223.22835\"\r\n           id=\"rect6369-0\"\r\n           style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n           rx=\"10.629921\"\r\n           ry=\"10.629921\" />\r\n      </g>\r\n      <g\r\n         style=\"display:inline\"\r\n         id=\"g4371\"\r\n         transform=\"matrix(0.15386615,0.00170829,-0.00170829,0.15386615,610.08566,1850.3974)\">\r\n        <g\r\n           transform=\"translate(3352.9594,67.402835)\"\r\n           id=\"g4067\">\r\n          <g\r\n             id=\"g4378\"\r\n             transform=\"translate(-509.04064,9.6924595)\">\r\n            <path\r\n               style=\"fill:#e2cf00;fill-opacity:1\"\r\n               d=\"m -1108.5648,1129.1422 147.7813,-277.02335 c -0.0178,0.0651 36.6675,13.59011 79.50618,24.20161 -39.80893,107.27337 2.45458,247.72654 2.45458,247.72654 0,0 -229.85966,4.8664 -229.74206,5.0952 z m -419.764,-465.96121 c -9.8813,-116.92783 -11.4105,-229.98144 6.8217,-323.85329 0.3404,-1.50417 -54.2477,-32.23006 -48.6756,-35.88876 8.5288,-5.60017 114.7694,-62.49077 114.7694,-62.49077 0,0 7.2642,4.02515 13.4868,3.32221 4.8565,-0.5486 9.3631,-5.01682 7.4232,-9.71699 -4.5872,-11.11441 -12.8653,-38.80243 -8.3936,-66.81632 2.569,-16.09359 11.082,-33.8738 19.9958,-44.79853 19.8711,-24.353951 65.9807,-12.11245 79.3443,-12.6631 8.4844,-0.3496 33.1361,-90.330559 -7.8951,-106.5201991 -11.3054,-4.46073999 -36.458,57.0551021 -18.3537,70.5987001 2.7226,2.036724 -36.3237,-20.026668 -66.1928,-33.11697 -2.7674,-1.212839 -15.0078,-10.42106 -17.8761,-22.72226 -3.5779,-15.3447001 45.0445,-45.490413 35.2398,-62.725491 -14.2827,-25.10671 -50.8667,-62.48449 -66.2334,-51.942999 -14.4848,13.377966 -49.0887,40.769372 -48.6507,59.246063 11.2693,33.0078109 39.0096,35.0059215 53.9214,66.186707 3.7055,6.73427 30.8064,34.90583 30.8064,34.90583 -9.8858,15.482614 6.6841,42.165519 7.3969,38.048779 l -127.4987,-53.863938 c 0,0 31.5131,218.483038 1.1585,251.208018 -3.2117,3.46254 27.0786,-8.88562 27.6162,-7.02067 9.3764,11.59596 112.5751,75.60175 142.1682,98.68975 51.2845,-73.21342 69.9539,-105.38029 136.3744,-170.56879 14.5989,-12.33897 47.2035,-34.94526 65.6916,-61.87507 14.855,-21.63765 20.8448,-45.88772 17.9255,-64.627685 -3.775,-24.23298 -6.1191,-40.819791 -21.3175,-59.996474 -35.1113,-44.301958 -90.648,-86.31599 -89.6853,-87.103876 l 18.6453,-15.509535 c 0,0 68.5323,55.383831 97.7481,96.354491 19.6836,27.60315 11.3463,59.598997 28.1144,65.122117 4.0337,1.32864 31.4453,-1.263557 40.4745,0.364133 1.0932,0.19707 201.32543,138.178659 165.39448,146.664669 -49.74227,11.7479 -129.34328,5.32727 -129.34328,5.32727 -57.3868,-54.77069 -84.9933,-72.68641 -118.6357,-54.94968 0,0 -84.9092,75.93437 -133.7413,135.19246 -27.8295,33.77123 -50.9097,75.903 -69.4773,103.04666 -7.1532,10.45702 -99.1703,-75.9954 -98.1331,-65.51723 14.5859,95.05444 23.5703,209.66074 13.9622,287.53227 -6.4494,66.13002 -15.498,137.17671 -19.2137,198.13933 0,0 15.2319,-4.60607 26.9275,-0.59793 6.3201,2.16593 10.9648,7.9509 11.5842,14.42985 3.7214,28.96201 -33.7043,22.64729 -34.6017,20.14505 0.042,-0.0253 21.3433,44.50557 21.3433,44.50557 0,0 -31.7313,56.14559 -30.8614,53.70929 0.5386,-1.5084 -29.953,-49.19684 -29.953,-49.19684 0,0 22.2813,-40.38646 25.0483,-48.77476 1.6599,-5.032 -32.6136,16.96737 -35.6256,-14.31555 -3.0364,-31.53692 37.418,-23.52599 35.6487,-19.62205 -5.5835,-64.67659 -17.1907,-131.48248 -24.6725,-185.94346 z m 488.0521,140.22252 c 0.8862,-0.68014 -86.2422,-33.84778 -165.8953,-29.7457 -28.1966,-10.61458 -74.1148,-21.54213 -104.4541,-0.83339 -34.627,-22.88216 -64.5856,-48.16368 -95.016,-73.20274 8.4414,-0.20221 37.8102,-203.91034 57.7092,-274.98596 -10.2049,-87.89628 74.607,-88.7741 82.7535,-18.37112 92.4151,93.4181 205.3683,189.85242 321.74881,284.67535 -17.92298,38.23308 -83.81421,67.96669 -96.84611,112.46356 z M -847.42831,178.67446 C -952.77227,73.675911 -1172.8767,-113.67842 -1172.8767,-113.67842 l 100.942,-100.69179 c 53.7431,15.36208 108.93861,28.08666 171.1753,28.02439 0.24657,0.24115 68.54028,30.1454 104.40262,-1.24109 l 95.02678,73.5638 c 0,0 -36.78884,205.839352 -58.93401,277.78491 0.80335,28.39198 -9.56265,63.09762 -37.56506,68.54663 -23.91257,4.65317 -42.71704,-29.10052 -49.59924,-53.63397 z m 207.80528,-248.244454 c 10.12455,-66.894576 11.824,-115.525646 18.50025,-193.512316 -46.83171,14.27714 -46.89788,-49.02858 -0.56264,-32.89221 l -21.91621,-46.88513 31.08903,-53.42891 29.64038,50.08269 -24.54528,44.96202 c 52.07941,1.98072 40.05608,50.4123 -4.89434,39.25139 9.28025,74.53514 28.72593,149.71854 28.64295,223.50719 17.42111,118.150588 -16.67673,283.19825 -10.68464,287.03585 l 51.14373,34.3299 -5.81456,257.5357 -80.5427,-34.22091 -23.67681,16.34748 c 7.82538,15.06566 17.72733,29.48313 21.19987,45.90749 0,0 55.7049,44.76697 48.20088,58.9955 3.58013,2.04563 -38.6299,59.19005 -51.21839,57.91734 -24.03439,-2.4299 -52.44815,-33.07064 -60.37491,-55.03682 -7.01668,-22.09982 49.074,-44.45995 41.78803,-60.60411 -8.71541,-19.31149 -30.27585,-28.40537 -49.3612,-33.89948 -26.31068,-7.57407 -38.53898,-28.18985 -39.74263,-28.17649 0,0 -9.27582,82.39568 -19.16138,75.92601 -39.76576,-26.02494 -13.70366,-110.28566 -6.35461,-108.02771 0,0 17.28194,3.76763 37.66736,5.45513 71.83382,6.71612 65.99591,-81.39794 51.61711,-123.91976 -3.60069,-10.08809 1.85092,-10.22466 1.46608,-10.3521 -3.34435,-1.1075 11.60129,-0.44011 24.2314,-4.3136 34.72679,-10.65025 87.71237,-46.66829 87.71237,-46.66829 -56.42336,-30.4635 -106.31978,-65.38621 -151.10325,-98.52576 0,0 -40.44557,70.76986 -88.76772,120.08324 -35.17714,35.89873 -40.82988,48.05073 -99.85669,94.4296 -1.14594,0.90039 -44.52277,53.91692 -22.90976,115.01856 18.49574,52.28886 105.22094,108.15337 104.63099,111.95275 l -16.76998,16.37059 c 0.69471,0.93327 -122.71778,-74.63175 -120.78141,-157.40346 -0.17093,-3.1248 -55.74499,-3.5855 -55.74499,-3.5855 l -163.1559,-147.79246 136.7966,-2.10586 70.87778,56.55373 43.91423,1.79032 c 2.89567,2.48948 4.33083,-11.6388 42.66442,-40.88347 73.24017,-55.87487 163.17735,-198.26739 163.17735,-198.26739 0,0 97.5172,66.93866 97.61452,66.94902 -5.97427,-102.09067 -23.67141,-211.750175 -14.63533,-299.899764 z m -357.652,-478.804216 c 0,0 -98.44937,189.86322 -152.59607,279.38749 l -78.3521,-21.51847 c 31.7651,-87.16726 -1.4077,-252.26345 -9.6879,-256.33924 z\"\r\n               id=\"path4075\"\r\n               inkscape:connector-curvature=\"0\"\r\n               sodipodi:nodetypes=\"cccccccscscssssssssccccccssccsssccssssccsscccscccccsscccccccccccccccccscccccccccccccccccscsscscccssccsssccccccccscccccccc\" />\r\n            <path\r\n               sodipodi:nodetypes=\"ccccccssscccccccccccccscscccccccccccccccccccccccsccsscssccsssssssscsscccccccsccccscccsssccccsccsssscccscccscscsssscsscscccccccsccccsccscccsccsccscssccccccccccccccccccccccccccssccccccccccccccccscccccccccccsccccccccccccccccccccscccccccsccscccccccccccccccccccccccsssccsccccccccssccccccccccccccccccccccccccsccccccscccccccccscccccccccccccccscccscccccccccccccccccccscccccccccsccscccsccscccccccccccccccscccccccccccccccsssscscsccccssscccscscsccccccccccsccccccscccccccccccccccccsccccsccsccssccssccccsscssscssscssscccssscscscsccsssccssccscscscscssscssscccssscscscccccccccscccscccccssccssccsccscccccccscccccscccscscccscscscscccccsccssccssccssccccsscssscssscssccccsscssscssscssscccssssccccssssssssscssscscscssssccscscssssscscscscscccscscscscccccsccssccssccssscccssscsssccsscccsccccccccccccccccccccccccccccccscccsccccccccscccccccsccccscsccscccccccccccccccccccccccccccccccccccccccccccccccccccccsccccccccccccccccccccccccccccc\"\r\n               style=\"fill:#131f67;fill-opacity:1\"\r\n               d=\"m 5852.8125,-282.6875 5.9347,1699.8168 1055.4582,-0.6784 -3.0358,-1699.1384 z M 6586.375,949.12501 c 50.0704,-46.50712 99.5983,-84.89637 145.9037,-112.79854 17.9589,-10.8214 23.4088,-12.40531 30.4641,-5.98726 11.505,10.46569 18.6713,19.56987 14.9134,26.89741 -0.8475,1.65253 -3.5567,4.39557 -3.5567,4.39557 l -27.662,-10.51917 8.9623,31.37264 c -24.8909,10.13059 -24.4409,37.04864 -0.4221,51.31543 l -16.5285,38.02205 38.4244,-16.9048 c 1.4707,8.28821 28.871,28.3256 45.9145,0.007 l 34.6985,16.92733 -11.9577,-42.47094 c 11.394,-10.85176 18.0339,-28.19484 0.1185,-44.17638 l 8.2479,-33.27108 -31.336,10.19458 c -7.8513,-10.7303 -12.4116,-9.99286 -14.2155,-12.91904 -0.5359,-3.99726 -0.6346,-13.31257 -5.8438,-21.89732 -4.3086,-7.10056 -9.2371,-14.63863 -13.8438,-19.91964 -2.4436,-4.13102 -0.4914,-4.47957 12.0224,-11.24554 5.8792,-3.17877 10.7366,-6.39347 10.7366,-6.39347 0,0 61.6688,30.92609 86.8259,42.70283 l 1.4285,569.54333 -338.2678,-0.9867 c -38.0409,-113.5237 -10.7114,-211.6431 -0.6314,-252.9437 -17.7352,-1.478 -109.217,-31.103 -111.959,-41.2968 36.2414,-57.558 85.425,-109.85997 137.5636,-157.64779 z m -658.2169,165.70559 c -44.1209,-14.2451 -44.5669,38.8725 -22.0275,42.9889 5.8466,1.0678 11.9514,1.9432 21.0882,-1.0068 2.2688,0.4701 -26.4274,44.5313 -26.4274,44.5313 0,0 22.9786,41.7228 33.9846,59.4526 l 34.7405,-61.6216 -22.7129,-42.6487 c 35.5649,18.1203 53.9791,-35.8409 16.6339,-42.9011 -9.0222,-1.229 -18.9911,3.2838 -18.9911,3.2838 l 19.634,-184.59182 c 15.8317,10.75442 44.7098,32.32143 44.7098,32.32143 6.5739,101.69729 1.7564,186.45239 58.6269,334.41309 L 6068,1402 l -195.2465,0 -0.7576,-537.49397 34.1694,24.44487 c 0.7276,3.03603 -5.4468,1.00616 -2.1166,38.41074 3.0085,33.79065 13.2967,92.38526 24.1094,187.46896 z m 701.0425,-1381.73376 c 1.5579,2.20668 1.4423,5.58315 2.7861,10.05941 7.9032,26.32813 35.3735,57.94172 57.2678,66.24554 7.6659,2.90741 10.6432,7.3255 6.2143,11.75446 -5.5928,5.59252 -28.6694,-9.70195 -45.7055,-29.53571 -15.471,-18.01171 -25.7889,-32.91574 -28.0738,-44.22582 -1.3562,-6.71317 -2.0352,-11.02778 -1.0333,-14.51972 2.8315,-3.91799 6.3457,-2.83029 8.5444,0.22184 z M 6656.5,-269.75 c 2.8945,-0.0125 6.787,3.39499 9.125,9.59375 5.6221,14.90594 14.4341,26.0494 28.2188,35.6875 3.655,2.55552 5.1084,6.38582 3.25,8.625 -0.6879,0.82891 -1.5864,1.23665 -2.5989,1.51938 -10.7465,3.00094 -39.0492,-29.73761 -41.3036,-50.06205 -0.4896,-4.41361 1.0574,-5.35386 3.3087,-5.36358 z m 35.2188,0.40625 c 5.7163,-0.0252 8.4577,11.90027 5.146,18.14657 -2.1581,1.97064 -6.8999,-1.06816 -11.1085,-8.89911 -3.6163,-6.72899 -2.1679,-9.21156 5.9625,-9.24746 z m -19.1563,0.1875 c 1.2811,-0.04 3.9281,-0.71763 5.2697,1.14262 2.2042,12.32327 11.4985,21.2464 18.9145,28.38559 1.2455,2.33752 1.827,7.22877 -0.8976,8.50123 -6.4973,2.87729 -26.0576,-19.35561 -26.1929,-32.21694 -0.041,-3.87131 1.1427,-5.75746 2.9063,-5.8125 z m -24.8214,7.8125 c 6.8558,22.49858 23.4641,40.85004 38.3324,50.37373 10.6284,6.76607 14.7318,10.61042 9.8015,14.06377 -1.2224,0.85618 -2.4599,1.51217 -2.75,1.46875 -24.8917,-9.50239 -55.4877,-45.54226 -56.5173,-71.0511 5.4214,-6.94292 10.2059,0.83242 11.1334,5.14485 z m -86.1473,97.65625 c -13.0916,0.0173 -29.1231,2.99759 -42.1415,8.90498 -18.117,8.22088 -22.6584,13.6831 -20.0173,15.66387 1.9005,1.393 13.565,-3.60849 19.4113,-4.36866 31.5442,-7.80634 53.2506,-9.7234 73.8099,-0.76269 15.8947,6.92766 15.9903,3.74784 5.3189,-7.7876 -7.7369,-8.36319 -21.5444,-11.66948 -36.3813,-11.6499 z m 111.195,17.29013 c 10.4387,-0.10538 21.0962,2.33498 24.8826,7.20044 2.9468,15.74941 -4.9172,8.54794 -11.252,5.41032 -9.1577,-4.2242 -19.646,-7.87376 -29.4362,-6.37091 -6.2925,0.96594 -6.468,0.64996 -2.902,-1.3699 5.3767,-3.26916 12.996,-4.78988 18.7076,-4.86995 z m -123.6524,6.13341 c -29.8374,2.31615 -40.1694,17.40177 -59.4316,32.96288 -7.9143,6.0175 -6.113,10.672981 3.5312,9.093752 11.904,-1.949272 16.7035,-1.482189 32.9388,4.061231 17.7255,6.052248 30.4305,8.559739 40.1715,4.817576 18.422,-7.077043 16.8402,-5.899016 -9.5,19.600888 -14.0937,11.317194 -8.4022,10.724367 5.8725,0.925286 10.5482,-8.425675 17.8029,-13.796499 20.0051,-18.414657 1.07,-2.244059 1.1646,-10.283588 3.1511,-10.282996 6.7003,0.002 3.2451,-8.35761 -2.8438,-11.90625 -4.001,-2.84902 -3.1079,-5.83029 2.0728,-11.30996 8.1303,-8.55185 5.3663,-12.41994 -3.4618,-7.09121 -1.5539,0.84336 -2.3208,-1.77002 -7.7098,-5.02031 -8.5255,-5.14199 -15.7099,-7.53645 -24.796,-7.43623 z m 21.5065,11.197 c 7.2113,6.06793 4.1256,7.74753 -11.6117,7.59821 -13.299,-0.12622 -24.6202,1.27048 -40.4195,6.50893 -17.9399,5.94814 -19.037,6.09972 -8.5,-2.87947 14.4947,-12.3517 43.9435,-24.74263 60.5312,-11.22767 z m 93.2009,-5.23919 c 7.2364,-0.15565 13.3444,0.87108 18.8565,3.90883 15.0314,8.28388 18.3754,15.46649 1.6435,9.61099 -10.4962,-3.67323 -24.6719,-3.15616 -34.4688,-0.44131 -10.119,2.80411 -11.8608,3.78738 -10.4911,-1.66973 1.6782,-6.68666 12.3991,-11.14936 24.4599,-11.40878 z m -118.1972,24.44257 c 3.5643,17.852201 17.105,12.019605 18.4459,1.23985 l 4.9438,0.0211 c -2.1008,14.335121 -21.6214,26.332472 -29.2065,-1.25889 1.6022,-0.0428 8.6885,0.44744 5.8168,-0.002 z m 108.0181,0.30171 3.6696,-0.11663 c 2.4215,13.686587 15.1415,18.163651 20.6727,1.04144 l 4.44,0.0926 c -3.3985,28.553714 -33.6197,14.645687 -28.7823,-1.01741 z m -118.3835,1.33419 c 2.4443,0.86243 3.5582,7.55638 3.1474,9.32143 -0.8516,3.658987 -12.8041,-0.236121 -15.3348,-3.8125 2.4954,-2.65404 8.3941,-6.84736 12.1874,-5.50893 z m 162.625,3.04018 -0.031,5 c -5.5202,1.322878 -7.8111,4.421771 -12.9688,3.40625 0.2924,-3.194953 -0.2478,-7.58515 2.75,-11.3125 3.7587,-1.98512 8.2343,0.44833 10.2498,2.90625 z m -120.4374,5.78125 c -2.5058,1.970964 -5.942,2.1875 -5.942,2.1875 -0.54,-4.78681 -1.3466,-10.17026 4.6203,-10.21429 3.9213,1.14335 3.6467,5.99563 1.3217,8.02679 z m 68.875,-7.9375 c 2.0978,0.14785 4.5568,5.36752 4.8437,8.40625 -0.6143,4.995725 -12.9044,3.00214 -12.9043,-1.96367 -2e-4,-2.09926 5.1368,-6.43654 8.0606,-6.44258 z m -112.5,189.0625 c -9.49,-4.745009 -81.4567,-48.473417 -99.8884,-125.803571 l -3.664,7.909535 c 7.8144,18.515823 19.3412,48.586612 19.3412,48.586612 -0.4821,-2.5911312 2.9417,20.144811 10.2736,58.744924 -3.8903,0.04444 -8.1908,-1.061157 -12.4164,-2.190038 -9.4922,-35.339959 -11.7382,-63.0427094 -19.7086,-97.622462 L 6424.3125,-19 c 0,0 10.0222,62.052631 16.8125,86.3125 -3.8822,-0.368091 -11.0312,-1.96875 -11.0312,-1.96875 -5.6565,-26.173579 -10.0277,-43.726535 -15.3527,-69.9700191 l -4.8973,6.3450191 c 7.0307,21.540752 9.7712,40.801314 13.3124,61.4375 -4.8293,-0.727409 -9.6859,-1.19107 -14.2863,-3.75 0,0 -7.2589,-37.64146 -8.2213,-38.191307 -2.767,2.787233 -3.9075,6.375 -3.9075,6.375 -0.2916,-0.337928 6.2972,20.865984 5.8265,29.597557 -4.6221,-0.760271 -12.6366,-3.070752 -18.2864,-4.96875 -2.9574,1.966862 -4.4992,5.242217 -6.7712,8.186231 2.7827,11.977912 167.894,37.905238 157.99,28.001269 -0.059,1.035096 72.8018,31.88789 113.4657,5.672278 0,0 70.7196,52.440762 98.3468,73.390232 0,2.38309 9.5699,13.49554 19.5313,20.5625 l 28,21.5625 c 8.1363,6.31792 11.3889,1.74313 12.625,-10.15625 1.3764,-13.25303 11.0065,-102.583124 13.2563,-121.625003 8.4045,-64.164719 8.3957,-63.483476 -1.3501,-60.53125 -14.9005,4.513674 -28.3125,-1.350701 -28.3125,-16.59375 0,-9.3250748 4.3139,-17.049236 14.25,-20.65625 2.8202,-0.964461 6.4965,-1.050029 10.7187,-0.96875 1.9251,0.347702 5.495,0.583826 5.875,0.65625 4.744,-0.267212 -18.375,-42.125 -18.375,-42.125 0,0 22.09,-39.365687 32.7188,-54.031247 l 28.5938,51.812497 -23.4139,45.702729 c 45.6029,-3.422918 41.1372,53.898927 -3.5038,34.705582 0,0 -0.2647,17.027873 -0.1761,15.779189 0.4311,-4.874629 0.3631,-9.036158 1.9063,-9.951352 43.2474,16.387394 52.0619,-46.679608 5.454,-43.772474 7.6703,-13.368851 16.2167,-27.190727 24.1861,-41.926079 l -33.6963,-61.421472 -38.0689,63.321377 19.1563,39.53125 c -4.3047,-1.118049 -7.7648,-0.438698 -12.375,0.03125 -28.2125,5.77908 -22.1487,51.178685 10.0937,44.9375 3.6862,-0.713549 9.2239,-3.5 9.2239,-3.5 l -20.8176,185.447813 c 0,0 -2.0525,1.66417 -10.4063,-4.35406 -9.6468,-6.95001 -29.854,-22.04867 -31.1428,-23.60136 7.2219,-118.559754 -22.4339,-243.298836 -56.2946,-321.39864 -2.1517,-5.99142 -0.875,-123.61485 -0.875,-123.61485 l 192.0044,0.50508 0.7143,546.26602 c -10.0427,-6.35545 -20.8971,-14.71857 -31.2187,-22 -3.0938,-2.50319 -5.0137,-5.47361 -3.6876,-10.25 -3.395,7.26283 -1.3446,10.37797 -1.3446,10.37797 l 42.3988,33.87227 -1.6821,537.60418 c 0,0 -68.4484,-35.2718 -110.5908,-52.29192 -19.0119,-7.757 -19.8616,-5.52232 -19.8616,-5.52232 0.061,-0.0347 13.4355,30.14851 9.6167,35.59484 9.0588,8.70689 24.2858,26.93293 25.0262,44.77123 8.1113,7.02038 10.3885,7.89497 16.4721,18.00428 l 25.4321,-9.19178 -5.7734,26.49365 c 27.0429,18.93813 1.0029,44.40599 -4.0058,42.05992 0,0 11.9321,25.60414 14.6562,37.25893 -4.2715,-0.29048 -25.6891,-11.90541 -31.6562,-14.65625 -15.519,30.54461 -41.7281,4.91031 -41.9376,0.40625 l -29.0718,12.94516 10.2931,-33.08924 c -18.7206,-11.38647 -31.3681,-28.60019 -1.0978,-47.13511 l -6.9909,-25.81329 24.8966,9.77792 c 0,0 4.6436,-7.45954 8.1763,-12.89973 -9.3129,-40.54508 -70.5397,-32.87658 -90.2055,-69.34375 0,0 -4.8311,45.52375 -9.7812,61.99554 -1.9325,43.5393 -32.4375,-0.504 -32.4375,-46.5625 0,-10.4013 13.0736,-45.39525 17.5,-47.09375 4.6026,-0.6392 48.3079,20.48739 77.6563,-0.5 13.362,-13.89874 36.4084,-52.99358 14.2679,-114.20089 -7.3262,-14.14416 13.9279,-15.93339 20.8288,-11.16042 0,0 63.872,-33.40503 92.7066,-49.49846 -48.3694,-26.57667 -148.9494,-97.28751 -148.882,-100.64372 -13.414,21.30119 -28.7878,39.16406 -50.3901,69.28474 -35.0226,41.23514 -62.3986,80.42426 -106.8438,113.375 -62.5053,45.50735 -77.1838,91.3135 -59.75,145.09375 7.0545,23.24048 21.2573,46.81256 44.5224,54.96875 11.8349,11.96451 59.3769,56.97581 59.3769,56.97581 -79.3711,72.26364 -133.8626,131.69823 -172.0779,197.37233 32.2563,16.964 110.0536,41.5313 110.0536,41.5313 -28.8953,96.0334 -15.7405,172.3134 3.2992,248.8839 0,0 -225.8273,0.291 -343.009,-3.3928 -1.0028,0.9877 -13.6842,0.3118 -13.8526,-0.4955 -0.4616,-8.5622 21.1062,-32.0993 27.5624,-28.8126 3.2468,-3.1941 10.1092,-4.8261 8.875,-8.75 -16.1659,-1.928 -40.699,26.0043 -41.6695,37.5626 l -9.6429,0 c -1.9757,-1.7248 17.5015,-47.1871 56.5312,-50.8126 -0.4079,1.6347 5.2382,-3.5337 1,-5.75 -45.4978,5.3926 -66.6866,55.8749 -65.3438,56.5626 l -7.0312,0 c 15.4706,-49.6457 55.752,-65.313 79.0625,-67.4688 0.2247,-0.097 7.5617,-2.6521 5.5937,-7 -51.52,8.9458 -77.2041,31.2424 -89.5886,74.4688 l -9.2864,0 c 6.7027,-43.8438 51.8034,-82.252 102.7813,-81 1.5969,-1.0118 3.5495,-2.2028 2.7187,-7.1876 -56.5746,6.3746 -84.7877,25.2515 -108.0312,73.8438 -20.79,-53.9632 -78.5675,-79.5657 -79.2565,-79.792 0,0 -1.3964,-15.1061 1.8307,-14.4817 49.292,17.8439 68.1119,-24.954 66.0508,-49.8201 -1.1469,-13.8371 -0.3712,-21.4607 -5,-41.4062 -4.1273,-17.7848 -7.18,-29.7688 -6.8527,-37.4904 0.3241,-7.6426 2.7191,-9.1882 8.3616,-11.7463 10.5687,-4.7913 17.1849,-22.133 14.8349,-24.2544 -5.4298,12.6149 -19.7797,14.7895 -26.3914,23.2675 -5.2786,6.9813 -2.9538,18.0976 6.4462,56.6949 5.7278,23.5188 -1.0631,12.7053 -14.4298,5.3412 l -8.9286,-5.0492 c 5.9867,6.1551 12.318,11.9547 18.4197,17.9867 5.4596,4.9908 2.4028,8.0791 -5.4287,5.1875 -11.2776,-5.628 -33.0102,-3.2714 -41.3386,3.815 -3.2468,2.312 -4.3974,2.0728 -5.2162,-0.061 -3.6446,-59.9445 2.6583,-96.8175 22.5136,-141.8629 12.8368,-30.6235 31.9452,-53.5532 57.4403,-55.1857 25.686,-2.1299 62.6157,6.8704 96.1584,29.6512 39.3933,26.7543 77.7828,67.4363 81.8615,117.3521 0.1579,0.5779 3.0297,-4.2673 4.3348,-6.8272 1.802,-5.9335 -4.7733,-23.7555 -15.0368,-44.416 -1.8946,-15.5376 -7.2406,-42.782 -11.442,-61.214 3.1946,-1.4539 10.0003,-0.6399 11.9126,1.6862 7.213,30.4712 12.3465,54.2021 18.5312,95.0312 0.088,3.9802 5.2036,-5.9091 5.2188,-8.5312 -0.8891,-6.0898 -17.9039,-85.9759 -17.5626,-84.1562 0.1003,-2.7161 16.1415,0.856 13.9376,3.375 0,0 12.1979,67.0126 13.0624,64.9374 l 4.125,-5.6874 c 0,0 -11.6419,-48.942 -10.1874,-58.375 0.9955,-1.443 10.0176,1.4791 12.875,3.0312 3.5921,4.8152 5.8899,22.2761 7.4062,34.1875 4.1488,3.168 4.9701,-5.9876 4.6562,-8.4063 -2.9891,-4.7415 -6.1534,-22.4334 -3.7812,-23.3437 1.8647,-0.7155 12.2047,3.389 14.1875,5.1563 2.3332,2.0794 11.3476,-10.3995 9.0571,-12.5588 -48.7741,-18.6841 -110.3105,-29.5846 -156.6151,-30.3207 -10.7634,0.045 -15.0326,-1.4733 -31.5357,-7.4331 -42.0275,-15.174 -76.7759,-0.058 -81.8711,4.7378 -51.3149,-35.6576 -108.601,-85.45558 -154.201,-117.22947 -2.1457,-1.41991 -7.2591,-2.26252 -7.8208,-2.26272 -7.2374,55.31705 -12.2909,119.31919 -18.4598,170.37049 -2.5084,20.2133 -2.8047,21.7898 -1.8795,22.3616 0.8031,0.4963 2.3852,-0.3106 3.0134,-0.6339 15.0084,-5.5284 28.5658,-1.929 35.75,11.625 3.6132,19.3854 -13.3418,32.1411 -31.2188,22.9375 -6.6382,-3.4176 -7.5907,-2.7464 -4.5624,3.7187 5.2278,11.6377 20.3124,42.2813 20.3124,42.2813 0.029,0.01 -20.3789,41.5915 -30.6874,52.9063 -10.0501,-16.2334 -22.8745,-32.6462 -28.4376,-50.375 7.8972,-15.4549 22.8184,-35.3584 27.5313,-50.5938 -0.6714,-0.4883 -4.7341,-0.068 -7.5625,1.4062 -26.0838,12.3381 -30.2735,-10.8928 -29.9263,-19.244 0.706,-16.977 15.4952,-20.5884 36.9721,-12.6774 -23.2127,-154.22901 -28.169,-242.10754 -22.2377,-232.59661 0,0 -28.0396,-20.04402 -41.9777,-33.64285 l -1.259,-1123.20921 335.5012,0.50507 c 34.1995,91.68916 24.7836,201.951886 4.3401,259.3658885 36.3117,6.6378275 72.9889,15.2119466 114.4279,38.9993625 -70.0052,102.627409 -179.9031,213.548249 -298.9344,284.562099 -6.7489,3.04488 -28.9138,-10.77902 -31.516,-24.43622 -0.6044,-3.17211 1.1554,-9.42535 4.7241,-9.30963 8.7455,2.83782 17.2194,6.73611 25.7576,10.21697 0,0 -11.894,-29.84602 -6.1526,-34.37866 3.7341,-2.4529 6.7912,-4.50031 9.1848,-7.02531 8.5437,-11.0346 7.8601,-23.56142 -1.1857,-33.17834 -3.6451,-3.81676 -7.895,-6.45022 -10.0201,-7.42155 0,0 8.3906,-23.28454 12.5982,-34.26182 l -33.027,10.9247 c -10.6977,-14.82512 -30.3617,-26.35779 -44.8945,-4.28639 -2.7719,5.88445 -2.1969,4.98041 -22.6435,-4.06504 -11.5898,-5.12725 -18.7329,-7.75408 -18.7329,-7.75408 4.3442,12.94106 10.0309,25.09414 14.9984,40.07364 -22.7559,14.50623 -17.5704,38.97157 1.5847,46.26973 l -10.09,33.04712 c 0,0 21.5139,-8.01917 33.1776,-11.13338 0,0 10.2272,10.27895 13.2593,20.04091 5.2016,16.7467 17.0151,28.88773 24.4849,35.8021 -12.4449,9.12049 -18.5913,12.19205 -32.6065,18.92887 l 48.3786,19.54362 c -3.0055,-10.22637 -9.4162,-17.81792 -10.0606,-30.75349 -0.5739,-11.08138 -1.2045,-11.28506 -8.3687,-18.78506 -11.7192,-10.10709 -13.4833,-23.63124 -20.0626,-34.67243 -4.5909,-2.7723 -8.2543,-8.32725 -11.6765,-14.60612 -7.3625,0.69743 -23.9933,8.96355 -27.1422,6.00111 -3.8598,-4.11858 6.6982,-25.22321 5.5262,-27.32884 -8.4905,-0.72672 -32.281,-19.26633 -3.9474,-39.91883 l -9.0391,-33.58942 c 0,0 21.5703,9.42563 31.9067,14.70316 7.1816,-33.56163 39.9249,-17.46749 45.2195,-2.99948 0,0 25.9573,-8.53256 24.3488,-1.60834 -0.7237,6.21665 -4.9387,21.727 -4.9387,21.727 23.3383,20.6632 18.5088,30.80734 -0.451,44.3585 -0.2899,10.95376 4.3087,27.98271 4.3087,27.98271 0,0 -13.2033,-5.86369 -21.9025,-8.32646 -3.4806,3.48064 -7.4325,9.77043 -6.7723,13.00893 5.9008,26.11793 38.1079,33.39032 85.8304,60.08482 1.6367,-16.87426 13.2803,-39.93941 14.5982,-60.1875 0.8197,-14.76606 1.327,-14.99929 11.7187,-10.28125 27.3444,19.74814 18.9987,74.01818 9.0313,96.28125 -5.9018,12.60464 -6.8697,12.27998 -18.3437,8.625 -15.8893,-5.0614 -43.9823,-3.02177 -59.4376,2.21875 -21.3706,8.75246 -31.455,56.42203 -31.6874,70.90625 -0.3757,13.75841 0.6859,27.40666 7.9062,44.40625 2.9915,10.87586 -2.5053,19.25805 -12.3125,16.34375 -2.2,-0.6537 -7.4375,-2.65625 -7.4375,-2.65625 l -92.25,47.71875 17.3794,10.22321 c 0,0 -12.8112,-7.6463 -4.8717,-11.78959 l 79.0924,-41.27483 c 14.7395,5.74904 12.7635,6.92227 22.3175,-3.03252 5.7175,-5.8884 8.5248,-6.00473 16.1838,-5.26983 46.6317,4.47449 67.2873,-2.31524 75.3488,-21.85644 1.2098,-2.9327 0.7481,-2.83058 5.511,-5.23477 8.822,-3.42913 12.97,-9.63483 13.4189,-17.42402 0.2942,-5.1047 2.5096,-5.80175 6.396,-9.36992 7.255,-6.66071 8.7249,-15.01167 4.1563,-23.59375 -2.15,-4.03862 -3.795,-5.31164 -2.9012,-9.50254 1.4971,-7.0185 -1.0985,-14.32834 -7.8437,-22.0625 -7.7638,-8.90201 -7.7123,-7.39663 6.9063,-21.01348 28.7158,-27.29711 54.0219,-48.19183 81.9552,-72.89023 19.1039,-16.89634 17.0408,-15.68742 24.4771,-7.95606 27.3746,28.46047 38.1133,72.83687 25.7864,111.85977 -0.5788,1.83255 -0.8385,1.62388 0.5937,0 7.7414,-8.7772 7.9603,-52.94726 1.3438,-72.53125 -8.0644,-24.06821 -15.8806,-36.59977 -42.5581,-60.16518 -16.6535,-15.03992 -61.9776,-58.45089 -61.9776,-58.45089 C 6220.9014,161.95297 6291.928,90.876468 6331.75,25.53125 6311.3141,3.6163451 6216.5691,-16.592958 6216.5691,-16.592958 6228.3616,-41.058 6251.6907,-150.96504 6211.75,-272.83201 l 340.3797,3.93242 12.1065,0.81979 c 0,0 1.8245,-0.69766 2.795,-0.95145 3.2612,-0.85281 4.8887,1.44545 4.0995,5.09375 -2.505,9.30007 -16.156,31.0764 -25.7869,29.27744 -4.2929,-1.66639 -3.0827,6.58721 -5.0076,10.02158 15.1827,-1.96705 32.9872,-21.20254 37.445,-40.26777 2.4447,-4.00414 4.0327,-4.67943 6.4688,-3.90625 2.8057,0.8905 2.1037,3.56188 -0.935,12.78125 -9.5071,23.06226 -28.7846,44.49221 -51.19,42.35136 l -2.9062,7.86739 c 30.2318,-0.4884 53.6073,-28.83129 60.5127,-50.03125 4.8246,-12.60291 5.0131,-14.31079 9.8623,-13.09375 4.0078,3.70927 1.5294,9.03708 0.1629,13.42213 -15.1962,48.55563 -56.9412,61.53228 -77.7255,59.42162 -2.5036,-0.31239 -2.9448,2.03523 -2.1874,6.03125 44.6555,2.94701 80.2207,-35.52095 85.25,-68.53125 2.4468,-9.16719 6.6925,-12.29633 9.1402,-8.10815 1.3807,3.69619 0.9214,7.46726 0.2429,10.98665 -12.2043,52.10892 -67.751,81.6975 -101.6957,73.2465 -1.5698,-1.46628 -4.1271,5.73602 -0.4323,8.30663 68.5213,-2.58496 89.6762,-37.94335 105.3073,-69.18163 18.6421,28.11856 33.8847,57.11697 78.5584,74.15402 0,0 4.4549,9.81306 0.9424,12.01307 -1.8516,1.15968 -4.68,0.62037 -8.782,-0.0421 -54.4529,-8.79386 -72.4593,42.09763 -49.2812,118.125 6.3463,20.816623 3.5037,17.629275 -10.0626,30.65625 -6.4655,6.2085539 -9.5427,17.2153623 -7.8437,17.46875 2.3243,-1.3079065 3.0911,-4.8733849 8.75,-9.5625 2.4641,-2.04182 7.5193,-3.9907983 11.25,-6.5625 10.0716,-5.840957 9.9831,-9.838015 6.3661,-23.647321 -2.6895,-10.268321 -9.5347,-41.496472 -9.5447,-44.665179 -0.017,-5.984029 1.3993,-5.353026 8.8872,0.0089 10.4496,7.748234 16.3753,7.193295 3.7302,-2.73144 -4.8966,-3.84716 -8.0798,-6.842376 -9.5589,-8.998721 -2.0123,-2.933687 -0.7664,-4.82945 3.3125,-3.550902 18.7618,5.880977 34.8729,5.453413 53.0844,-5.629606 2.082,50.152068 -4.8194,126.244192 -46.8393,180.651786 -32.2358,36.199703 -93.9512,8.808233 -116.7812,-2.625007 z m 49.375,-115.25 c -1.2521,0.05736 -5.7492,0.98745 -8.5313,2.580357 -12.3781,7.087138 -9.4242,32.2277736 4.0849,35.575893 5.4315,1.3461831 10.3645,2.0847942 19.4955,-2.2723215 5.4377,-2.59480119 13.0508,-4.624726 15.1875,-3.7321428 4.4866,1.87428103 5.9046,-2.0903347 6.8615,-6.5580357 2.1411,-9.994728 -14.2504,-10.232969 -27.2945,0.098214 -16.4589,13.0355919 -29.0738,-6.20201 -13.567,-20.6875 5.1702,-3.338182 5.0153,-5.061821 3.7634,-5.004464 z m -127.8527,53.796002 13.8231,15.97478 8.6858,38.072968 c -5.2688,0.895682 -11.6562,-2.03125 -11.6562,-2.03125 -4.3109,-17.223274 -8.5229,-34.463043 -10.8527,-52.016498 z m 188.2589,9.578998 c -0.1409,0.01719 -0.3049,0.05303 -0.4688,0.125 -0.5822,0.255882 -3.1581,1.416305 -6.7187,1.8125 -2.0548,0.228642 -5.1612,-1.231031 -7.375,-1.09375 -6.05,0.375157 -11.7063,2.156733 -13.2187,2.78125 -1.8623,0.768845 -3.6933,1.092067 -5.2813,0.15625 -4.5129,-2.659505 -17.661,-1.908402 -21.6563,0.4375 -4.733,2.012459 -10.0539,2.039528 -13.9374,0.03125 -1.674,-0.865546 -3.3869,-3.050572 -3.6876,-2.75 -0.6184,0.618492 -3.1451,11.394942 -3.9062,15.5625 0.021,1.466497 -1.0131,3.908739 -0.4062,4.15625 0.771,0.31457 3.2501,-1.937711 6.3124,-3.5 6.2783,-3.202849 13.2979,-2.955759 25.625,0.0625 15.2146,3.725197 21.1405,2.645348 30.125,-1.9375 7.1518,-3.647899 11.4974,-4.523873 16.25,-3.21875 1.1726,0.321956 4.2921,1.942028 4.7188,1.53125 0.8393,-0.807913 -1.4632,-5.318157 -3.4375,-9.78125 -1.4283,-3.22895 -1.9514,-4.495333 -2.9375,-4.375 z m -164.1689,17.181155 c 13.3643,12.661309 12.3599,11.576286 20.7964,17.838673 l -0.4087,12.198922 c 0,0 -10.3356,0.23161 -15.4063,-1.34375 -1.6016,-4.746514 -8.5534,-28.570506 -4.9814,-28.693845 z m 109.9364,8.196951 c 0.9034,0.621844 2.2204,1.276327 4.0316,1.894215 21.2806,7.978315 -0.9775,5.967014 -3.0982,13.566965 -1e-4,0.683582 0.9707,0.791136 2.0179,0.379464 7.2996,-2.869768 25.1381,-4.725512 33.25,-3.15625 10.528,3.552696 11.187,1.097989 1.0624,-4.1875 -7.408,-2.917075 1.5751,-4.903094 4.5983,-7.455357 6.2791,-4.039798 1.9594,-5.704558 -6.0357,-1.870536 -8.0044,3.838515 -22.2544,3.776808 -28.75,0.138393 -2.8758,-1.458931 -5.6736,-2.818051 -7,-2.901786 -2.7218,-0.109697 -1.2753,2.735431 -0.076,3.592392 z m -83.7566,13.667896 12.452,9.735248 -12.7345,-1.223826 z M 6223.5913,313.50254 c -2.515,0 -4.5626,2.04763 -4.5626,4.5625 2e-4,2.51487 2.0476,4.5625 4.5626,4.5625 2.5148,0 4.5626,-2.04763 4.5624,-4.5625 0,-2.51487 -2.0476,-4.5625 -4.5624,-4.5625 z m 16.623,4.6046 -57.1161,27.11607 15.0937,5.05358 -0.1205,15.625 13.9018,-4.43304 5.8929,14.59375 z m 2.5319,12.76913 c -2.5149,0 -4.5625,2.04763 -4.5625,4.5625 0,2.51487 2.0476,4.5625 4.5625,4.5625 2.5149,0 4.5625,-2.04763 4.5625,-4.5625 0,-2.51487 -2.0476,-4.5625 -4.5625,-4.5625 z m -72.4126,27.74873 c -2.515,0 -4.5626,2.01638 -4.5626,4.53125 2e-4,2.51487 2.0476,4.5625 4.5626,4.5625 2.5148,0 4.5626,-2.04763 4.5624,-4.5625 0,-2.51487 -2.0476,-4.53125 -4.5624,-4.53125 z m 17.5547,8.48661 -64.1159,29.45089 19.0044,5.77679 -5.0223,19.56696 15.4822,-6.5 8.6428,13.13393 z m 1.8878,14.0172 c -2.5148,0 -4.5626,2.04763 -4.5624,4.5625 0,2.51487 2.0476,4.5625 4.5624,4.5625 2.515,0 4.5313,-2.04763 4.5313,-4.5625 0,-2.51487 -2.0163,-4.5625 -4.5313,-4.5625 z m -127.2136,2.93369 c 24.1085,-0.0312 51.1482,9.14226 60.375,29.78125 2.4557,10.31817 -7.6868,16.46225 -29.3437,10.52364 -35.8007,-9.81694 -42.4807,-10.92102 -36.5313,-4.83614 0.7838,0.80168 2.3602,2.76741 7.7187,4.59375 13.4842,4.59566 39.5851,9.91254 46.625,9.1875 9.6199,-1.2761 16.2772,3.20135 13.875,11.21875 -2.7284,9.10674 -15.2188,12.83303 -34,10.1875 -19.4512,-2.73993 -30.1594,-4.98198 -36.625,-6.9375 -8.2975,-2.50965 -8.5881,-2.29469 -4.6562,3.53125 2.0474,3.0337 2.2479,5.46219 5.2812,6.03125 12.8435,-0.72494 26.52,1.73278 38.3126,2.84375 21.1701,1.89439 24.4824,7.89501 8.9374,17.0625 -7.3692,4.3459 -29.4112,3.15522 -41.9374,-1.3539 -8.9525,-3.22263 -29.4756,-7.8288 -21.5626,-1.5836 1.9012,1.50035 1.2496,5.18495 4.5626,6.34375 10.8548,1.49719 41.5417,3.64733 46.3394,7.98905 3.0899,2.79627 -3.8686,9.89618 -18.196,13.60203 -21.5646,4.08622 -53.8119,2.38035 -62.331,-3.43483 -15.7677,-32.11433 -7.2816,-84.67319 17.4063,-105.21875 7.8781,-6.16254 21.2849,-9.51251 35.75,-9.53125 z m 141.3724,16.74873 c -2.5149,0 -4.5313,2.04763 -4.5313,4.5625 2e-4,2.51487 2.0164,4.53125 4.5313,4.53125 2.5149,0 4.5625,-2.01638 4.5625,-4.53125 0,-2.51487 -2.0476,-4.5625 -4.5625,-4.5625 z m 19.0427,4.86734 -66.2008,32.96875 16.7456,4.97322 -3.9688,19.26339 15.5154,-6.39266 9.3953,12.95962 z m 0.5135,16.13393 c -2.5149,0 -4.5625,2.04763 -4.5625,4.5625 0,2.51487 2.0476,4.5625 4.5625,4.5625 2.5149,0 4.5625,-2.04763 4.5625,-4.5625 0,-2.51487 -2.0476,-4.5625 -4.5625,-4.5625 z m 38.5,38.875 c -29.3586,28.5687 -62.4407,51.2012 -92.6624,78.94559 l 6.5456,-0.26369 16.4674,-14.85084 463.7525,-1.45606 -10.8337,15.81599 4.5583,1.95606 c 0,0 13.9071,-20.56193 12.9629,-21.50603 -101.8904,0.29152 -180.5371,0.0562 -292.3129,0.82773 -20.3697,-20.17636 -41.8899,-39.08236 -63.1876,-58.25 z m -140.965,18.32011 c -2.5148,0 -4.5626,2.04763 -4.5624,4.5625 0,2.51487 2.0476,4.5625 4.5624,4.5625 2.515,0 4.5313,-2.04763 4.5313,-4.5625 0,-2.51487 -2.0163,-4.5625 -4.5313,-4.5625 z m 605.4351,3.48731 c 40.0587,29.7305 87.5242,66.19103 126.9138,87.83535 15.7753,6.85227 14.2476,9.18921 -1.7812,16.76348 -15.7549,9.79417 -41.976,22.41184 -63.8438,33.4375 -9.4764,3.58072 -13.6177,-1.08551 -20.3438,0.15625 -4.8496,1.23581 -6.235,2.14775 -9.125,5.96875 -4.7391,6.2661 -3.4466,6.04945 -28.7812,4.90625 -25.5605,-1.1535 -36.0986,-0.58335 -41.5938,2.21875 -5.2837,2.6943 -14.3483,11.90095 -14.3481,15.71875 -1e-4,3.6746 -2.8878,8.38845 -8.1519,9.96875 -6.1315,1.48891 -13.2065,6.34313 -12.9062,13.875 -1.6395,5.67084 -5.108,8.18314 -8.1875,11.29018 -7.285,7.35012 -6.5579,13.13125 -4.4508,19.95536 0.9748,3.0593 2.4589,2.34638 1.7027,11.38909 -1.7323,20.71308 -3.1589,18.96591 19.0013,34.29499 l -113.2174,98.65195 c -2.6236,2.06497 -3.3967,1.85953 -5.7825,0.21704 -13.805,-10.25072 -23.4154,-27.19358 -28.9523,-44.14271 -19.1254,-52.69015 4.228,-95.97446 35.2678,-122.46205 10.7551,-9.1778 25.2045,-20.1205 29.2227,-22.8712 58.4534,-49.8506 109.2908,-120.4481 149.3572,-177.17148 z m -588.5354,3.85724 -64.7241,30.56012 20.8458,3.51174 -3.9892,18.01031 15.0988,-5.7224 7.9907,15.18004 z m 3.9581,14.28238 c -2.5149,0 -4.5625,2.04763 -4.5625,4.5625 0,2.51487 2.0476,4.53125 4.5625,4.53125 2.5149,0 4.5313,-2.01638 4.5313,-4.53125 -2e-4,-2.51487 -2.0164,-4.5625 -4.5313,-4.5625 z m 593.0647,20.03885 -7.348,-17.37628 c 0,0 -20.4453,50.35552 -24.7695,67.42085 17.3208,-8.92699 68.0609,-34.75682 68.0609,-34.75682 l -21.7121,-4.02856 2.453,-19.72065 z m -739.3236,3.10786 c -2.5149,0 -4.5625,2.04763 -4.5625,4.5625 0,2.51487 2.0476,4.5625 4.5625,4.5625 2.5149,0 4.5625,-2.04763 4.5625,-4.5625 0,-2.51487 -2.0476,-4.5625 -4.5625,-4.5625 z m 19.8243,4.15704 c 0,0 -48.1635,22.59927 -69.9012,32.35057 l 20.2967,4.25245 -3.5653,19.73598 18.3191,-7.1452 7.3878,19.50513 z m 2.5755,14.90673 c -2.5148,0 -4.5626,2.04763 -4.5624,4.5625 0,2.51487 2.0476,4.53125 4.5624,4.53125 2.515,0 4.5626,-2.01638 4.5626,-4.53125 -2e-4,-2.51487 -2.0476,-4.5625 -4.5626,-4.5625 z m 681.5377,3.27998 c -2.5149,0 -4.5625,2.01638 -4.5625,4.53125 0,2.51487 2.0476,4.5625 4.5625,4.5625 2.5149,0 4.5313,-2.04763 4.5313,-4.5625 -10e-5,-2.51487 -2.0164,-4.53125 -4.5313,-4.53125 z m 78.7449,4.12325 -22.924,63.70369 61.9934,-31.20955 -16.8287,-4.59629 0.087,-15.75857 -13.8447,4.03141 z m -732.6563,15.31425 c -2.5148,0 -4.5626,2.04763 -4.5624,4.5625 0,2.51487 2.0476,4.5625 4.5624,4.5625 2.515,0 4.5626,-2.04763 4.5626,-4.5625 -2e-4,-2.51487 -2.0476,-4.5625 -4.5626,-4.5625 z m 678.0575,1.15879 c -2.5149,0 -4.5313,2.04763 -4.5313,4.5625 0,2.51487 2.0164,4.53125 4.5313,4.53125 2.5148,0 4.5625,-2.01638 4.5624,-4.53125 0,-2.51487 -2.0476,-4.5625 -4.5624,-4.5625 z m -659.0481,4.66973 -65.6911,32.0449 20.3879,4.77696 -2.2375,20.50936 16.5769,-9.41244 8.9993,18.70305 z m 4.1055,13.54902 c -2.5148,0 -4.3101,2.04763 -4.3099,4.5625 0,2.51487 2.0476,4.53125 4.5624,4.53125 2.515,0 4.5313,-2.01638 4.5313,-4.53125 0,-2.51487 -2.2688,-4.5625 -4.7838,-4.5625 z m 683.109,4.02871 c -2.5149,0 -4.5625,2.04763 -4.5625,4.5625 0,2.51487 2.0476,4.53125 4.5625,4.53125 2.5149,0 4.5625,-2.01638 4.5625,-4.53125 0,-2.51487 -2.0476,-4.5625 -4.5625,-4.5625 z m -90.5202,20.95337 -6.1043,-17.14944 -24.3033,62.88785 65.3575,-29.93877 -20.7397,-4.86564 0.3676,-16.42163 z m -66.4042,-13.53902 c -0.7474,-0.0403 -1.4064,0.1673 -1.4062,0.65625 -1e-4,1.453 -16.7006,17.77315 -16.7006,17.77315 l -192.9063,1.78125 c 0.3966,0.0283 16.056,4.36149 16.056,4.36149 25.3059,20.21788 64.961,56.07859 64.961,56.07859 l 47.8893,-1.90883 c 26.5191,-26.03476 66.3679,-45.83269 84.138,-77.9919 -0.4336,-0.43364 -1.2838,-0.70972 -2.0312,-0.75 z m 180.823,12.96446 c -2.5148,0 -4.5625,2.04763 -4.5624,4.5625 0,2.51487 2.0476,4.53125 4.5624,4.53125 2.5149,0 4.5313,-2.01638 4.5313,-4.53125 0,-2.51487 -2.0164,-4.5625 -4.5313,-4.5625 z m -148.9119,21.95601 c -2.5149,0 -4.5313,2.01638 -4.5313,4.53125 0,2.51487 2.0164,4.5625 4.5313,4.5625 2.5148,0 4.5625,-2.04763 4.5624,-4.5625 0,-2.51487 -2.0476,-4.53125 -4.5624,-4.53125 z m 97.9285,6.58482 c 13.8265,-0.0701 27.1455,0.40547 30.5937,3.03572 21.3714,17.99429 11.2425,102.11151 -15.6964,112.73214 -29.5617,6.65328 -50.0085,7.88673 -75.6658,-9.03692 -7.2764,-3.54524 -21.7146,-14.26889 -18.8967,-23.11933 3.8423,-10.87902 14.4119,-10.08685 44.7188,-0.65625 11.0615,3.442 17.1443,2.74865 19.9687,0.59375 2.6369,-2.0118 -0.8156,-4.26029 -6.4687,-4.28125 -2.2772,-0.008 -12.0771,-2.4247 -20.25,-4.9375 -11.538,-3.5474 -14.8535,-4.58965 -22.3126,-5.03125 -12.5424,-0.7425 -16.1874,-1.23445 -16.1874,-8.90625 -10e-5,-14.32589 19.9228,-16.222 56.5937,-7.8125 4.3853,1.00567 12.3305,2.12035 14.2813,2.0625 1.414,0.53919 -2.7931,-4.74651 -3.5,-7.90625 -1.3242,-1.12828 -3.6936,-1.6637 -9.9376,-1.875 -23.5819,-2.31313 -43.1561,-3.91173 -43.5803,-7 -2.083,-15.1654 28.419,-19.29223 60.0491,-7.125 8.1208,3.12383 8.2817,1.83075 8.2188,-0.53125 -0.1169,-4.36929 -13.711,-11.99924 -33.7634,-11.79018 -19.5052,0.20336 -16.7841,-9.70869 -0.75,-17.15625 5.4805,-2.5456 18.7581,-1.18879 32.5848,-1.25893 z m -75.4285,16.25447 c -2.5149,0 -4.5313,2.04763 -4.5313,4.5625 0,2.51487 2.0164,4.5625 4.5313,4.5625 2.5148,0 4.5625,-2.04763 4.5624,-4.5625 0,-2.51487 -2.0476,-4.5625 -4.5624,-4.5625 z m -70.2813,31.47321 -4.125,-16.99553 -26.5402,66.12946 67.0312,-34.13393 -22.1026,-4.15178 1.9374,-13.91518 z m -34.1563,26.55357 c -2.5148,0 -4.5625,2.04763 -4.5624,4.5625 0,2.51487 2.0476,4.5625 4.5624,4.5625 2.5149,0 4.5313,-2.04763 4.5313,-4.5625 0,-2.51487 -2.0164,-4.5625 -4.5313,-4.5625 z m 66.7813,18.75893 -5.6429,-16.06696 -22.5401,57.5625 57.1964,-25.54911 -16.8929,-4.61161 2.4017,-17.44196 z m -45.5313,0.16964 c -2.5148,0 -4.5625,2.04763 -4.5624,4.5625 0,2.51487 2.0476,4.5625 4.5624,4.5625 2.5149,0 4.5313,-2.04763 4.5313,-4.5625 0,-2.51487 -2.0164,-4.5625 -4.5313,-4.5625 z m 14.6428,21.98661 c -2.5148,0 -4.5625,2.01638 -4.5624,4.53125 0,2.51487 2.0476,4.5625 4.5624,4.5625 2.5149,0 4.5313,-2.04763 4.5313,-4.5625 0,-2.51487 -2.0164,-4.53125 -4.5313,-4.53125 z m -28.7455,13.47768 -19.3035,54.52232 53.7454,-26.01786 -15.7052,-5.1741 c 0,0 0.8641,-12.25997 -0.6162,-11.69197 -0.9376,0.3598 -11.0536,3.18304 -11.0536,3.18304 z m 47.8393,6.52232 c -2.5149,0 -4.5625,2.01638 -4.5625,4.53125 0,2.51487 2.0476,4.5625 4.5625,4.5625 2.5149,0 4.5625,-2.04763 4.5625,-4.5625 0,-2.51487 -2.0476,-4.53125 -4.5625,-4.53125 z m -71.2545,26.22768 c -2.5148,0 -4.5625,2.04763 -4.5624,4.5625 0,2.51487 2.0476,4.5625 4.5624,4.5625 2.5149,0 4.5626,-2.04763 4.5626,-4.5625 -10e-5,-2.51487 -2.0477,-4.5625 -4.5626,-4.5625 z m 20.5447,21.09375 c -2.5149,0 -4.5626,2.01638 -4.5626,4.53125 1e-4,2.51487 2.0477,4.5625 4.5626,4.5625 2.5148,0 4.5625,-2.04763 4.5624,-4.5625 0,-2.51487 -2.0476,-4.53125 -4.5624,-4.53125 z m -283.477,251.09505 c -2.4641,0.3664 -8.8607,-5.4807 -10.1052,-8.2264 3.6477,-0.9259 7.4097,-0.243 9.4518,1.4668 1.6878,1.6006 2.8819,5.7084 0.6534,6.7596 z m 19.4585,-3.9413 c -0.8666,6.6618 3.2572,18.705 2.4738,21.565 -2.1123,1.0366 -12.804,-10.4316 -15.4374,-13.2188 -0.5513,-3.8072 0.039,-8.6372 0.2543,-10.8226 3.6746,-0.6504 10.1893,-0.4063 12.7093,2.4764 z m 19.2551,3.315 c 2.2791,14.7616 8.7771,38.4928 7.7627,46.4962 -0.9628,-0.7689 -9.206,-8.8954 -15.2927,-17.516 -2.1419,-5.1609 -5.4747,-23.1294 -5.1887,-31.7302 4.1041,-0.5629 9.6122,0.095 12.7187,2.75 z m -128.9821,-1.6607 c -6.5737,3.3526 -14.0507,5.7666 -23.433,5.7276 -7.5257,-0.031 -20.4864,-3.9327 -19.1742,-2.9731 3.4275,6.1276 12.3759,2.9155 12.5492,6.9151 -2.2264,3.9555 -8.1733,3.5817 -11.1341,7.3706 -0.6207,1.0044 0.8763,1.8536 5.0658,1.4124 12.712,-5.765 29.3202,-5.6589 44.5147,-0.6669 3.1968,0.6682 1.0981,-2.3923 0.012,-3.2032 -1.9731,-1.4483 -5.2347,-2.9684 -7.9804,-3.2968 -13.2784,-2.359 -7.4458,-3.6963 1.4375,-7.6652 6.5185,-2.3827 8.1571,-8.2448 -1.8575,-3.6205 z m 28.7634,18.7545 c -1.7645,0.1381 -6.1868,2.3849 -11.0313,4.3437 -8.1773,3.3064 -15.7453,2.5328 -26.75,-0.5313 -9.5577,-2.6611 -13.0403,-1.9203 -22.5536,2.8706 -6.3122,4.046 -13.2251,5.1756 -18.2277,2.3482 -6.4801,-3.6845 -6.4376,-2.4225 -3.2263,6.6862 0.8021,2.2752 -0.7842,9.1611 2.0389,10.7513 2.145,1.2083 4.6218,-2.8159 6.2812,-3.375 1.6594,-0.5591 12.088,4.1187 17.9062,-1.0313 10.3801,-3.7644 13.4983,2.3405 20.6876,1.75 11.6713,-4.114 18.9722,-8.4034 28.9962,-0.4573 0.5974,-2.976 2.9283,-19.2241 6.66,-23.0739 -0.096,-0.2227 -0.3741,-0.3132 -0.7812,-0.2812 z m -21.2589,46.7825 c -8.3992,0.1 -12.9459,5.2586 -23.7762,4.2723 -8.6491,-0.6058 -11.6109,7.0634 -7.947,12.655 2.58,3.9376 6.0353,4.6635 17.8258,-0.7411 4.8496,-2.223 11.591,-7.1125 15.5313,-6.7187 11.5332,1.1527 14.3218,12.2991 4.7187,21.7187 -4.6728,2.7505 -4.7167,5.731 -3.2902,5.7857 3.7968,0.1456 11.4831,-4.3905 13.2277,-9.6768 4.7807,-14.4791 -3.8118,-27.5551 -16.2901,-27.2951 z m 37.6784,66.713 c -10.9263,2.3009 -26.6766,14.8433 -32.0312,22.9643 -5.0079,7.9116 -9.8043,16.8566 -6.3035,21.2768 2.8689,3.6223 6.8835,7.1437 7.2276,9.1071 0.3006,1.7149 -2.0427,3.417 -4.2366,5.8706 -9.5967,10.732 -7.312,11.3202 6.1429,4.3526 6.8162,-3.5298 9.9874,-4.9467 14.4375,-3.7857 12.9689,3.3834 29.115,0.9711 40.0938,-3.0625 4.9601,-1.8224 9.8135,-4.2915 10.1874,-3.0313 -20.0366,22.0467 -45.0176,16.4977 -53.9374,15.1563 -1.5526,-0.4047 -2.7543,-0.3098 -2.75,0.2187 -10e-5,1.0727 2.5846,3.3993 8.0937,5.8438 9.2071,4.0854 31.3248,-0.2585 45.1563,-10.3438 27.3487,-17.8923 42.4251,-34.9866 20.875,-27.8437 -9.8858,3.2767 -13.5902,2.7035 -25.5938,-2.7187 -17.9926,-8.1279 -31.7799,-10.5116 -46.6875,-5.3126 -18.8808,6.5847 -4.3997,-8.979 16.8437,-22.4687 4.6021,-2.9269 5.1769,-6.2738 2.4821,-6.2232 z m -101.8482,46.5058 -6.2964,0.094 c -4.5046,-15.1662 -15.3872,-15.1364 -20.0989,0.095 l -5.2602,-0.3724 c 5.1552,-18.9057 24.6174,-22.799 31.6555,0.1835 z m 112.0038,1.2525 -4.7301,0.2149 c -2.8676,-9.1856 -12.9814,-17.2677 -20.1039,-2.2136 l -3.2826,-0.6755 c 5.8228,-24.0455 29.0411,-10.67 28.1166,2.6742 z m -31.5439,-13.8164 c 2.9457,0 3.6926,3.3464 0.3438,8.7813 -2.3586,3.8276 -5.1587,3.4806 -7.9688,0.5937 -2.5372,-2.5372 -2.3837,-2.9872 0.375,-5.5 2.9393,-2.677 5.4826,-3.8758 7.25,-3.875 z m 34.8438,0.094 c 1.2794,-0.039 3.7148,1.0151 6.4464,1.9375 7.1788,2.4243 8.8084,4.4328 5.866,7.375 -2.8896,2.8898 -8.3752,3.7619 -10.9062,2.1206 -0.1159,-3.6138 -3.6928,-6.3952 -3.8169,-10.0224 0.01,-0.9732 1.1311,-1.3716 2.4107,-1.4107 z m -112.4688,0.125 c 4.9774,-0.2277 11.6522,2.7177 11.1652,5.5938 -0.5317,3.1385 -5.4424,5.1955 -9.4902,5.5344 -2.7102,0.3531 -2.601,-0.7425 -3.3115,-2.6697 -0.6338,-1.7177 -1.4509,-3.9105 -1.9136,-5.6256 -1.1165,-3.3 1.0052,-2.7366 3.5501,-2.8329 z m -34.0401,1.091 c 0,0 -2.7882,8.2982 -4.0351,11.1275 -10.4156,-0.5588 -9.4304,-5.1506 -4.5119,-8.4698 2.6456,-2.0136 5.3228,-2.0535 8.547,-2.6577 z m -8.0849,19.7215 c 1.8842,0.034 4.2253,1.6641 7.5,2.7187 9.2233,2.971 24.5483,2.6345 36.5,-0.125 5.723,-1.3212 8.4319,-3.0958 9.6875,-2.1874 2.2405,1.6208 -0.078,7.2732 -8.3437,10.9062 -10.7665,3.9708 -27.1867,6.1249 -39.625,-0.2188 -10.6393,-5.4259 -11.8217,-11.2023 -5.7188,-11.0937 z m -2.8438,11.875 c 9.7556,6.4437 19.5213,8.4765 31.5893,7.3571 18.0724,-0.6616 21.2917,-2.8897 6.067,5.1742 -14.0689,7.4515 -35.7596,6.079 -39.9375,-2 -2.3935,-4.6287 -0.8474,-10.143 2.2812,-10.5313 z m 87.5626,10.8125 c -0.065,0 -0.1126,0.011 -0.1563,0.031 1.4582,9.7494 17.8291,18.673 25.6875,20.7813 16.6724,7.3952 43.175,0.073 63.125,-8.5313 14.5677,-6.2831 19.8226,-15.7648 2.4688,-10.375 -27.922,8.6724 -62.9728,9.3274 -80.5262,2.5938 -5.7082,-2.7054 -9.6206,-4.5424 -10.5988,-4.5 z m -91.884,36.5133 c 34.9419,7.8836 77.1746,61.7701 77.0192,85.3305 l -11.2864,0 c -17.1797,-59.9359 -61.7957,-72.9062 -66.1575,-76.4847 -1.9991,-7.354 0.5084,-9.0243 0.4247,-8.8458 z m -0.5536,15.1794 c 41.5257,18.1885 56.2947,50.6422 62.5152,70.1511 l -12.1402,0 c -9.0449,-26.8434 -25.3053,-45.9892 -50.4687,-57.9063 -1.7062,-3.7376 0.094,-12.2448 0.094,-12.2448 z m -0.062,18.3698 c 21.2805,6.2745 40.044,34.2866 45.375,51.7813 l -10.625,-0.063 c -7.5299,-19.5206 -18.2008,-32.0407 -35.1563,-39.25 -0.7011,-3.6782 -0.5592,-7.8381 0.4063,-12.4687 z m -0.3438,19.0313 c 9.9917,2.0117 26.9104,17.5404 29.3438,32.75 l -9.75,0 c -3.4392,-10.2518 -14.068,-19.6194 -19.5167,-23.4396 -0.016,-1.8621 -0.077,-9.3104 -0.077,-9.3104 z m 1.0274,16.2373 c 1.0719,-0.67 15.9884,12.7635 13.4726,16.5127 0,0 -9.2838,0 -13.4375,0 -0.1539,-4.1747 -0.2499,-16.5556 -0.035,-16.5127 z\"\r\n               transform=\"matrix(0.99993837,-0.01110177,0.01110177,0.99993837,-7446.5449,-205.05297)\"\r\n               id=\"path4073\"\r\n               inkscape:connector-curvature=\"0\" />\r\n            <path\r\n               style=\"fill:#d40000;fill-opacity:1\"\r\n               d=\"M 6452.9375,-269.09375 C 6427.6112,-220.04094 6297.667,0.87896365 6296.348,8.5667628 l 33.2811,14.7179782 161.5584,-291.253491 c 0,0 -33.4792,-1.08893 -38.25,-1.125 z m 381.4687,184.5 -15.0937,21.21875 12.8437,23.28125 13.0313,-23.03125 z M 6240.8259,137.0625 c 0,0 -46.5982,46.29457 -64.8071,67.88751 39.1444,39.05437 113.9603,88.09272 114.5122,163.55128 l 51.5826,0.19636 166.9677,149.33741 c 0,0 151.1973,1.10098 154.015,0.44638 3.045,-0.7076 56.7654,-77.60644 56.7654,-77.60644 l 95.8115,69.85232 c 0,0 -4.5952,-75.23084 -8.2154,-121.32868 -1.1855,-30.83339 -2.2048,-49.79672 20.3319,-63.44298 -30.9688,-14.76148 -29.0086,-41.89661 -6.2373,-61.82546 -7.5138,-10.38553 -18.7393,-12.30505 -20.4274,-49.1302 -4.7402,-5.08214 -9.2283,-8.06152 -15.1562,-12.375 l -6.1876,5.53125 c -19.8804,17.84744 -33.4254,36.05331 -35.6562,47.90625 -4.2461,22.55979 18.6632,38.01251 31.9062,21.53125 3.7329,-4.64472 7.0619,-3.34399 7.0626,2.71875 0,12.30056 -15.4735,19.24732 -28.5626,12.84375 -3.0584,-1.49641 -5.7588,-2.49105 -6.0312,-2.21875 -0.4738,0.47388 12.9883,33.44635 16.625,40.71875 6.0503,12.09925 9.2197,24.25118 9.6875,36.96875 0.4996,13.58047 0.2267,15.31844 -6.125,38.78125 -5.9841,22.10491 -3.1652,35.25001 7.5313,35.25 6.0223,0 5.8335,5.78547 -0.25,7.90625 -12.9296,4.50698 -20.951,-5.0214 -21.4063,-25.375 -0.2767,-12.37029 -0.4899,-12.67416 -6.8437,-9.6875 -22.1095,10.39235 -46.123,-8.18455 -35.7188,-27.625 2.1859,-4.08442 4.7687,-2.79647 6.125,3.03125 2.545,10.93541 8.274,15.75755 18.625,15.71875 23.8619,-0.0894 33.8551,-33.80297 20.0938,-67.75 -2.7628,-6.81353 -4.1536,-6.42559 -7.7813,2.1875 -5.6914,13.51268 -15.2285,17.49038 -23.0937,9.625 -2.6368,-2.63611 -3.9128,-6.91416 -2.125,-7.125 0.4124,-0.0487 3.0381,-0.1611 5.8124,-0.25 13.902,-0.44546 18.7028,-13.9325 12.1876,-34.21875 -5.7256,-17.8249 -6.6081,-21.05608 -8.3126,-30.71875 -2.6327,-14.93045 -0.7964,-26.26387 6.5938,-40.75 1.3056,-2.55907 9.458,-11.66887 19.5938,-21.90625 10.3475,-10.45196 19.25,-18.46875 19.25,-18.46875 0,0 -5.2339,-4.51196 -12.3311,-9.84375 -14.9499,-11.23108 -17.5938,-13.16498 -17.5938,-13.16498 0,0 -71.0508,195.09407 -66.0178,271.10248 -9.0152,100.14778 -82.641,72.44182 -88.0611,3.08371 z m -3.1697,29.25 c 24.2841,-0.40338 40.2937,31.71028 49.4376,98.34375 3.0298,22.0809 16.4873,53.00469 26.25,60.3125 24.6335,18.44073 63.1883,4.22958 63.2187,-23.3125 0.038,-34.28732 -48.1026,-39.36941 -48.8437,-5.15625 -0.1749,8.06398 -4.3143,8.48383 -8.2813,0.8125 -3.5387,-6.84328 -0.3517,-19.63407 6.5313,-26.09375 4.4107,-4.13995 4.0656,-4.92043 -4.3438,-9.5625 -29.2869,-16.16676 -41.7456,-40.27581 -26.0938,-50.53125 6.8448,-4.4844 16.1993,1.1853 11.9063,7.21875 -6.7087,9.42829 -6.7938,10.92078 -1.1875,18.75 6.3719,8.89829 13.926,13.33898 31.8438,18.625 15.0437,4.43832 17.518,5.26995 24.4687,8.4375 20.3421,9.27019 29.6319,29.68114 22.5313,49.5 -1.6758,4.675 -3.3027,9.2875 -3.625,10.25 -0.7289,2.17453 0.4655,2.18702 14.7812,0.28125 22.7824,-3.03289 48.0922,5.10557 60.5625,19.46875 6.7031,7.72052 12.0797,25.07743 12.25,39.5625 0.033,2.78881 0.8914,9.0888 1.9375,14 1.046,4.91121 2.4342,13.2125 3.0625,18.4375 5.9608,49.56972 47.2303,74.92273 65.0625,39.96875 11.2223,-21.99749 -14.729,-44.00051 -27.9375,-23.6875 -4.6394,7.13478 -9.4228,3.85406 -6.75,-4.625 5.1939,-16.47681 25.7692,-19.27937 39.7813,-5.40625 7.5762,7.50156 11.2095,24.51723 7.5312,35.3125 -1.9305,5.66568 -1.7277,6.02513 2.4688,4.5625 9.4159,-3.28241 25.6917,-0.12292 31.5312,6.125 13.7598,14.72213 11.0014,32.3961 -5.9375,38.125 -7.7029,2.57966 -16.427,-0.10168 -19.2813,-9.125 -1.2527,-6.4323 3.1744,-8.2828 6.5938,-2.75 6.4053,10.364 20.3554,2.01005 17.0625,-10.21875 -3.7464,-13.91325 -15.6388,-16.86715 -37.5937,-9.3125 -34.9005,12.00899 -46.1666,11.00665 -62.875,-5.59375 -11.9284,-11.85051 -16.4136,-22.08892 -19.625,-44.6875 -3.5468,-24.95294 -3.8855,-25.59927 -10.0626,-20.34375 -29.5354,25.12897 -68.5528,-12.84575 -43.5312,-37.8125 7.736,-7.73602 13.4314,-0.99595 6.4688,7.65625 -10.165,12.63048 3.0865,30.22168 19.6874,26.125 30.23,-7.45981 24.0588,-51.69737 -8.6562,-62.03125 -9.9723,-3.15003 -37.3673,-1.84373 -58.4375,2.78125 -58.8372,12.91497 -84.8307,-12.19817 -96.9375,-93.5625 -1.4146,-9.5063 -3.07,-16.53178 -8.6562,-37 -6.6277,-24.28158 -29.1685,-37.46333 -41.4688,-24.25 -9.8071,10.53506 -4.65,24.7158 9,24.75 13.6072,0.0341 9.4367,9.36401 -4.75,10.625 -24.6189,2.18827 -28.9013,-38.79071 -5.2812,-50.53125 5.7657,-2.86601 11.1475,-4.35378 16.1874,-4.4375 z m -321.2931,15.12579 7.6323,29.16006 30.4215,8.59439 -9.646,-27.74842 z m 78.0431,8.70457 -8.1695,26.38839 23.0624,-5.65625 7.5223,-27.52232 z m 250.25,43.20089 c 4.8332,0 8.75,3.91751 8.75,8.75 8e-4,4.83249 -3.9168,8.75 -8.75,8.75 -4.8324,0 -8.7492,-3.91751 -8.75,-8.75 0,-4.83249 3.9176,-8.75 8.75,-8.75 z m -293.2633,15.74554 -23.9911,8.39285 -4.6161,20.91965 25.1051,-6.46819 z m 57.2276,6.6116 -19.5937,-3.37946 5.5089,21.59821 20.7545,8.48215 z m 850.75,-1.6541 -12.6028,9.80489 c 36.7364,31.93063 -2.9165,62.7024 -4.1488,60.61697 26.5576,17.57774 21.8265,45.30516 18.3811,70.6876 -6.2866,45.28728 -8.7359,88.12219 -15.5938,134.53125 0,0 31.9972,22.07845 53.28,30.62421 0.4015,0.0502 0.1263,-272.30965 0.1263,-272.30965 z m -453.3393,41.01571 c 4.8331,0 8.75,3.91751 8.75,8.75 7e-4,4.83249 -3.9169,8.75 -8.75,8.75 -4.8324,0 -8.7493,-3.91751 -8.75,-8.75 0,-4.83249 3.9176,-8.75 8.75,-8.75 z m -537.1352,22.39444 1.097,254.15002 52.6097,-94.07125 -36.1961,-41.753 31.2853,-33.40325 z m 512.2602,38.73056 c 4.833,0 8.75,3.91751 8.75,8.75 6e-4,4.83249 -3.917,8.75 -8.75,8.75 -4.8324,0 -8.7494,-3.91751 -8.75,-8.75 0,-4.83249 3.9176,-8.75 8.75,-8.75 z m 119.4376,26 c 4.8324,0 8.7495,3.91751 8.75,8.75 0,4.83249 -3.9176,8.75 -8.75,8.75 -4.8329,0 -8.75,-3.91751 -8.75,-8.75 -5e-4,-4.83249 3.9171,-8.75 8.75,-8.75 z m 342.1223,283.12342 38.6437,39.66211 -30.185,37.58439 47.5284,80.64876 -0.7657,-249.53048 z m -974.3054,-83.46717 1.8348,273.35268 41.3214,30.14286 10.479,-9.89544 c -26.6651,-28.47574 -10.7382,-49.65907 9.3647,-61.91573 -35.4627,-8.25699 -24.6967,-55.29043 -22.5802,-77.08616 -0.867,-40.4646 13.9635,-86.636 9.3972,-125.54017 z m 237.9867,37.99554 -59.2233,82.51339 c 0,0 -65.076,-49.29138 -97.8877,-71.52924 3.5116,35.60706 6.7121,81.03113 11.0662,119.33281 10.642,55.92403 -17.0618,56.88886 -17.3168,62.24365 44.0337,33.41496 7.0759,64.66592 0.4509,63.09564 23.4494,12.76795 21.5178,51.55803 21.5178,51.55803 l 11.1205,6.29018 c 0,0 3.6208,-2.20505 5.1562,-3.03125 11.8917,-6.39824 31.2788,-29.20348 35.7188,-44.25 7.5286,-25.51321 -14.6287,-46.70731 -28.5625,-27.3125 -6.8452,9.52729 -12.3288,3.15579 -6.7187,-7.8125 5.1197,-10.0107 18.4887,-15.03675 27.375,-10.28125 5.1681,2.7659 4.0114,-4.4102 -3.9688,-24.5 -2.6773,-6.7403 -4.8543,-14.0913 -8.625,-29 -3.6472,-14.4207 -2.2295,-31.8067 4.0938,-49.5 9.1154,-25.5096 5.882,-41.50975 -8.7188,-42.90625 -7.7905,-0.74519 -8.6335,-3.18415 -2.2812,-6.78125 14.1817,-8.0318 27.9333,3.40305 27.375,22.78125 -0.3023,10.4803 -0.1867,10.6559 5.3437,8.4375 27.9827,-11.22469 50.0941,17.81285 30.5313,40.09375 -5.9822,6.80906 -9.7466,2.48875 -5.8126,-6.65625 6.0801,-14.1317 0.2901,-24.20474 -13.9374,-24.3125 -20.6411,-0.1563 -32.0656,28.35925 -23.9376,59.71875 2.5375,9.78731 2.9286,9.9114 9.7813,3.375 6.0829,-5.80211 10.6304,-7.66 15.3437,-6.25 9.7711,2.9229 12.3333,13.31915 2.9688,12.03125 -16.0912,-2.2131 -20.3202,14.6432 -11.2188,44.625 12.0762,39.7789 -0.1487,72.19252 -35.875,95.25 -1.8071,1.16634 -4.6874,3.40625 -4.6874,3.40625 13.7815,12.27834 22.5958,19.25438 40.8053,30.34423 l 65.015,-262.70713 c 0,0 -1.0964,-14.91886 -2.6953,-21.9496 -0.052,-70.51613 65.7389,-77.2676 86.331,-13.24239 1.9773,6.14797 12.4408,21.8455 12.4408,21.8455 l 342.5203,303.94766 c 0,0 63.9447,-61.79495 63.0685,-63.43084 -48.5785,-48.96098 -114.1876,-83.57719 -116.5756,-161.26279 -11.6405,-0.33561 -50.56,0.38271 -50.56,0.38271 L 6259.2703,621.64102 c -52.2685,0.33389 -98.6268,-3.40552 -152.8729,-1.80173 z m 93.3214,5.72321 c 9.1469,-0.28765 18.3743,4.46576 18.375,12.09375 0,6.5825 -4.4097,8.08889 -8.0626,2.75 -5.1047,-7.4627 -11.0317,-8.05846 -17.0624,-1.71875 -16.7162,17.57149 9.2581,33.63109 39.125,24.1875 18.2906,-5.78331 27.1469,-7.3435 33.8437,-6 28.2168,5.66051 41.8431,24.69864 44.25,61.78125 1.2238,18.855 1.1882,18.78561 9.3437,11.3125 19.8503,-18.1885 48.5342,-8.06565 53,18.71875 1.9173,11.4945 -10.4573,25.96874 -22.2187,25.96875 -4.6126,-10e-6 -3.8805,-4.81551 1.0937,-7.1875 11.9628,-5.7043 12.4342,-24.56719 0.8126,-31.9375 -15.4277,-9.7835 -35.752,5.47624 -35.5,26.65625 0.302,25.45989 19.3179,37.18755 56.875,35.03125 5.5,-0.3157 19.3066,-0.96459 30.6562,-1.4375 17.9386,-0.76401 37.219,-4.14388 55.5,9.65625 19.1436,15.2241 31.849,45.48825 37.2812,89.21875 8.5593,53.82319 15.1744,68.24556 33.25,69.53886 10.7224,0.76711 19.8126,-8.36646 19.8126,-18.97636 -7e-4,-7.4802 -9.8963,-14.07225 -17.4063,-11.59375 -9.069,2.99299 -10.8996,-6.8313 -1.9687,-10.5625 12.3729,-5.1698 27.4814,4.79235 30.8437,20.34375 1.9598,9.06431 -8.269,26.45086 -18.9975,30.78886 -27.9865,11.3162 -47.8873,-11.80175 -54.44,-63.53886 -4.0195,-23.72673 -6.2275,-39.72236 -13.625,-60 -13.5781,-37.3242 -35.8891,-52.7268 -60.1875,-41.5625 -27.5153,12.6424 -22.0552,53.83494 7.0937,53.53125 16.014,1.26731 19.3682,-10.49993 19.6994,-23.09869 0.3755,-9.29275 10.9085,-0.56884 11.8099,5.82759 0.864,7.75966 -6.0924,17.36152 -12.2331,21.90371 -9.9234,6.64268 -6.3934,6.22666 3.7551,8.89864 27.2843,5.02637 47.5636,41.1325 31.25,53.39277 -8.4762,5.1688 -17.4819,-2.43964 -11.6039,-9.91133 9.3432,-11.8781 -6.4697,-30.64462 -35.2525,-36.95019 -37.6985,-8.25878 -52.7088,-36.31824 -39.1123,-65.15625 4.4982,-9.54062 4.8893,-9.31925 -13.5,-8.28125 -40.4596,2.28361 -54.8253,-3.30819 -68.4063,-26.75 -4.0981,-7.07369 -5.908,-16.54084 -6.7813,-35.34375 -1.5622,-33.6642 -4.631,-54.5057 -8.875,-60.375 -21.0078,-29.05831 -64.7152,-20.36275 -59.25,11.78125 2.8706,16.8792 20.3098,22.29091 32.2188,10 8.9944,-9.2828 13.1887,-0.6578 4.4062,9.0625 -21.1262,23.3842 -57.8926,-3.9135 -46.9687,-34.875 2.5004,-7.08708 2.8363,-6.8596 -10.7187,-7.25 -30.1522,-0.8684 -44.4988,-26.66725 -25.0626,-45.03125 3.4042,-3.21568 8.1456,-4.75558 12.9376,-4.90625 z m 72.75,110.75 c 4.8324,0 8.7499,3.91751 8.75,8.75 0,4.83249 -3.9176,8.75 -8.75,8.75 -4.8325,0 -8.75,-3.91751 -8.75,-8.75 -10e-5,-4.83249 3.9175,-8.75 8.75,-8.75 z m 121.2187,31.0625 c 4.8325,0 8.75,3.91751 8.75,8.75 0,4.83249 -3.9175,8.75 -8.75,8.75 -4.8325,0 -8.75,-3.91751 -8.75,-8.75 0,-4.83249 3.9175,-8.75 8.75,-8.75 z m -26.0313,57.09375 c 4.8327,0 8.75,3.91751 8.75,8.75 3e-4,4.83249 -3.9173,8.75 -8.75,8.75 -4.8324,0 -8.7497,-3.91751 -8.75,-8.75 0,-4.83249 3.9176,-8.75 8.75,-8.75 z m 385.2217,34.03077 5.5452,25.88056 20.082,5.28532 -3.1346,-22.17555 z m 70.2508,8.95829 -0.434,15.34724 17.8642,2.10168 6.3192,-26.45638 z M 6523.2188,890.625 c 4.8324,0 8.7496,3.91751 8.75,8.75 0,4.83249 -3.9176,8.75 -8.75,8.75 -4.8328,0 -8.75,-3.91751 -8.75,-8.75 -4e-4,-4.83249 3.9172,-8.75 8.75,-8.75 z m 256.5491,35.64732 -21,5.82589 -10.0893,29.16072 26.8839,-9.73214 z m 41.0759,2.625 2.5714,21.60714 25.8705,11.69197 -8.75,-30.79911 z m -381.327,184.18778 -160.6104,290.3566 43.8886,-0.6104 151.5905,-273.7856 z m -505.1418,70.2899 -14.1875,19.0938 13.4687,22.1562 15.4688,-22.25 z\"\r\n               transform=\"matrix(0.99993837,-0.01110177,0.01110177,0.99993837,-7446.5449,-205.05297)\"\r\n               id=\"path4071\"\r\n               inkscape:connector-curvature=\"0\"\r\n               sodipodi:nodetypes=\"ccccccccccccccccccccccccsccccsssscscssscsccscccccsccccsccsccscccscsscsccssccsssscscsccssscccscsssscssccsccccccccccscccsccccccccccccccccccscccsccccccscccsscccscccccccccccccscccccscccsccccscsccsccscscccccccccccccscsscccsssccscccccccscscccccccccssscscsscccscsccsscscssscssscccsccccccccccscccsccccccccccccccccc\" />\r\n            <path\r\n               sodipodi:nodetypes=\"scscccccccccccsssscsccscscccccccccccccccccssssscccccscccccccccccccccscccsccccccccccccscccccccccccccccccccccccsssccccccccccccccccccccccscccccccscccscccccccccccccccccccsccccccccccccscccccscccccccccccccccccccccccccccccsccccccccccccccccccccccccccscscscsccccccsccscccscscscccscccccccccccccssscsccssccccccccccccssccccscccccccccscscsccccccccccccccccccccscscsccccscscscccccccccccccssccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscscccsccsscssssscsscccscsssccsccsccscccccscsssscsscccccsccccccscccccccccccccccccccsccccccsccccccccccsccccccscccccsccccccccscccccsccscsscccccccccccccccsscccccccccsccscccscccscccccccsccccccccscccsccccscsccccccccccccccccccccccccccccccccccccccccsccccccccccccccczccszccscccsscsccccsscscsssscssssccccccccsscsccsccscscccsscsccscccccccccccccccccccccccccsccccccccccsccccccccccccsscccsscccssscccccscccccccccccccscccccsscccccccsscsccscccccccccccsccccccsccsssssccscccscccscscccscccsccccccccccccsccccccccccccccccccccccccccccccccscscccccccscccscccccccscssccsccccccccsccccccccccccccccccccccccccccsccccssccsscsssssscssscsccsccsscssscsssssscscccscscsscsscccsccccscscsccssccccccsccccccsccsccsssccssccsccssccscccccccccsccssccsccsscscscccccsscsscssccccccsccccscccccscccccccccsccccsccccccccccccccccccccccsscccscccccscccssccccccccscsccccsccscccccccccccsccccccsccccccsscccssccccccccccccccsccccsccscsccsssccccscccscscsscssscscscscccscccccccccccccccccccccccsccccsccccccccscccccccscccccccccccccccccccccccccccccccscccscccsccccccccccccccscccccccccccccccccccccccsccccccccccccccscscsscsscccccsccscccscsccccscscccccccccscccccccccccsccssccsccccccccscccscccccccccccccccsscsssccsccccscccscsccc\"\r\n               inkscape:connector-curvature=\"0\"\r\n               id=\"path4069\"\r\n               transform=\"matrix(0.99993837,-0.01110177,0.01110177,0.99993837,-3051.6209,-485.6196)\"\r\n               d=\"m 1362,-139.90625 c -19.7822,0.0883 -39.6355,13.40327 -45.2188,39.3125 -1.2466,5.786007 -1.7328,15.786645 -2.1562,43.78125 -0.6273,41.479032 -1.0312,38.125 -1.0312,38.125 l -17.7813,-0.4375 0.9375,23.09375 18.9688,0.15625 c -0.091,0.1077887 -0.4125,1.357575 0.1874,14.40625 1.4961,32.520135 6.5722,44.072546 25,52.8125 12.4628,5.910697 35.5024,5.877998 45.9376,-2.3125 6.313,-4.003621 6.9456,-3.971058 14.4374,0.65625 15.9376,9.843083 29.0626,4.5 29.0626,4.5 l -0.4376,-23.625 c -25.1145,-0.383768 -28.4533,-6.33159 -21.875,-22.65625 0.4603,-1.141214 0.5224,-3.271447 0.7188,-6.0625 1.8509,-26.3035754 1.105,-114.969207 -1.8125,-125.53125 -6.5762,-23.80712 -26.3542,-36.3017 -44.9375,-36.21875 z m -2.1562,23.25 c 9.0352,0.0485 18.2529,6.1532 22.4374,17.53125 4.4268,12.034759 4.3672,10.990491 5.6563,85.09375 0.6346,36.477803 -0.8951,36.33122 -0.8951,36.33122 -14.0085,-18.5568694 -31.7198,-32.2358971 -51.1157,-38.671027 0,0 0.3642,1.721317 0,-34.231622 -0.376,-37.128903 0.073,-45.115003 5.6045,-54.803571 4.3824,-7.67456 11.2844,-11.28775 18.3126,-11.25 z m 449.6874,72.052347 c 29.5732,89.660224 32.3202,178.017993 6.6563,262.916403 14.6209,0.74218 78.4126,17.10175 113.5268,38.77232 -6.4992,16.71215 -106.046,139.13759 -173.6205,194.32143 19.2061,19.01945 40.3454,38.03706 62.5624,59 33.6013,31.88132 45.4681,53.83488 47.6876,95.21875 -0.3015,19.98234 -7.4629,44.64001 -20.1876,62.09375 -9.6202,13.19586 -19.8307,23.33947 -40.3124,36.90625 -18.8967,12.51621 -46.5159,39.44805 -81.25,79.15625 -13.2395,15.14173 -35.5876,42.70776 -54.0938,69 -7.0033,9.55713 -27.6209,39.3823 -27.6209,39.3823 -68.7779,-56.12352 -142.4314,-99.41496 -144.3166,-99.08319 0,0 74.3085,-39.60214 89.9375,-47.67411 12.0094,7.70371 28.3137,1.11347 20.4862,-15.84123 -15.0429,-38.58772 -4.5513,-78.30498 13.92,-106.03377 4.4227,-6.68216 15.0799,-10.5792 32.3126,-11.78125 7.4821,-0.4876 15.3882,-0.24536 23.3124,-0.34375 2.8577,10e-6 10.5598,1.10117 14.7813,3.40625 14.0478,7.6705 16.8631,-2.19358 25.625,-35.40625 8.7172,-33.04344 -5.3105,-74.83258 -25.3125,-74.96875 -4.7014,-0.032 -7.3406,1.70206 -6.3725,13.4586 0.7309,8.87528 -1.4034,13.47499 -3.69,19.07265 -4.9882,12.21114 -7.6388,24.16322 -9.2232,40.09375 2.921,0.59131 -18.571,-21.38351 -52.4331,-30.09375 -22.0047,-2.60359 -33.178,-30.0045 -32.25,-30.0625 0,0 3.2953,-7.4207 6.1876,-10.3125 7.517,3.59535 14.8998,7.82123 23.8124,10.4375 0,0 -2.053,-11.00764 -2.8437,-13.96875 -4.0875,-15.30693 -3.8681,-17.63585 2.0313,-20.8125 14.6256,-7.87644 16.1676,-21.96504 4.75,-34.78125 -2.8831,-3.27829 -5.3123,-5.38074 -9.1876,-7.03125 l 7.2188,-28.75 c 0,0 -6.6128,1.42319 -11.9062,3.03125 -15.305,4.64913 -14.163,4.80567 -20.6876,-2.625 -14.1991,-16.1731 -35.8852,-13.09779 -39.125,5.5625 -0.358,2.0625 -1.3124,5.34375 -1.3124,5.34375 l -32.6449,-15.84121 c 0.9533,7.65594 9.4324,33.59121 9.4324,33.59121 -28.5632,22.18649 -4.4242,41.83573 3.3673,43.9105 0,0 -6.6721,21.23312 -8.9674,30.05825 l 32.215,-9.20654 c 2.7071,6.13643 6.0432,10.79645 12.7429,15.09423 1.7482,18.12235 15.7125,32.73405 25.3352,41.52585 -7e-4,-10e-4 1.3869,6.62878 0.5507,10.86771 -2.0785,10.53718 8.6314,27.2228 10.4451,28.22002 -44.2116,-18.08471 -90.2968,-39.78488 -134.7889,-61.09502 l 2.7813,546.8438 c 0,0 10.359,9.2806 30.9063,24 9.8713,7.0713 9.8682,7.0993 7.8124,15.25 -2.7096,10.7465 -2.0403,18.9481 7.125,89.6874 4.8562,37.4099 10.1409,76.2065 14.875,111 1.8778,12.6732 2.1396,20.8041 2.1396,20.8041 -9.8209,-4.5483 -24.1213,-5.0094 -31.5146,3.2897 -12.7525,14.5243 -2.5475,37.9056 16.3438,37.4062 4.2935,-0.2623 7.2074,-1.508 10.9062,-4.0312 2.561,-1.3724 5.1992,-0.1746 5.1992,-0.1746 l -28.191,49.5342 32.4537,54.6401 32.3745,-58.4349 -23.5435,-46.2228 c 0,0 2.2961,-0.2579 5.4884,1.3455 3.1635,1.5889 7.419,2.7981 10.375,2.9687 16.4259,0.1249 19.797,-7.364 21.5313,-20.8437 -7e-4,-17.3486 -13.8101,-25.1937 -32.8126,-18.6563 -2.9825,1.027 -6.2812,1.3126 -6.2812,1.3126 l 19.9375,-190.7188 10.6875,7.8438 3.5,-1.9063 -9.3438,-7.9687 c 2.0265,-30.5594 -8.0526,-41.3842 -18.9406,-48.7795 36.4133,-20.7111 20.6304,-53.4542 -3.5817,-63.5331 0,0 15.7329,-9.1902 18.8856,-18.836 2.6839,-8.6219 1.6813,-22.2907 -1.3633,-46.53895 -2.2757,-37.38386 -10.3124,-114.625 -10.3124,-114.625 31.8137,23.98438 64.4693,49.65417 95.1874,73.90625 l 61.5626,-85.5625 148.375,1.03125 c 0,0 112.7713,102.38786 169.5312,154.59375 l 49,0.4375 c 0,0 0.5385,5.2396 1.0312,8.7187 4.6449,50.5563 38.558,85.2763 69.4376,109.625 12.5867,11.305 43.6874,41 43.6874,41 l -57.6562,58.125 -353.0625,-315.3437 c 0,0 -1.6901,-4.60087 -2.375,-7.40625 -8.154,-33.39894 -30.2827,-47.38586 -50.4063,-45.03125 -21.1145,2.47059 -39.1248,23.26589 -38.2187,58.65625 0.1402,5.47473 2.125,15.125 2.125,15.125 l -64.5,268.65625 c 0,0 -25.793,-19.6894 -39.7187,-29.1563 l -3.0626,1.7813 37.75,28.375 2.8126,-1.2187 10.7187,8.375 0.8125,5.7187 c 33.0251,22.4693 89.0312,64.4063 89.0312,64.4063 26.4364,-19.6443 54.2278,-13.0785 82.0626,-5.6876 0,0 20.236,6.7638 31,6.7188 54.6939,1.229 103.1316,11.8537 153.9687,30.2188 l -185.3125,328.5 353,0.7187 c -17.4005,-68.7563 -35.8861,-138.5975 -2.8438,-255.875 -34.8136,-7.0256 -112.2187,-38 -112.2187,-38 0,0 -0.3678,-1.7604 2.9063,-5.7813 14.308,-20.463 50.4941,-75.9268 84.4062,-108 4.1305,-2.9554 63.2368,-60.3107 63.8125,-62.125 0.3231,-1.0179 1.7426,-4.8874 4.0625,-6.4062 5.4478,-3.6387 19.9296,-17.3269 19.9296,-17.3269 l -73.9698,-64.1419 c 0,0 -3.251,-0.3139 -4.3036,-0.9027 -10.3268,-5.776 -28.9712,-37.9961 -33.5624,-59.566 -10.5621,-49.6181 8.9405,-88.8502 63.9687,-129.125 53.7256,-36.78892 155.6017,-179.58519 155.9375,-182.75 54.9337,45.47681 97.8211,69.02443 146.1518,98.85268 -29.1953,16.74679 -53.002,27.94691 -73.433,39.02232 -13.2573,7.5624 -15.0796,9.14155 -26.2813,5.96875 -12.6915,0.10307 -17.0305,4.99551 -13.8125,15.9375 19.2099,30.35462 10.9637,101.02568 -15.0103,114.64667 -22.5469,11.82379 -44.4697,8.62202 -62.5835,1.91583 -13.9817,-4.4787 -13.7981,-4.52595 -20.0312,8.15625 -13.7142,29.2063 -14.5953,53.8045 -1.9375,81.8125 10.3857,22.487 25.8213,32.7362 27.7232,2.4196 1.1168,-17.8024 8.9614,-38.6068 8.7143,-57.7321 15.7463,17.3835 26.1853,25.3282 52.0312,32.4063 17.3342,2.6971 35.7456,24.44 35.174,33.3046 -4.7605,4.8058 -6.2077,10.946 -6.9795,10.5091 -8.4425,-2.7568 -26.7257,-10.5325 -26.7257,-10.5325 l 7.7812,27.5 c 0,0 -1.2841,1.2446 -5.0312,3.1562 -17.2067,8.7789 -16.096,32.5104 1.9688,42 3.6777,1.9327 3.9411,2.8412 2.375,7.9063 -2.244,11.2779 -7.1783,18.8529 -9.8438,30.0313 0,0 2.4581,0.09 23.0625,-9.4376 l 8.0937,-3.75 4.875,5.2188 c 10.6733,11.4099 23.4952,11.3427 34.6876,-0.1875 l 5.125,-5.2813 14.3124,7.25 c 13.4865,6.8364 17.0313,8.25 17.0313,8.25 0,0 -7.777,-30.1735 -9.2187,-33.625 -0.7801,-1.8652 -2.3699,-3.7578 -3.5313,-4.1874 -1.9233,-0.7123 -1.6181,-1.163 3.5,-5.2188 12.9734,-10.2809 14.2746,-24.4677 3.2187,-35.25 -4.2147,-4.1109 -4.75,-4.9688 -4.75,-4.9688 l 6.7188,-27.9687 -27.8616,9.2289 c -4.3957,-9.3528 -11.3837,-13.6082 -15.7946,-15.5122 -0.4723,-12.62 -2.0557,-25.5939 -23.7444,-45.3237 7.3066,-6.6749 -1.3826,-22.7605 -8.5413,-32.4064 12.2013,4.0964 42.7137,17.0029 42.7137,17.0029 l 4.6067,-0.1872 14.5687,6.9842 1.7087,2.5901 c 0,0 45.8291,21.6265 66.8753,31.7481 -0.053,-1.1306 -0.2195,-23.7691 -0.2812,-272.96875 -0.037,-148.57681 0.2081,-270.77987 -0.094,-271.5625 -0.3002,-0.78263 -5.3338,-4.6466 -10.5624,-8.59375 -9.648,-7.28292 -11.6244,-8.70323 -23.875,-16.875 -9.8308,-6.5571 -9.1684,-6.50477 -7.125,-14.0625 2.3461,-8.68032 2.2953,-20.61507 -0.8126,-42.96875 -2.2938,-16.50312 -10.6121,-74.53711 -16.4062,-121.375 -4.0647,-32.85811 -5.0287,-40.151 -6.0312,-45.4375 -1.6123,-13.30848 0.117,-19.10499 -0.1742,-19.29911 46.0242,19.93284 49.6581,-46.17175 3.5187,-37.24504 8.8271,-17.80283 16.2629,-26.06646 23.8275,-45.08316 -9.6216,-20.71674 -30.922,-55.74769 -30.922,-55.74769 l -33.7188,58.71875 19.8438,40.625 c -22.828,-4.11248 -34.9424,12.50462 -30.7188,27.4063 4.5914,13.1796 17.2268,16.87493 28.375,11.5625 8.5877,-3.38494 8.5771,-4.24505 0.9688,60.15625 -2.2503,19.04188 -12.2486,108.09071 -13.625,121.34375 -0.9252,8.90069 -1.4994,11.37093 -5.125,9.40625 -4.9138,-2.11226 -7.7243,-5.19458 -12.6563,-8.4375 l -2.75,2.5625 c 4.38,3.55133 9.5688,8.14635 14.871,13.02066 -1.2144,23.58408 -0.7345,37.24578 18.8968,48.75492 -35.5835,22.305 -14.7783,56.6188 6.1209,61.5795 -12.4558,3.21718 -24.7395,19.24194 -21.7637,51.08242 l 10.0937,131.21875 -96.4687,-71.625 -56.625,81.03125 -149.1875,0.1875 -168.2812,-151.84375 c 0,0 -36.8923,-0.50357 -52.0313,-0.875 1.7165,-0.79912 -3.1767,-46.93755 -27.5313,-77.0625 -26.4725,-31.47251 -86.7268,-83.42077 -86.6874,-83.4375 l 63.2812,-64.25 L 2198.1562,692 c 0,0 1.7194,9.05626 2.625,12.90625 11.8773,50.48526 69.3159,53.546 81.5313,2.125 1.9736,-8.30799 4.3518,-27.63842 3.4687,-29.9375 -0.284,-0.74009 1.5017,-9.17067 3.9688,-18.75 19.0994,-74.90509 35.367,-139.52303 54.1562,-211.4375 2.5913,-9.9 5.3355,-20.925 6.0938,-24.5 3.0955,-14.59213 2.634,-14.49996 17.9062,-3 9.3514,7.04103 13.2188,9.5625 13.2188,9.5625 l 2.9688,-3.09375 c -10.4876,-8.11841 -28.4376,-21.0625 -28.4376,-21.0625 l 0.1876,-5.5 c -57.6844,-41.30775 -69.5666,-52.27368 -103.7188,-79.34375 -26.4639,23.30574 -64.3135,13.86643 -88.0312,5.625 -6.1107,-2.40345 -21.125,-6.3125 -21.125,-6.3125 -59.0782,0.0763 -110.98,-11.32745 -160,-27.34375 l 189,-336.563769 -72.9981,0.0045 -2.5496,2.862451 -37.9827,0 -0.1263,-2.859942 z m 697,1106.916403 c 0.01,0.2074 0.031,0 0.031,0 z M 2024.9688,-37 l 25.8437,0.5 -152.9375,272.875 -16.25,-6.34375 c 0,0 1.4894,-0.78124 1.4688,-12.28125 -0.022,-12.34262 -2.6909,-17.61795 -8.25,-24.90625 -4.6555,-6.30785 -6.6399,-6.65593 7,-4.78125 27.8875,3.833 47.7019,-26.48525 36.625,-50.15625 -4.2742,-9.13203 -3.6732,-9.68644 7.625,-10.8125 31.101,-3.09985 43.2003,-42.557211 21.1874,-62.21875 -4.5499,-4.117646 -2.5189,-6.737563 5.9688,-4.90625 26.909,5.805895 47.752,-24.029971 37.0625,-47.40625 -3.4812,-6.5212874 -0.3507,-7.6035011 4.5625,-8.25 23.0363,-5.4015248 30.875,-23.492858 30.0938,-41.3125 z m -206.125,0.03125 119.7187,0.03125 c -16.1094,24.639006 12.3336,39.2271346 15.9375,37.5 -25.8099,14.096716 -18.7254,33.964645 -5.337,40.791998 12.9876,6.622981 32.4701,0.662635 27.2745,-28.010748 l 6.4063,-2.78125 c 6.2285,7.043196 12.4085,50.700603 -35.0938,44.625 -8.4575,-1.081727 -13.0444,6.814488 -5.9688,11.1875 37.535,43.15616 -21.2236,62.22382 -23.7812,55.0625 l -0.1964,-7.30357 c 15.8888,2.92416 36.2235,-17.553689 18.3945,-35.755445 -10.1359,-10.347813 -39.5386,-5.304752 -34.5055,26.097875 -17.3675,-25.940468 -36.3249,-18.114652 -41.4342,-4.41048 -3.9615,10.62581 1.0773,25.17015 18.3991,27.64272 -19.344,16.20585 -9.9497,34.28725 3.347,38.2798 14.6791,4.40764 29.6683,-1.57338 25.6205,-28.2384 0.2303,-2.52616 5.3551,-1.70261 5.7812,-1.84375 15.1761,37.8704 -21.0997,51.78258 -40.6874,43.96875 -7.2565,-2.82385 -11.0526,8.36424 -3.3438,14.0625 11.6968,8.64618 8.0839,33.53489 6.715,33.78379 -21.7506,-8.25026 -52.9158,-14.35137 -51.7522,-13.88734 20.7824,-82.18754 19.4368,-165.758082 -5.494,-250.8027 z m 190.875,0.03125 10.8124,0.03125 c 0.1433,15.478227 -6.5798,34.5316568 -33,37.46875 0.1178,-4.1495487 -0.1823,-8.0821992 -1.25,-12.46875 9.9078,-2.24375 23.055,0.506931 23.4376,-25.03125 z m 47.2187,0.84375 34.5313,0.15625 L 1929,252.4375 1903.0312,239.09375 z m -85.1875,21.875 c 6.1019,0 11.0625,4.9293078 11.0625,11.03125 0,6.1019422 -4.9606,11.0625 -11.0625,11.0625 -6.1019,0 -11.0312,-4.9605578 -11.0312,-11.0625 -3e-4,-6.1019422 4.9293,-11.03125 11.0312,-11.03125 z m -338.6875,5.0625 c -26.0291,67.430713 -76.0812,108.289799 -112.5,176.125 -38.0331,68.9619 -20.6209,128.35565 33.0937,139.375 28.3211,5.8099 61.4187,-21.77057 65.6563,-51.75 1.0114,-7.15528 2.2615,-9.18754 5.625,-9.1875 4.9192,0 4.362,12.4869 1.25,29.40625 -7.4874,44.86937 -22.894,72.16666 -34.625,88.90625 l 93.2813,-0.78125 c -18.9539,-22.78357 -33.5013,-53.49738 -36.625,-91.4375 -2.2921,-20.6275 -0.6047,-29.69061 6,-26.15625 2.1721,1.16251 2.7252,3.21281 3.6874,13.875 3.382,36.98531 42.1194,57.14447 73.4063,40.875 43.1908,-22.85618 42.0238,-65.58407 32.0937,-96.71875 C 1733.5529,121.89985 1667.632,68.303572 1633.0625,-9.15625 z m -285.0663,25.525927 c 11.2117,9.497334 22.3208,20.231122 29.9682,29.73867 -10.7419,7.689199 -22.041,8.155217 -28.9755,4.325228 -7.801,-4.30852 -11.1817,-14.306104 -11.9205,-31.114992 -0.41,-9.3254239 2.8772,-9.7554232 10.9278,-2.948906 z m 13.4726,89.161573 c 0.3192,-0.0798 -16.8808,35.1228 -29.5,54.0625 -9.0011,16.64132 -31.2026,45.63968 -25.25,68.84375 6.8793,24.13429 32.6584,30.28576 46.375,11.71875 6.4299,-8.70377 7.8063,-7.6664 7.625,2.0625 -0.1573,18.60246 -10.0251,29.17406 -17.25,38.3125 l 47.125,0.34375 c -9.9866,-11.99845 -18.9684,-21.96496 -20,-38.25 0.028,-6.12991 1.8468,-10.58526 6.1562,-3.96875 4.8549,4.73177 8.9864,13.43697 22.25,11 13.755,-2.45483 25.7582,-20.30886 23,-37.625 -3.6949,-20.11665 -16.2682,-39.88714 -28.9062,-56.84375 -10.5482,-14.15232 -32.0172,-48.94867 -31.625,-49.65625 z m 541.0312,6 c 5.6487,0 10.2186,4.5701 10.2188,10.21875 0,5.64865 -4.5701,10.25 -10.2188,10.25 -5.6487,0 -10.2186,-4.60135 -10.2188,-10.25 0,-5.64865 4.5701,-10.21875 10.2188,-10.21875 z m 534.8438,8.15625 27.5,47.875 -31.375,55.5625 -26.1876,-53.25 z m -0.5,16.3125 -19.3438,31.9375 17.5625,32.71875 19.9687,-31.09375 z m 0.375,13.6875 10,19.3125 -12.1563,19.59375 -10.0937,-20.71875 z m -26.6563,64.875 c 2.0794,0.006 4.3033,0.44923 6.5937,1.40625 18.5255,7.74018 12.6215,35.90185 -7.1562,34.15625 -2.6109,-0.27318 -6.0447,-1.60084 -8.5312,-3.28125 -13.7209,-11.25369 -5.4619,-32.32271 9.0937,-32.28125 z m 45.2813,0.53125 c 16.2015,0.29318 25.964,22.83268 8.9062,33.375 -8.2302,4.58164 -20.5347,1.80177 -25.375,-6.34375 -4.1538,-6.9902 -2.3594,-18.64346 6.9375,-24.6875 3.3141,-1.69071 6.5303,-2.39804 9.5313,-2.34375 z m -22.5,32.15625 c 1.6169,0.13618 3.3791,8.00102 5,21.65625 0.5873,4.95001 2.1648,17.325 3.5,27.5 2.5493,21.75936 5.1793,42.02415 7.4374,63 0.4455,4.125 1.561,12.89999 2.4688,19.5 9.371,68.13016 11.4955,89.89157 9.2812,95.6875 -5.9131,20.31485 -33.6348,21.86696 -45.2187,10.0625 -8.7545,-8.92114 -10.0427,-18.71947 -6.5937,-44.25 1.9912,-14.74172 2.8097,-22.15851 8.6562,-78.5 1.3698,-13.2 3.3484,-30.75 4.4062,-39 2.3187,-22.04441 5.0587,-42.70281 8.0626,-64.4375 0.8645,-7.77524 1.8929,-11.31193 3,-11.21875 z m -454.0313,50.625 c 0,0 88.795,29.26442 156.3437,27.9375 9.9172,-0.008 11.5269,-0.0941 23.875,3.9375 7.3216,2.39021 18.8426,5.63139 25.5938,7.1875 20.8278,4.03435 39.1322,2.89366 55.3438,-3.71875 2.5472,-1.03903 6.2887,-4.17079 10.0624,-3.03125 2.3031,0.69524 5.6563,5.28125 5.6563,5.28125 -59.1466,15.70437 -197.5192,12.80676 -283.6563,-23.5 z m 456.1875,9.3125 c -0.3681,0.0613 -0.754,0.56536 -1.1875,1.25 -1.4467,2.28485 -0.2513,17.27856 5.125,64.96875 10.2698,91.09935 10.2278,93.04761 -2.2187,102.625 -6.1179,4.70699 -7.0666,6.59967 -4.125,8.3125 2.189,1.27506 2.0112,1.26948 6.4687,0.0312 10.4707,-2.90798 14.8045,-11.21804 14.7187,-28.1875 -0.065,-12.93527 -0.2174,-14.49546 -4.25,-46.28125 -1.3952,-11 -3.302,-26.525 -4.25,-34.5 -6.7401,-56.74995 -8.2935,-68.54995 -10.2812,-68.2187 z m -465.125,9.53125 c 88.398,31.65469 180.7604,40.61937 292.0938,23.53125 0,0 10.703,6.93553 16.0937,10.34375 l -3.75,0.875 1.6875,15.375 18.9062,-3.03125 c 0,0 10.2261,8.13221 17.8438,13.125 -99.2702,30.31121 -259.5963,25.08636 -358.5,-18.875 -3.7634,-2.17004 -5.9688,-3.90625 -5.9688,-3.90625 2.1337,-5.24168 4.7144,-8.35662 7.3438,-11.28125 l 18.0625,5.15625 5.2187,-16.46875 -13.8124,-5.03125 z m 23.1562,19.71875 -5.7812,16.21875 25.25,7.5 4.3125,-16.5625 z m 38.625,10.03125 -3.3437,18.46875 25.3437,4.6875 3.1563,-17.96875 z m 41.9376,8.65625 -2,17.8125 26.875,2.84375 1.6562,-18.03125 z m 184.7187,0.28125 -22.875,2.5 1.4375,15.6875 23.125,-2.71875 z m -40.3437,4.53125 -22.6876,1.5 0.7813,16.4375 22.8125,-1.4375 z m -102.2188,0.34375 -0.031,17.46875 23.25,0.875 0.2812,-17.84375 z m 63.9375,2.1875 -21.4375,0.0937 -0.094,16.625 21.6563,0.0937 z m -248.5625,2.9375 c 2.3106,-0.0686 7.5969,5.07926 9.7812,10.84375 4.2961,11.33559 2.3252,23.90224 -4.4062,28.0625 -9.162,5.66244 -19.9284,-3.20532 -13.625,-11.21875 1.1143,-1.41668 2.9083,-2.84102 4,-3.1875 4.7108,-1.49515 5.8105,-8.91284 3.25,-21.75 -0.3786,-1.89802 0.096,-2.72314 1,-2.75 z m 34.2812,4.34375 c 95.6864,31.32571 204.2629,41.84812 316.125,18.9375 0,0 -53.007,216.49037 -54.1562,216.59375 z M 1919,370.40625 c 5.036,10e-6 5.951,8.54972 1.4062,13.09375 -5.8022,5.80231 -16.8712,1.14717 -14.5624,-6.125 0.6708,-2.11344 9.8303,-6.96877 13.1562,-6.96875 z m 27.5,5.03125 c 1.0435,-0.0768 3.0195,1.99602 6.1562,6.21875 10.7488,14.46913 11.5904,30.63503 1.9688,38 -11.2803,8.63466 -19.526,-4.76515 -10.125,-16.46875 2.4351,-3.03149 2.7935,-8.63185 1.3438,-21.03125 -0.5171,-4.41556 -0.3873,-6.64196 0.6562,-6.71875 z m 371.0312,5.21875 c 1.235,-0.0407 3.4254,0.91403 7.8126,3.0625 6.8585,3.35926 9.2389,8.27272 5.9374,12.25 -4.7973,5.78049 -17.9448,-5.66722 -15.4687,-13.46875 0.3766,-1.18672 0.7588,-1.81211 1.7187,-1.84375 z m -10.3124,7.53125 c 1.7192,0.17096 4.4688,3.3199 7.6562,9.71875 2.0473,4.11005 3.2365,5.28526 6.6875,6.53125 8.182,2.95408 9.6998,11.42766 2.5,13.9375 -7.8181,2.72544 -13.6422,-2.89397 -17.2187,-16.625 -2.3593,-9.05532 -1.8363,-13.7823 0.375,-13.5625 z m -342.2813,6.0625 c 1.1868,-0.0722 3.4594,2.58876 7.0625,7.90625 10.6949,15.78376 7.0091,46.08385 -6.4688,53.15625 -5.9409,3.11768 -10.0778,2.45341 -14.8437,-2.3125 -6.966,-6.96602 -5.2514,-12.47606 5.0937,-16.28125 8.8069,-3.23909 11.6541,-13.26072 8.9376,-31.5 -1.0862,-7.28767 -1.1264,-10.88693 0.2187,-10.96875 z m 50.9375,5 c 65.3465,53.88469 124.3394,111.65397 200.375,179.09375 18.0584,-55.55603 44.3816,-170.89946 44.4688,-171.28125 -2.874,2.37035 -127.7267,20.08452 -244.8438,-7.8125 z m 244.8438,7.8125 c 0.06,-0.0494 0.079,-0.0895 0.031,-0.125 0,0 -0.031,0.12437 -0.031,0.125 z m 40.5312,-7.65625 c 1.088,0 4.2376,8.10524 6.0312,15.5 1.6258,6.69974 8.0967,17.92111 10.5938,18.34375 12.8772,2.17947 18.3606,9.35815 12,15.71875 -4.6709,4.67087 -14.7827,2.02353 -19.6562,-5.125 -9.1598,-13.43453 -15.4125,-44.43754 -8.9688,-44.4375 z m -729.125,7.4375 c 7.7706,0.0629 15.2379,4.96149 17.125,15.0625 2.196,11.75442 -4.4492,20.30185 -10.0717,18.93278 -6.1092,-2.28411 -8.1867,-11.96232 -8.1867,-11.96232 0,0 -1.4532,7.89095 -3.9604,11.87329 -5.4788,8.36177 -17.0004,-4.05413 -14.9374,-16.09375 2.0137,-11.75625 11.2245,-17.88374 20.0312,-17.8125 z m 465.0938,3.09375 c 71.163,10.69194 132.3873,13.46396 217.2812,4.25 l -40,155.3125 z m -53.75,0.25 c 1.0541,0.0689 3.2177,1.96163 6.5937,5.53125 11.059,11.69317 14.2495,27.91785 7.0625,35.96875 -4.374,4.89976 -7.319,5.4649 -11.9688,2.28125 -5.9391,-4.06706 -6.3855,-10.18311 -0.9374,-13 5.009,-2.59027 5.4611,-8.27931 1.5,-19.0625 -2.9544,-8.0405 -3.7915,-11.81943 -2.25,-11.71875 z m -464.25,4 26,10.78125 9.3124,21.96875 -25.9374,-6.6875 z m 98.3124,2.90625 -7.7187,21.875 -20,7.46875 7.7813,-23.65625 z m 678.2188,4.59375 c 0.9624,-0.0148 2.3906,2.75315 4.125,8.46875 4.2938,14.15003 6.114,17.72579 10.0312,19.59375 6.3814,3.04277 6.8455,10.78241 0.8126,13.53125 -3.8287,1.74414 -5.0865,1.38574 -7.8126,-2.1875 -4.2454,-5.5659 -7.6619,-16.22125 -8.2812,-25.78125 -0.5806,-8.9619 -0.1123,-13.60593 1.125,-13.625 z m -289.4375,9.875 c 0.7533,-0.0524 1.8621,1.05347 3.5,3 10.1016,12.00514 11.2008,30.42242 2.1563,35.9375 -8.7601,5.3412 -21.0117,-5.67944 -13.375,-12.03125 0.6874,-0.57188 2.2693,-1.85019 3.5312,-2.8125 2.1274,-1.62247 2.3092,-2.56898 2.5,-13 0.1417,-7.74602 0.432,-11.00634 1.6875,-11.09375 z m 76.7418,1.27937 124.4717,113.11786 28.5767,-111.89977 c -49.1622,4.41417 -100.5266,3.10262 -153.0484,-1.21809 z m -305.7731,5.68938 c 39.3257,41.52332 90.7778,75.08933 103,116.375 21.9056,56.83573 5.8428,122.77451 -45.4374,160.5 -28.3058,21.41923 -56.0475,43.96433 -79.125,71.1875 -37.8665,40.30977 -63.1389,84.35685 -88.4376,116.3125 -4.2877,5.3725 -15.5937,22.28125 -15.5937,22.28125 0,0 -5.535,6.326 -24.0313,-9.1875 -49.0731,-43.63472 -100.5732,-75.28614 -153,-105.4375 l 22.1876,-12.40625 c 43.7692,24.95474 98.1821,60.4758 147.1283,101.87167 0,0 38.92,-56.83624 51.3404,-73.12167 18.0119,-23.3728 30.6643,-38.4264 47.4375,-56.5 42.8357,-52.8851 87.0671,-70.37726 105.4688,-97.15625 26.9578,-39.23092 28.1126,-85.73786 5.9374,-125.4375 -21.8677,-37.88163 -64.3861,-63.85508 -92.625,-95.21875 z m 373.25,3.0625 48.6563,0 c 0,0 -7.1456,5.96093 -12.625,9.625 -3.437,2.29829 -7.4545,1.98264 -15.0313,-1.1875 -7.3593,-3.07945 -21,-8.4375 -21,-8.4375 z m 55.7188,0 11.3438,0.34375 c -8.4823,10.65379 -17.1766,17.5257 -28.5626,27 -1.4716,0.6333 -2.2925,0.89274 -5.7187,-0.21875 -23.2564,-7.69377 -44.5998,-17.47115 -67.25,-26.71875 l 20.1875,-0.0937 c 0,0 9.7149,3.10317 24.3125,9.15625 16.7381,6.94065 21.0733,9.07776 27.5313,4.84375 6.2254,-4.14067 11.3784,-10.37169 18.1562,-14.31255 z m 22.9688,0 -4.0626,14.90625 c -6.786,8.47521 -20.509,18.24416 -31.9687,27.875 -2.6867,1.40183 -2.5968,1.65585 -14.3437,-2.90625 C 2135.595,464.67284 2114.6875,453.75 2114.6875,453.75 l -8.7813,-7.84375 c 0,0 11.2779,3.22579 18.7188,6.15625 5.0757,1.99895 13.718,5.27977 19.2188,7.3125 5.4999,2.03272 17.6635,7.20241 25.7812,10.40625 18.7204,7.38844 17.6848,7.61474 35.625,-8.21875 19.4265,-17.14524 23.9688,-19.96875 23.9688,-19.96875 z m -655.2188,1.375 18.875,21.625 -25.1562,21.15625 -19,-22.375 z m 716.1696,0.0223 c 4.3405,8.12342 7.2543,17.73118 14.2992,24.57143 5.3061,5.05917 6.6278,8.96158 3.4776,11.8125 -8.2093,5.07599 -9.6254,-3.12131 -12.1687,-8.47603 -4.4738,-9.43381 -9.9355,-22.18569 -5.6081,-27.9079 z m -682.5446,2.16518 c 0.4795,-0.0151 0.9693,-0.008 1.4688,0 20.1269,0.30427 24.8788,30.0466 5.9374,37.1875 -6.7888,2.55946 -14.6026,1.39676 -18.8124,-2.8125 -4.0848,-4.0843 -4.6584,-7.53666 -1.8551,-9.67751 4.3661,-3.10454 14.7598,-3.31649 14.7598,-3.31649 0,0 -9.4364,-3.1997 -13.64,-5.55562 -8.2741,-4.71455 -1.1065,-15.29721 12.1415,-15.82538 z m 414.4062,0.0312 c 1.1389,0.0627 3.0959,2.3787 5.875,6.96875 10.1537,16.76862 9.6195,48.67402 -0.9687,56.75 -5.5049,4.19882 -12.3633,3.5977 -16.9687,-1.5 -6.0724,-6.72062 -4.2045,-13.51231 4.8124,-17.5 8.7058,-3.84979 10.4805,-12.45225 6.9376,-33.71875 -1.2357,-7.4126 -1.1509,-11.08067 0.3124,-11 z m -488.4062,0.53125 c 6.0099,-0.21231 11.8052,2.13563 14.6875,6.875 2.1295,3.50149 1.0967,6.07568 -2.9237,7.82323 -4.8913,1.9338 -14.1717,3.68484 -14.1717,3.68484 0,0 9.001,1.48148 14.4375,3.68871 6.8111,3.00454 6.2802,8.5209 -3.6903,13.25858 -19.1968,9.12174 -37.3335,-15.80362 -21.4955,-30.11161 3.6885,-3.33235 8.4818,-5.05362 13.1562,-5.21875 z m 504.8125,12.0313 c 0.1419,-0.0229 0.2974,-0.021 0.4687,0 1.763,0.21645 5.0146,2.76697 8.2813,7.09375 11.4447,15.15835 13.4315,37.93533 3.6875,42.375 -10.2921,4.68941 -17.6945,-4.98158 -10.2812,-13.4375 5.2487,-5.98773 4.5969,-14.7486 -2.375,-32.09375 -1.0147,-2.52275 -0.7747,-3.77683 0.2187,-3.9375 z m 247.1563,0.71875 c 0.9023,-0.0692 2.5444,3.5765 5.1874,10.9375 5.819,16.20424 10.7944,23.00003 16.7813,23 7.5249,0 11.4672,10.31109 5.5313,14.46875 -11.7282,8.21426 -27.092,-11.91223 -28.2188,-37 -0.3385,-7.53763 -0.1843,-11.33709 0.7188,-11.40625 z m -62,8.09375 -3.4688,13.21875 c 0,0 -7.9969,7.77503 -13.7188,12.71875 -9.0864,7.85178 -11.3243,9.41291 -18.5,6.96875 -11.041,-3.81147 -21.9678,-7.26479 -33.4687,-10.75 l -26.5937,-22 60.6874,23.6875 c 0,0 5.2608,1.5501 7.0938,-0.28125 7.9483,-7.941 16.6763,-14.09853 27.9688,-23.5625 z m 57.25,12.375 c 0.7613,-0.1732 1.5282,0.79792 2.0624,3.21875 2.7485,12.4501 6.7366,21.47223 10.0938,22.875 4.2538,1.77733 5.8844,5.46344 4.0938,9.21875 -5.1651,10.83055 -18.75,-8.29799 -18.75,-26.40625 -8e-4,-5.13877 1.2303,-8.61759 2.5,-8.90625 z m -219.0313,0.875 c 0.7398,-0.0454 1.937,1.06199 3.8125,2.9375 8.3905,8.39048 10.9274,31.5726 4.1875,38.3125 -9.7393,9.7393 -20.14,-4.73693 -10.6875,-14.875 2.4996,-2.68096 2.5042,-2.87051 1.9062,-14.75 -0.4158,-8.27052 -0.4516,-11.54938 0.7813,-11.625 z m -508.375,2.3125 -6.5625,21.75 -20.9688,5.40625 4.9063,-17.90625 z m 25.125,2.21875 c 1.6636,-0.0673 3.5486,0.56423 5.5313,2 8.5425,6.18821 9.2439,16.76158 5.25,24.5625 -3.8199,7.61797 -11.6307,9.80141 -19.1876,9.03125 -9.8026,-1.0901 -17.203,-7.92055 -16.6874,-18.375 0.1707,-5.2405 2.4557,-11.04914 6,-13.53125 2.4951,-1.74769 4.542,-1.02953 6.7043,2.55476 2.0149,3.50757 5.4554,11.44597 5.4554,11.44597 0,0 0.1123,-8.14671 1.2661,-12.33783 0.9407,-3.33649 3.0153,-5.2431 5.6679,-5.3504 z m 16,1.90625 15.1875,5.1875 6,20.625 -17,-6.59375 z m 865.9375,3.84821 c 0,0 4.3575,1.84246 25.0938,18.30804 5.1863,4.11834 13.9374,12 13.9374,12 l -0.5,269.15625 c 0,0 -40.8912,-22.10195 -46.1874,-27.34375 -2.8244,-3.01547 -1.4607,-11.46719 -0.4688,-26.8125 4.8102,-40.30693 6.7641,-71.19607 11.9375,-108.5 3.6166,-41.57738 11.6083,-53.51637 -16.2256,-71.14761 29.9586,-18.80939 21.5025,-48.075 2.7033,-60.2631 z m -244.25,1.02679 -2.75,12.3125 c -9.8595,16.8767 -18.6884,16.01141 -33.7812,8.1875 l -18.125,-15.40625 c 11.7279,2.44411 18.0359,6.20136 29.5,9.8125 5.6915,1.57271 7.7754,0.56225 11.7812,-3.03125 4.6051,-4.19102 8.0688,-7.32195 13.375,-11.875 z m -134.375,6.46875 c 6.1437,6.70392 7.7454,13.30794 7.2188,29.625 -1.1825,11.60458 -0.6642,20.24472 -10.1876,26.75 -4.6514,3.04781 -12.6895,3.05369 -16.2812,0.0312 -8.6183,-5.7706 -3.8669,-17.31339 7.4265,-17.87754 7.1241,-0.1259 10.0561,-23.41666 6.011,-37.96621 -0.6278,-2.25829 -0.4658,-3.73996 0.6534,-3.84626 1.1192,-0.10631 3.205,1.15155 5.1591,3.28381 z m 192.5938,-0.875 c 1.3852,-0.0152 3.8288,3.53062 5.2812,9.3125 2.1038,8.37542 5.06,13.0767 9.6875,15.4375 5.9369,3.02877 7.8555,8.84857 4.0625,12.28125 -7.5535,6.83575 -15.2726,-1.36175 -17.75,-18.84375 -0.1164,-1.98611 -3.5838,-18.00156 -1.2812,-18.1875 z m 162.125,2.875 c 16.8417,0.26221 26.3732,12.05263 26.3505,26.33663 -0.1844,10.29951 -5.8105,20.77222 -16.1719,25.11873 -24.7382,7.28205 -38.2418,-9.27787 -38.0069,-25.38703 0.1895,-12.99942 10.9866,-26.33054 27.8283,-26.06833 z m -340,9.34375 c 14.1676,14.16766 14.8025,44.46876 0.9374,44.46875 -16.6351,-5.50651 -3.6583,-15.32351 -3.3405,-17.875 1.2998,-10.4373 -1.0958,-17.12746 -3.5345,-26.875 -1.0749,-5.76372 4.3775,-1.4073 5.9376,0.28125 z m 340.9062,-1.375 c -2.9725,-0.0895 -2.7591,2.90122 2.6875,7.59375 9.8763,8.50895 5.0407,24.21474 -7.4687,24.28125 -5.7731,0.0307 -7.1855,3.91755 -2.1563,5.9375 19.4288,7.80332 32.6922,-21.73102 15.2813,-34.03125 -3.6362,-2.56831 -6.5603,-3.72755 -8.3438,-3.78125 z m -742.9937,3.96748 c 15.6335,5.32863 21.0256,35.11559 21.6187,45.62627 0.7032,18.28466 -7.811,48.18181 -15.4062,54.15625 -19.665,15.46785 -28.8837,-39.21433 -12.0626,-74.40625 1.4725,-2.8859 3.314,-6.78267 2.625,-13.96875 -0.6835,-7.13054 0.52,-11.35478 3.2251,-11.40752 z m 516.6499,2.87627 c 0,0 -1.9694,8.92955 -4.0624,13.8125 -2.4225,5.64974 -4.2038,5.82766 -9.8438,1 -3.14,-2.68769 -8.3438,-8.25 -8.3438,-8.25 4.9094,0.76767 9.2989,3.31266 13.4688,1.25 4.4492,-2.20085 8.0368,-6.32905 8.7812,-7.8125 z M 2270.5,514.875 c 1.1098,0.0378 2.5262,3.14886 4.4062,9.3125 5.1468,16.87118 9.6479,23.21873 16.4688,23.21875 11.1743,-10e-6 13.6094,13.45416 3.0625,16.90625 -3.9088,1.27938 -5.2247,1.26904 -10.2187,-0.0625 -7.5244,-2.00598 -17.8164,-27.39187 -16.3438,-40.3125 0.6925,-6.07599 1.5152,-9.10031 2.625,-9.0625 z m -688.125,9.8125 c 4.1018,-0.0992 5.7148,1.92149 8.125,6.90625 2.7437,5.67449 9.9421,12.88889 16.0312,16.03125 14.6804,7.21592 30.1455,12.85362 44.6563,20.09375 18.8118,9.45063 35.6688,38.38745 24.125,41.40625 -4.1841,0.96526 -9.0001,1.01556 -13.2813,0.625 -1.3986,-0.73281 -4.1272,-3.89516 -6.0624,-7.0625 -8.5798,-14.04102 -24.6269,-27.78874 -49.375,-34.21875 -17.4481,-4.53323 -33.0787,-26.02489 -36.4376,-36.125 -0.8698,-2.61576 -0.9105,-4.66837 1.4376,-5.34375 4.9638,-1.42803 8.3201,-2.25297 10.7812,-2.3125 z m 530.5,1.75 c 0.7786,-0.1277 1.9247,0.86804 3.6562,2.71875 10.3856,11.09954 11.6747,31.48319 2.3438,37.25 -10.115,6.2514 -18.9711,-4.08726 -11.0312,-12.875 3.5,-3.87408 3.4999,-3.8712 3.5,-15.5 -8e-4,-8.0133 0.2336,-11.38092 1.5312,-11.59375 z m 151.1875,12.9375 c 1.2464,0.0498 3.1159,3.49681 5.375,10.28125 3.2061,9.62848 3.6437,10.38557 7.3125,12.28125 6.2035,3.20545 7.2101,8.00932 2.6562,12.5625 -8.4876,8.48761 -17.0354,-5.17267 -17.0624,-27.25 -0.01,-5.3078 0.6189,-7.91898 1.7187,-7.875 z m -135.7602,1.52617 c 0.772,0.0738 2.9273,1.76668 4.6039,3.75508 12.7228,15.08762 10.1632,50.41764 -4.0312,55.71875 -4.7395,1.77002 -6.1816,1.86725 -9.125,0.59375 -10.5814,-4.57818 -9.2907,-15.75016 3.75,-22.84375 9.7516,-5.30446 2.8011,-37.08528 4.8023,-37.22383 z m -650.5211,11.13008 52.5313,26.0625 c 0,0 14.3993,30.3179 21.0313,41.6875 4.5507,7.88305 13.6585,15.49213 4.25,20.75 -15.805,10.71322 -24.766,16.81487 -24.625,23.46875 0.1147,5.38319 6.8065,10.86993 15.8124,21.46875 12.936,15.22311 12.8088,11.71686 1.0626,34.9375 -9.0026,16.28467 -16.6563,53.15625 -16.6563,53.15625 l -53.0625,27.34375 c 15.7893,-37.71277 34.3808,-69.80816 55.2188,-92.75 -15.4787,-11.49504 -28.4905,-23.45882 -42.0626,-39.34375 10.0148,-13.41183 23.2342,-24.24531 35.4376,-35.90625 -24.7832,-28.01252 -40.3088,-54.88178 -48.9376,-80.875 z m 664.375,0.46875 c 0.084,-0.0135 0.1871,-0.006 0.2813,0 2.2037,0.14404 7.2329,5.61968 11.6563,14.40625 5.7125,11.3492 6.2645,25.6424 1.1874,30.71875 -8.7508,8.75085 -20.1482,-2.49654 -11.9687,-11.8125 5.7706,-4.19252 4.1998,-14.61975 -0.3437,-25.46875 -2.1016,-5.20137 -2.0689,-7.64161 -0.8126,-7.84375 z m -670.1874,5.09375 c 13.6687,29.04127 28.9543,52.66223 44.625,75.03125 l -34.1876,35.875 c 10.5244,12.21276 23.2828,25.33048 41.1876,40.5625 -21.9842,24.44741 -36.4059,58.6787 -50.8438,91 z m 786.25,0.625 c 1.1845,0.0882 2.8662,3.60842 4.5937,10.6875 2.1781,8.92573 3.6744,11.20824 8.875,13.4375 8.2714,3.54552 8.4602,11.53421 0.3437,14.40625 -2.9761,1.0532 -8.5403,-1.93499 -10.8437,-5.84375 -3.0346,-5.58264 -4.5966,-13.09413 -4.5625,-19.96875 -0.4818,-8.50867 0.2506,-12.81867 1.5938,-12.71875 z m 189.5531,5.37902 c 12.9193,3.62084 17.5908,16.57256 15.0719,40.55848 -3.3744,32.08235 -7.3399,67.77655 -10.5626,97.25 -3.7155,34.00101 -5.8608,51.66251 -6.6874,53 -2.6218,4.2409 -3.0547,-11.7335 -1.1563,-29.5 2.8899,-25.39129 4.4851,-47.62828 6.9375,-73 5.4909,-56.44885 4.1484,-74.29076 -6.0625,-79.5 -7.8991,-4.02981 -11.2954,-1.65279 -5.4687,3.84375 11.1128,8.56776 10.7638,12.1529 -1.125,151.15625 -1.2191,14.38027 -1.7188,24.5625 -1.7188,24.5625 l -15.0938,-9.375 c 0,0 -1.1196,-11.91468 -2.5312,-29.90625 -3.4087,-33.88742 -5.3976,-70.01742 -7.6562,-102.5 -2.4235,-34.65235 4.0655,-46.78047 25.5624,-47.625 3.4364,-0.13148 7.2505,0.14419 10.4907,1.03527 z M 2170.44,583.73731 c 1.6464,4.58883 9.1406,38.77135 -10.0381,28.9559 -5.1101,-2.88456 -5.3908,-7.39938 -1.6207,-11.78696 4.2173,-4.90714 5.2068,-11.96252 3.0938,-22.03125 -1.2861,-6.12835 -2.8422,-11.20812 -2.8422,-11.20812 3.6973,1.35148 10.9774,14.87245 11.4072,16.07043 z m -570.2838,-10.71945 c 16.2239,3.0803 34.045,12.54399 45.5319,24.37957 7.1247,7.57374 6.7644,13.67271 -4.3756,14.38382 -10.7272,1.57761 -10.9561,3.32204 -16.081,-1.11358 -2.3016,-1.80051 -6.7803,-6.22137 -11.8877,-7.01142 -16.1881,-2.50407 -24.4483,-32.77638 -13.1876,-30.63839 z m 654.875,8.95089 c 1.7109,2.75189 1.8901,8.157 3.3126,12.03125 2.4232,10.83057 9.8533,18.84517 16.5312,17.84375 4.4848,-0.54017 10.6799,0.81673 11.3438,6.1875 1.303,4.54349 -1.0787,8.84333 -6,10.8125 -5.555,2.22232 -11.8231,0.8581 -16.5626,-3.59375 -9.9866,-9.38202 -16.0838,-40.00685 -8.625,-43.28125 z m -78.0384,0.42417 c 5.8183,2.23271 13.2447,20.86226 14.0384,35.63833 -0.023,10.58245 -1.6557,23.89625 -10.7812,28.9375 -5.7953,2.99686 -11.7876,1.5015 -14.4062,-3.5625 -3.2133,-6.21234 -0.828,-12.63056 5.8124,-15.625 8.1241,-3.66313 10.7637,-20.13495 5.8126,-36.21875 -0.2789,-2.68075 -4.3411,-10.27919 -0.476,-9.16958 z m -619.7428,7.73208 42.8125,21.6875 c -6.2294,8.50542 -11.1257,16.39373 -14.5,25.375 -13.6061,-15.43381 -20.7396,-31.16461 -28.3125,-47.0625 z m 635.8333,7.42417 c 0.7358,-0.0175 3.1996,2.33325 5.3542,4.41958 10.6854,10.34691 15.2948,29.13354 8.8437,36 -5.1574,5.48946 -14.1795,5.11005 -15.6874,-0.65625 -0.5446,-2.82698 2.4562,-8.11735 3.7812,-10.65625 1.9734,-3.78124 2.3279,-14.57767 -0.6562,-22.46875 -1.3383,-3.53707 -2.5815,-6.61586 -1.6355,-6.63833 z m -297.4271,4.26333 48.375,1.65625 162.0626,145.96875 -15.2188,-0.34375 -148.9062,-135.6875 -46.3438,0.125 z m -278.7085,26.296 c -18.4684,29.34927 -23.5103,66.3517 -12.1665,99.23525 8.6115,23.32068 -10.1901,24.71491 -17.9018,9.34795 -5.929,-11.49002 -9.3417,-31.48943 -7.5354,-52.78545 2.5267,-34.43727 18.4209,-69.00621 31.1475,-73.15787 12.9228,-4.21566 10.0849,12.67411 6.4562,17.36012 z M 2281,698.75 c -4.9159,22.95844 -14.0193,34.38546 -26.9375,39.15625 -52.9094,19.53986 -75.9589,-87.16938 -26.875,-112.6875 46.7819,-15.55032 60.3052,43.20912 53.8125,73.53125 z m -388.2812,-69.71875 45.625,0.9375 c 41.5933,37.82853 86.3031,73.12678 130.8124,119.125 l -21.5312,0 c 0,0 -6.2912,-5.9842 -7.7812,-7.40625 -40.2312,-35.93312 -70.0319,-65.26607 -108.8126,-98.65625 l -40.7187,-1.125 z m 348.095,7.03633 c -24.6694,0.99792 -26.6789,34.42103 -25.9401,47.08106 1.7961,18.24223 9.0668,45.19624 32.2201,43.07011 16.9905,-1.69543 24.8528,-21.81432 23.301,-45.97684 -1.4603,-22.73628 -10.7346,-44.19574 -29.581,-44.17433 z m -352.2513,11.08867 40.0313,0.90625 c 35.2649,30.75548 72.5623,64.16473 109.625,101.03125 l -17.4688,0 c 0,0 -4.5654,-4.35143 -5.9375,-5.75 -30.0039,-27.12283 -60.5014,-57.34682 -89.5937,-81.71875 L 1883.6875,660 z m 352.9063,1.3125 c 7.0055,2.59493 8.1762,19.6545 2.0624,26.72321 -4.1891,4.8442 -13.8232,-4.32683 -14.6874,-15.87946 -0.5268,-7.0424 6.323,-13.17807 12.625,-10.84375 z m -661.625,2.125 c -3.2214,11.03181 -5.3388,23.43223 -6.6563,36.84375 l -16.75,-21.28125 z m 674.3437,20.53125 c 4.0928,0 7.4056,3.31343 7.4063,7.40625 0,4.09282 -3.3135,7.40625 -7.4063,7.40625 -4.0928,0 -7.4056,-3.31343 -7.4063,-7.40625 0,-4.09282 3.3135,-7.40625 7.4063,-7.40625 z m -336.3437,3.71875 79.7812,75 -22.7188,0.25 -65.4374,-59.3125 -41.5313,-1.5625 8.125,-14.15625 z m 310.2812,1.28125 c 4.0928,0 7.4062,3.31343 7.4062,7.40625 6e-4,4.09282 -3.3134,7.40625 -7.4062,7.40625 -4.0928,0 -7.4062,-3.31343 -7.4062,-7.40625 -6e-4,-4.09282 3.3134,-7.40625 7.4062,-7.40625 z m 94.9688,0.15625 c 44.9761,34.95429 108.4604,81.32996 174.4062,118.9375 0,-0.12892 -10.8672,8.53996 -20.875,11.28125 -51.3237,-28.29448 -112.3927,-68.2039 -150.2188,-100.5625 -35.7104,52.56528 -104.3037,148.19616 -165.2812,192.34375 -38.4805,27.5278 -57.8615,61.46041 -57.75,101.125 0.1153,41.03105 14.6039,67.73875 54.9688,101.34375 26.0378,21.6776 54.5,49.3438 54.5,49.3438 L 2197.875,1163 c -2.4903,-0.3032 -43.6745,-35.7876 -85.3438,-77.625 -22.8979,-22.9905 -33.0856,-73.4506 -29.1874,-100.6875 5.2993,-37.02999 17.6426,-63.56962 52.75,-92.15625 13.4794,-10.43288 27.0929,-18.53855 38.9687,-30.40625 109.0745,-116.67116 148.0313,-185.84375 148.0313,-185.84375 z m -73,19.0625 c 4.1245,8.47719 6.3917,19.59761 -6.5313,20.34375 -7.6556,0.44201 -12.0394,-12.30271 -5.4063,-23.65625 5.0208,-8.93793 9.49,-1.33039 11.9376,3.3125 z m -384.375,-2.25 43.0624,1.28125 c 0,0 42.4678,37.01658 63.9063,57.53125 l 144.25,0 c 79.3325,-2e-5 144.5354,0.31741 144.9063,0.6875 0.9867,0.98671 -10.25,16.0625 -10.25,16.0625 l -475.75,0.28125 c 0.098,-0.0736 29.3865,-26.15367 39.875,-33.46875 18.5737,-12.95418 35.5968,-25.01408 50,-42.375 z M 1574.1875,711 c 3.1123,11.48661 5.7178,23.20006 11.0937,33.78125 L 1552.25,762.3125 c 6.0704,-17.48529 13.0198,-34.30176 21.9375,-51.3125 z m 917.25,95.5 c -6.5608,17.87641 -23.7292,54.35412 -44.4687,82 -4.118,5.29905 -6.9376,9.4375 -6.9376,9.4375 l 40.4688,38.75 -35.125,37.34375 c 19.7275,20.5271 36.4113,51.96785 45.1875,76.99995 -15.9326,-6.2934 -24.8786,-10.0971 -44.5313,-21.0312 -5.5566,-13.9385 -11.2233,-28.7082 -17.4687,-41.4375 -14.3351,-29.04471 -14.1393,-26.2033 -2.4375,-34.75 17.1306,-12.512 22.233,-15.41284 17.7812,-21.71875 -3.1302,-4.43419 -23.3421,-28.43341 -24.5624,-29.1875 -1.8586,-1.14831 -1.032,-4.6992 2.4062,-10.375 11.711,-21.03289 21.3108,-44.21259 27.2812,-64.8125 z m 7.6563,1.46875 1.0624,244.18745 c -14.494,-29.1728 -29.5724,-58.97282 -46.375,-77.5937 -0.6332,-1.26637 36.6563,-37.6875 36.6563,-37.6875 -13.6671,-12.66216 -21.6611,-20.23001 -40.75,-37.8125 18.5907,-26.79385 33.3093,-61.82344 49.4063,-91.09375 z m -1026.2813,8.46875 46.3973,26.93304 c -2.4555,34.4446 -5.5473,79.66193 -10.3036,125.53571 -3.9845,35.79105 -5.6284,52.28565 0.7162,62.21905 5.3735,7.2652 19.8643,15.1247 19.8643,15.1247 -24.4017,9.8821 -33.8112,39.0149 -6.4555,60.8125 0,0 -6.6437,5.2256 -9.5937,8.375 l -38.0625,-28.4687 z m 726.2187,12.34375 c -11.5669,12.96127 -29.7073,32.18171 -43.625,41.375 -18.5633,12.26232 -44.6247,35.7992 -43.375,36.15625 0,0 -27.3164,-0.13712 -45.8124,-0.875 L 2002.4062,848.5 c 0,0 2.2805,-0.83881 -84.5624,-0.125 -112.2364,0.92253 -203.1876,-0.3125 -203.1876,-0.3125 l 12.75,-17.90625 z m 227.4688,11.1875 c -6.2856,20.18783 -16.0313,38.84846 -28.375,56.34375 -2.8596,-12.41149 -4.4306,-25.58311 -10.4062,-36.125 z m -901.4062,6.46875 5.5624,3.96875 c 0,0 -3.3161,42.13572 -4.4062,54.46875 -1.9564,22.78386 -2.9179,43.31824 -4.9062,66.53125 -3.9965,46.08975 -3.3291,52.88295 5.7187,59.99995 6.9582,5.2075 11.7034,2.842 5.5313,-3.75 -4.0658,-5.2278 -4.0477,-5.1224 -5.2813,-12.8124 -0.8572,-5.3445 -0.723,-13.3177 0.5,-34.93755 6.8882,-121.77207 8.3181,-125.86905 8.4687,-125.90625 l 13.8706,8.96875 c -0.77,1.86992 12.7086,122.73568 11.3393,152.78125 -1.6011,35.132 -48.8878,27.3744 -51.1294,1.2991 -0.9289,-5.9925 8.0445,-104.64285 8.0445,-104.64285 z m 385.7187,7.09375 18.5625,0.53125 114.5,105.25 39.0312,0.84375 -3.4062,13.28125 -37.7188,-0.0937 z m 71,0 17.9687,0 65.5313,59.40625 40.3437,0.625 -7.6874,11.4375 -40.125,-1.15625 z m -22.375,0.0625 96.875,87.34375 33.0313,1.71875 -5.0938,11.9375 L 2045.0938,953.5 1936.25,853.8125 z m -93.4063,0.3125 20.125,0 151.4376,136.34375 39.6874,0.71875 -0.5937,12.28125 -47.7813,-0.2188 z m 509.625,3.875 c 7.9888,2.0049 11.9285,9.74913 17.5626,38.46875 6.5697,33.49104 -7.6666,87.86224 -25.5,98.0625 -9.2271,7.2576 -19.2683,-0.43818 -12.75,-9.90625 21.2773,-30.9061 24.0866,-81.47191 11.5,-109.75 -3.9889,-9.08934 0.1187,-18.51166 9.1874,-16.875 z m -642.5,5.03125 c 48.3896,0.57818 60.8958,99.95642 13.2947,113.89286 -30.9204,4.56521 -46.8444,-23.42208 -51.3323,-48.67896 -5.2869,-31.37969 8.5378,-65.56637 38.0376,-65.2139 z m -26.5968,59.61771 c 2.8908,19.91621 15.2422,42.72431 33.1974,40.77481 23.6163,-2.56417 26.5801,-34.0908 24.2405,-49.95988 -2.8233,-19.15007 -13.3794,-36.50832 -30.2473,-37.46389 -25.1481,-1.42464 -29.4208,31.28351 -27.1906,46.64896 z M 1732.5,883.75 c 6.7493,-0.11004 11.7198,8.9059 9.875,20.09375 -1.1944,7.24357 -3.9504,16.1592 -12.0938,10.10268 -3.7929,-3.46079 -7.1911,-13.61227 -6.2789,-21.19676 0.5997,-4.98523 3.0616,-8.86143 8.4977,-8.99967 z m 667.25,22.96875 22.7188,26.28125 -25.8126,18.09375 c 3.6264,-13.82971 4.8256,-28.53596 3.0938,-44.375 z m -650.7812,2.375 c 4.0928,0 7.4062,3.34468 7.4062,7.4375 0,4.09282 -3.3134,7.40625 -7.4062,7.40625 -4.0933,0 -7.4063,-3.31343 -7.4063,-7.40625 0,-4.09282 3.313,-7.4375 7.4063,-7.4375 z m -26.5,4.5625 c 4.0928,0 7.4062,3.31343 7.4062,7.40625 0,4.09282 -3.3134,7.40625 -7.4062,7.40625 -4.0934,0 -7.4371,-3.31343 -7.4376,-7.40625 0,-4.09282 3.3442,-7.40625 7.4376,-7.40625 z m 15,9.5625 c 3.7226,1.12896 6.0977,4.54913 8.0936,7.51835 4.9566,7.37328 5.6036,16.62738 2.0805,20.49951 -7.115,8.4558 -18.2307,-0.58546 -16.8929,-13.64286 0.9808,-9.57361 3.5221,-15.34449 6.7188,-14.375 z m 63.4374,29 c 10.6243,10e-6 13.6222,12.52965 4.4688,18.65625 -5.9515,3.9834 -7.2728,16.93755 -3.5938,34.875 2.9832,12.9547 1.4186,14.9579 -6.3124,3.2812 -13.2054,-21.16775 -9.7977,-56.81245 5.4374,-56.81245 z m -24.8437,6.8125 c 9.3205,-0.35551 12.3124,6.76447 6.875,12.21875 -3.1862,3.53401 -2.8679,12.86236 0.6875,20.53125 5.0296,11.10455 3.8455,14.45895 -5.5625,3.78125 -13.0039,-13.90217 -12.8036,-36.11917 -2,-36.53125 z m 616.0625,5.40625 c 10.5738,14.05814 19.9448,32.4009 28.5,53.1875 l -45.8438,-21.0625 z m -669.9286,56.5203 c -3.2451,-3.7551 -4.816,-15.9176 -7.4776,-21.11405 -2.0668,-6.2369 -3.8637,-9.87051 -7.2321,-9.66071 -19.3715,1.64167 -18.5498,-16.88141 -7.431,-20.37938 23.0141,-7.24023 31.4062,48.32074 22.1407,51.15414 z m 96.1072,-18.6951 c -3.285,9.708 -0.8947,15.514 -0.2118,25.8845 0.5743,4.7099 0.818,5.952 -3.0508,2.3378 -9.1901,-8.0171 -14.0731,-35.37359 -5.7976,-40.4436 11.1253,-6.81598 14.4988,4.69393 9.0602,12.2213 z m 459.2902,-12.98145 c 4.4952,-0.20767 9.5972,3.28887 12.125,9.71875 3.6359,9.25 3.3033,31.9272 1.4687,44 -2.808,18.4781 -7.2652,35.4496 -9.0937,48.1562 -6.4883,7.7105 -22.4676,-19.568 -23.9688,-41.0937 -2.5149,-17.0717 3.3647,-52.54166 16.5,-60.03125 0.9347,-0.44947 1.9311,-0.70208 2.9688,-0.75 z m 61.8932,2.90752 c 4.0179,-0.18453 3.1033,1.17082 6.0755,4.27998 4.5131,4.72095 6.3448,5.86965 12.7187,7.87505 13.1479,4.1347 27.6054,22.4659 22.0357,28.0357 -4.4011,3.4887 -16.3811,-3.1018 -20.4731,-4.5045 -4.4007,-1.5155 -9.8968,-3.4045 -12.2188,-4.1875 -11.0189,-3.7156 -26.8679,-24.03319 -21.9375,-28.125 2.6365,-2.18815 10.6745,-3.23021 13.7995,-3.37373 z m -32.0495,3.37373 c 8.1457,0.0817 10.3711,2.11153 15.0313,10.875 6.9068,12.9902 19.7385,22.1543 38.375,27.4375 23.7893,7.2624 44.3169,21.0506 43.3175,46.5938 -5.6771,0.06 -11.3542,0.4372 -17.0312,2.1651 -6.5857,-18.5321 -22.9699,-29.1538 -37.0676,-32.3527 -32.525,-7.3793 -62.7094,-40.3737 -54.125,-53.4687 3.753,-1.91694 7.7784,-1.29559 11.5,-1.25 z m -561.0313,1.625 280.9688,244.6875 c -118.5713,-43.99 -227.3491,-43.0428 -332.5312,-26.7812 z m 119.8255,16.2004 c -0.5279,7.6186 -10.9801,9.2458 -13.1418,11.1261 -5.254,4.5701 -4.5548,17.7597 -2.3087,33.1422 1.7189,9.236 -0.5809,8.8294 -5.4374,1.5938 -8.599,-12.8114 -8.4265,-35.0298 -2.7226,-48.1182 7.3473,-16.85936 24.3502,-8.4171 23.6105,2.2561 z m -161.5755,-11.9817 c 10.7736,1.1198 13.7427,15.7793 14.1876,25.5 -1e-4,13.3937 -3.7994,12.8914 -5.9376,0 -1.0195,-5.7122 -2.7934,-7.9305 -7.4062,-9.3124 -10.481,-3.141 -11.1638,-16.1869 -0.8438,-16.1876 z m 130.5626,14.9688 c -2.7622,3.0377 -2.8249,17.2362 -0.3126,26.7812 1.3892,5.2782 -1.1798,5.6871 -4.75,1.5 -11.6233,-13.6318 -12.6929,-36.7507 -1.9062,-41.2187 8.7829,-2.2831 11.063,8.435 6.9688,12.9375 z m -121.5626,27.3438 c 0.2618,13.6067 -2.8421,14.8612 -6.9374,1.8124 -1.0504,-3.031 -2.9132,-6.0845 -4.25,-7 -7.6492,-5.2339 -8.9957,-9.3162 -4.5626,-13.75 10.8878,-8.8868 15.6071,14.8905 15.75,18.9376 z m 41.0626,-12 -38.0938,162.4687 c 93.7587,-7.8592 136.3593,-9.5104 236.5312,10.0625 z m 113.5937,2.6874 c 5.7335,1.4377 7.7148,8.9189 1.0313,16 -2.1932,2.804 -4.2361,7.1355 -1.5619,18.6187 3.6599,15.7156 -2.5022,10.6876 -10.0007,-4.1499 -4.8037,-9.5052 -2.5994,-33.7614 10.5313,-30.4688 z m -179.3437,0.5 c 10.1872,1e-4 19.63,16.5347 19.7812,34.625 0.1073,14.6208 -1.9756,13.565 -7.4062,-0.4062 -3.824,-9.24 -6.9072,-12.5872 -13.8438,-15 -12.8548,-4.4716 -11.7356,-19.2181 1.4688,-19.2188 z m 68.8437,4.6876 176.4375,154.1874 c -72.2502,-11.5464 -143.1791,-12.4356 -212.0625,-3.7812 z m 146.8437,5.8124 c 13.8392,0 19.2876,17.0972 2.3146,23.0791 -10.1142,3.5646 -5.7995,24.0188 -3.9396,36.1709 0.7027,4.5811 -0.7434,4.9031 -3.6562,0.8126 -10.6601,-15.7359 -16.6227,-55.4106 5.2812,-60.0626 z m -18.6874,19.2188 c -2.509,3.9587 -2.7926,8.2067 -1.0626,15.875 4.4864,16.4923 5.653,19.543 -3.7187,11.1562 -9.8619,-10.4273 -14.1664,-31.0732 -5.9063,-37.1874 9.2791,-6.8686 17.6416,0.7514 10.6876,10.1562 z m -348.6563,-12.7277 c 16.3776,-0.1162 28.2799,10.4843 27.651,25.2689 -0.6925,16.2816 -10.8916,26.5522 -25.871,27.4069 -16.72,0.8474 -27.0517,-12.4944 -27.4226,-26.315 -0.3276,-12.2076 7.4448,-26.2316 25.6426,-26.3608 z m -0.2811,6.5402 c -18.7445,-0.06 -25.7667,24.6513 -10.25,36.0625 6.652,4.8913 11.9069,3.5119 6.4376,-1.6875 -10.3052,-9.796 -6.1634,-25.9884 7.4062,-28.9687 6.7084,-1.4741 4.1076,-5.3823 -3.5938,-5.4063 z m 228.2188,4.1875 -22.5625,109.4375 c 46.1575,-7.1712 101.9967,-4.9832 145.0937,-0.9375 z m -76,4.1562 c 11.2238,-0.5702 14.5052,16.3134 14.5938,23.0313 0.01,8.6908 -1.0186,13.2156 -2.6199,8.5688 -3.7766,-10.9568 -7.5034,-16.975 -11.5614,-16.9751 -2.2014,-0.5632 -4.0786,-1.4488 -5.85,-3.4374 -3.9893,-5.2752 -0.1258,-10.9666 5.4375,-11.1876 z m 78.0938,4.375 14.875,12.625 c -9.5707,-4.194 -17.7188,6.6563 -17.7188,6.6563 z m 153.0937,20.6563 c -4.3147,5.4294 -4.2845,16.8844 -0.9375,30.2187 0.9366,3.7322 -2.5492,0.9671 -6.0625,-3.4687 -6.6574,-8.3901 -9.7824,-18.2215 -8.5765,-26.2855 1.3394,-20.3804 27.1986,-16.4107 15.5765,-0.4645 z m -235.3125,-9.75 c 9.6261,1.0906 13.2585,21.1887 13.0312,27.2813 -0.3148,6.3707 -1.766,10.6668 -3.0274,6.7952 -2.4793,-8.4008 -7.6007,-20.4668 -12.035,-23.2328 -7.6027,-4.7425 -5.4527,-10.1724 2.0312,-10.8437 z m 737.077,22.5204 c 0.3402,7.0907 -2.6075,14.3481 -6.9744,16.685 -4.4642,2.3892 -7.1884,-0.8459 -9.8526,-9.0179 -1.9584,-6.0073 -2.6518,-8.3169 -2.6518,-8.3169 0,0 -1.6521,7.5159 -2.1766,9.0874 -3.4804,10.4292 -14.8124,10.5285 -19.5599,-1.1231 -5.0531,-13.589 9.0592,-27.5145 19.9066,-27.0164 12.0262,0.5522 20.6716,8.3126 21.3087,19.7019 z m -642.9832,-15.1767 c 3.3816,0 16.5,5.875 16.5,5.875 l 13.0624,11.5626 c 0,0 -12.0136,-5.2199 -16.25,-6.7188 -10.114,-3.5792 -9.8979,-3.6085 -18.0624,3.0625 -8.409,6.8702 -15.3126,11.9063 -15.3126,11.9063 l 2.5938,-14.8438 c 0,0 12.3028,-10.843 17.4688,-10.8438 z m -85.719,36.4688 c 1.9279,15.6871 -2.458,17.0124 -6.7188,2.0312 -3.6474,-12.8261 -7.2386,-17.4999 -13.4374,-17.5 -11.4131,1.7031 -15.2525,-15.2251 -5,-18.625 19.3515,-5.4334 24.3317,27.906 25.1562,34.0938 z m 663.125,-34.4062 17.8438,8.2812 3.7812,18.4688 -16.4375,-4.0626 z m -399.9303,1.7026 c 17.1764,-4.7637 19.2975,16.6145 6.1339,19.7712 -8.037,1.9273 -7.9936,14.377 -5.7036,32.4636 0.5217,4.1257 1.6319,9.1248 1.375,9.8126 -1.2228,3.2716 -5.3103,-1.7258 -10.8125,-13.3126 -8.2139,-21.1322 -5.6507,-44.6695 9.0072,-48.7348 z m 490.8991,-0.2652 -4.9688,21.375 -15.0938,-1.0312 -0.5624,-13.0938 z m -508.5237,13.8987 c -8.2688,11.9705 -0.8382,23.0207 0.9962,32.3915 0.3253,5.4454 -6.705,0.1151 -10.7538,-7.8214 -8.443,-16.5495 -8.9307,-29.9077 -1.3437,-35.875 10.6325,-6.2268 15.5175,4.9118 11.1013,11.3049 z m -154.8513,-2.9299 c 2.9219,0.03 6.8781,1.6155 15.1874,4.8125 6.2959,2.4221 20.875,8.3437 20.875,8.3437 l 19.2813,17.0313 c 0,0 -16.9309,-6.2393 -28.7187,-11.2187 -26.5458,-11.2139 -22.7322,-11.5766 -43.7188,4.4062 -6.0552,4.6114 -12.375,9.875 -12.375,9.875 l 2.5625,-13.6875 c 0,0 7.9271,-7.8741 17.8125,-15 4.2588,-3.07 6.1711,-4.592 9.0938,-4.5625 z m -246.9376,6.4688 c 13.5846,-0.3775 22.5156,10.4284 25.7813,22.5 1.8915,6.9914 0.2577,13.4467 -0.125,20.1562 -9.3778,71.8491 -13.5032,138.5308 -22.125,205.0625 -1.0595,3.1759 -2.214,1.9957 -3.5937,-3.7187 -9.9824,-60.3233 -16.4823,-126.5353 -24.875,-186.3126 -1.9188,-22.3215 -7.6825,-51.5097 20.5624,-57.2187 1.5035,-0.2896 2.9698,-0.4297 4.375,-0.4687 z m -0.8124,7.9687 c -5.9922,0.2394 -13.0783,4.3546 -15.5938,9.6563 -5.138,10.8275 -3.7959,32.8717 5.9688,98.9374 0.8128,5.5007 1.9407,14.6826 2.5,20.4063 1.712,17.5432 4.0406,31.474 5.7187,34.0625 3.1945,4.9277 3.6054,-0.3667 1.3125,-17.5312 -1.1699,-8.7593 -2.7604,-22.1509 -3.5312,-29.75 -4.3889,-31.333 -5.3428,-53.6268 -8.0626,-82.2188 -1.3614,-14.054 4.2939,-24.4117 14.9063,-27.2188 5.7448,-1.5192 6.0524,-4.1036 0.6875,-5.8437 -1.1972,-0.3883 -2.5236,-0.5552 -3.9062,-0.5 z m 898.4374,0.8794 c 19.8425,0.045 27.1399,27.8251 7.7188,37.6206 -7.2062,3.6346 -19.2917,1.923 -22.2946,-3.8839 -1.4538,-4.5176 0.1758,-7.1462 3.7749,-9.0629 4.3794,-2.3322 10.8062,-4.3316 10.8062,-4.3316 0,0 -10.5094,-2.0366 -13.4687,-7.0104 -6.3819,-10.7261 5.3322,-13.1302 13.4634,-13.3318 z m -746.5624,29.9643 c -0.2218,5.237 -2.8961,3.0766 -3.5626,0 -2.1387,-6.9672 -6.6015,-14.5239 -10.3437,-17.5312 -4.5212,-3.6334 -5.5984,-8.5578 -2.5313,-11.625 11.5194,-10.1768 16.3753,25.893 16.4376,29.1562 z m 673.2053,-30.0401 c 5.0795,-0.1465 11.988,1.5773 16.3571,5.9464 5.6423,5.6415 5.337,7.757 -4.116,11.2008 -4.5887,1.7052 -7.7488,3.032 -7.7488,3.032 0,0 4.262,1.6746 7.4274,2.5573 9.0626,3.0257 8.5848,8.2827 0.2633,14.4956 -11.3315,8.4602 -29.5393,-2.7689 -29.3259,-17.6607 0.1698,-11.806 7.4471,-19.2918 17.1429,-19.5714 z m 41.8884,-0.085 18.125,19.9688 -21.1875,21.9375 -19.9375,-21.875 z m -615.9375,1.875 c 0.2584,-0.012 0.5082,6e-4 0.7812,0 5.6184,0.1042 14.5822,3.8968 36.5626,12.75 12.0763,4.865 26.0312,10.4063 26.0312,10.4063 l 19.7812,17.5 c 0,0 -27.101,-8.5078 -36.5312,-13.2813 -2.0482,-1.0366 -6.5483,-2.953 -10,-4.25 -3.4517,-1.2963 -12.0122,-4.6439 -19.0312,-7.4687 -15.0853,-6.0709 -15.2566,-6.1117 -20.3126,-1.8437 -2.1614,1.8246 -7.4677,5.9864 -11.7812,9.25 -4.3136,3.263 -10.6136,8.0516 -14,10.625 -3.9935,3.0339 -9.0312,7.625 -9.0312,7.625 l 3.1874,-16.875 c 0,0 2.8477,-2.7902 7.9376,-6.6876 4.1235,-3.1572 11.157,-8.5451 15.625,-11.9687 4.539,-3.4785 6.905,-5.5974 10.7812,-5.7813 z m 194.5312,14.8126 c 0.5602,3.5123 0.2282,4.1878 -3.8124,8.3124 -5.1024,5.2087 -5.7991,13.7437 -2.0626,24.8126 1.031,3.0518 2.2868,6.6666 2.0063,6.9463 -5.3909,5.3918 -19.5811,-28.6463 -16.1937,-38.7901 4.0507,-12.1302 17.3733,-12.3111 20.0624,-1.2812 z m -311.0937,1.4687 c 3.7139,-0.1736 8.026,2.6433 10.1875,8.5 5.8657,16.3798 2.2779,36.47 -3.7188,17.75 -1.5557,-3.9629 -4.2378,-8.2176 -6.2812,-10.375 -2.1036,-2.2361 -6.8285,-4.8284 -6.7188,-8.4687 0.4572,-4.7751 3.2543,-7.2531 6.5313,-7.4063 z m 121.2813,0.4687 c 2.3787,0.076 5.5502,1.26 11.25,3.5938 5.1514,2.1095 19.6562,6.9413 27.9062,10.125 12.8131,4.9446 26.1875,11.4688 26.1875,11.4688 l -29,-1.625 c 0,0 -9.8554,-3.2777 -15.7187,-5.6876 -21.2385,-8.7261 -20.0558,-8.6809 -30.625,-0.6562 -3.7766,2.8668 -8.5313,7.5 -8.5313,7.5 l -14.75,0.8125 c 0,0 6.9315,-7.3961 16.9375,-14.8125 3.2729,-2.4259 7.7447,-5.8872 9.9062,-7.6875 2.4906,-2.0738 4.0581,-3.1061 6.4376,-3.0313 z m 226.8838,5.7188 c 8.0713,-1.5292 12.4916,6.1629 11.9817,10.9624 -0.5593,5.2642 -5.448,10.5104 -12.9682,11.9707 -1.5816,5.885 -6.0888,19.3145 -3.4599,39.3481 2.1189,9.3866 -1.8536,9.595 -5.9062,0.5938 -6.5671,-14.5863 -16.1358,-57.8565 10.3526,-62.875 z m -23.0401,16.0625 c -3.4225,7.3164 -4.6097,13.2097 -2.7187,22.4375 2.1014,10.2545 2.5435,12.7841 -3.2813,6.375 -11.2858,-15.0462 -12.9308,-38.9993 -2.5313,-41.75 10.039,-2.6554 12.2411,8.2402 8.5313,12.9375 z m -338.31,-11.2162 c 17.6134,2.7844 22.8007,32.7912 20.3413,45.6225 -4.6661,15.5326 -4.4341,5.0372 -6.0626,-1.4376 -4.3362,-15.6303 -9.3534,-24.1391 -14.7187,-25.0312 -14.4459,-2.4018 -12.4214,-21.1868 0.44,-19.1537 z m 134.9975,5.9037 c 0.303,-0.021 0.5692,0.017 0.8438,0.062 5.7957,0.9686 21.3182,5.7594 14.625,7.375 l -22.9063,0.125 c -4.4469,0.1645 2.893,-7.241 7.4375,-7.5625 z m 616.8125,4.9062 c 2.2221,-0.2016 5.2521,2.4035 8.8125,6.0313 8.1484,8.3025 4.5736,21.3908 -6.4375,27.8437 -17.2848,10.1303 -36.9604,-8.964 -27.4687,-26.5 5.2093,-9.6244 11.4674,-7.9062 16.808,5.6742 0.9773,1.6497 -0.011,-1.6973 1.817,-5.8304 1.8207,-4.1162 4.2466,-7.0164 6.4687,-7.2188 z m -29,0.9688 -5.1875,20.875 -21.0625,10.125 7.6875,-25.7188 z m 43.8125,3.5625 16.7812,1.3437 9.3126,27.125 -24.1876,-10.3124 z m -396.5312,15.3304 c 12.2055,0.5044 13.4431,12.0309 6.4374,17.0759 -3.9268,3.762 -5.2841,9.2055 -4.4687,17.9062 0.3624,3.8679 1.1286,8.6063 1.0937,9.1562 -0.1146,1.8545 -1.6543,1.5646 -3.75,-0.7187 -12.8899,-14.0487 -11.1728,-43.9098 0.6876,-43.4196 z m -369.2188,4.5133 c 7.735,10e-5 16.5081,22.1618 12.1913,30.639 -2.7203,4.977 -5.3442,3.7483 -6.3361,-2.0274 -0.7397,-4.2053 -3.1499,-9.959 -9.3864,-10.9866 -9.0642,-2.8947 -6.114,-17.6242 3.5312,-17.625 z m 391.5312,13.4063 c 5.9087,3.0551 6.4658,9.853 1.125,13.6563 -4.1406,2.9482 -5.2322,5.4441 -5.875,13.4374 1.3567,18.1941 -8.868,6.6435 -9.8303,-9.9062 -0.5238,-9.0085 4.3513,-22.376 14.5803,-17.1875 z m -398.0312,5.5937 c 5.5519,0 12.147,9.9647 10.6862,15.7851 -0.778,4.6225 -3.1989,3.8028 -6.5924,0.3712 -1.3125,-1.0244 -4.2577,-2.083 -5.6326,-2.4987 -8.3072,-2.5113 -6.9119,-13.6569 1.5388,-13.6576 z m 157.7812,7.6563 c 75.0393,-0.3494 153.0937,11.5606 217.9688,37.4687 l -5.3438,9.5938 -17.0312,-5.8438 -5.8438,15.4376 14.0313,5.3437 -6.5937,14.25 c -76.5698,-25.1831 -159.1466,-43.9349 -296.375,-23.625 -6.8115,-4.7418 -19.125,-14.0937 -19.125,-14.0937 l 10.9687,-2.4063 -1.4375,-15.25 -27.7188,4.9375 -8.0937,-8.4688 c 43.3287,-11.1149 93.2513,-17.1047 144.5937,-17.3437 z m 251.6876,3.3437 c 7.1848,0.012 11.6444,8.0786 6.375,11.5313 -3.6907,2.4178 -11.8851,3.078 -13.5313,1.0937 -3.4022,-4.0994 1.4259,-12.6343 7.1563,-12.625 z m -262.2813,9.4376 -0.3125,15.8124 22.625,-0.7187 0.4688,-15 z m 39.5313,0.3437 0.094,15.5313 21.9687,0.7187 1.0313,-15.2187 z m -57.4688,1.0625 -22.2188,1.4688 0.6876,14.5 22.0312,-0.9688 z m 99.3438,2.4062 -0.5626,14.9688 22.3438,2.4688 1.625,-15.2188 z m -140.6876,0.7188 -22.3437,2.8438 1.9063,14.9062 21.7187,-2.4062 z m 183.875,4.8438 -2.1874,15.625 20.8437,3.0937 2.6875,-14.8437 z m 365.7188,4.5312 c 10.061,14.0781 19.6853,26.0802 26.375,41.8125 8.5876,20.2152 14.3543,46.6324 14.3438,68.4063 -0.01,13.0087 -9.0823,10.3891 -10.9376,-3.1563 -7.8108,-57.0474 -76.4509,-65.6326 -103.4374,-12.9375 -7.0131,15.0991 -8.3443,33.7331 -4.6563,54.5312 13.0456,73.5703 105.7716,144.6207 134.8437,221.8126 54.5879,-111.8669 102.4984,-129.2465 127.3438,-220.3126 20.013,-70.006 -48.1197,-122.0709 -97.5312,-76.7187 -9.0221,8.3156 -17.3452,23.7722 -18.3126,33.9687 -2.0476,16.3987 -9.3335,13.9581 -10.0312,0.4376 -0.2533,-14.2334 5.8466,-41.5648 14.4688,-65.9063 4.5898,-12.8427 11.4168,-28.6502 20.6562,-41.9375 z m -324.4062,4.2188 -2.0626,15.7812 21.1876,4.5 2.8437,-14.6562 z m -149.9688,18.1874 c 70.3522,-0.083 134.4664,12.0355 188.4688,32.5626 0,0 -6.9988,15.0884 -9.4688,16.7187 -38.7502,-15.4675 -104.7837,-29.8434 -149.4062,-30.625 -16.3513,-0.6057 -19.9762,-1.0417 -26,-3.125 -34.0081,-11.1844 -64.0304,-16.0199 -91.7188,0.5 l -11.3125,-8 c 34.1922,-5.4396 67.4592,-7.9935 99.4375,-8.0313 z M 2584.5625,1318 c 0,0 3.9822,5.3559 6.4375,8.3125 10.8929,13.1171 17.5456,36.5938 10.375,36.5937 -1.7781,7e-4 -2.6416,-1.6483 -5.2812,-4.1874 -9.7504,-14.4208 -29.2609,-9.379 -36.8126,1.2812 -7.7647,10.9614 -8.6026,28.6929 -2.5937,41.6875 19.5274,40.2798 56.9843,86.2626 56.3125,91.5313 20.0199,-44.6892 36.4434,-57.2917 51.2812,-90 5.3226,-16.2053 5.3827,-25.6804 1.25,-38.125 -5.643,-16.9944 -33.0228,-24.7478 -42.7187,-7.0313 -3.1995,5.403 -5.7298,6.9569 -7.9063,4.7813 -4.4331,-4.4339 3.2522,-28.6967 12.25,-38.6563 1.5908,-1.76 4.5626,-6.1875 4.5626,-6.1875 z m -1066.4375,31.3438 c 16.0892,0.1876 23.7452,24.8545 6.75,35.2187 -4.5607,2.5791 -10.5554,2.2341 -15.375,0.062 -13.7746,-6.5596 -14.8011,-27.0434 1.25,-33.75 2.5944,-1.084 5.0765,-1.5582 7.375,-1.5312 z m 525.8125,0.8124 c 5.759,3.5201 27.0313,12.9376 27.0313,12.9376 l -149.4063,270.0937 -36.1563,0.2813 z m -481.8973,0.6381 c 8.9533,-0.9976 15.3077,6.6872 17.616,13.1116 3.1494,8.7653 -2.5009,24.3336 -18.2812,23.4376 -18.1044,-1.028 -26.2163,-33.5539 0.6652,-36.5492 z m 513.8036,14.0495 c 4.0092,2.202 18.5214,4.6082 19.7812,7.4062 0.5451,1.3993 -0.5521,4.155 -0.875,7.7188 -0.7779,8.5853 1.3665,18.0959 6.5625,25.7187 8.515,11.8312 -0.7076,6.3966 -9.2187,6.3125 -19.2057,-4.9063 -43.6723,21.2595 -34.375,48.1875 2.1486,5.9587 1.7278,6.43 -8.5626,9.5625 -23.3625,7.1122 -33.5503,31.9023 -22.3258,54.0402 5.8489,11.5351 6.02,10.9487 -4.2679,11.8036 -28.5851,2.3731 -45.1858,27.731 -33.1875,53.6562 1.8568,4.0121 0.6752,5.1158 -5.5625,6.2812 -19.5138,3.58 -28.2533,19.8982 -30.7187,37.8126 l -25.8126,0.25 z m 24.75,9.5312 49.5937,13.5312 c -20.5954,70.0224 -23.4411,151.373 1.3437,245.4688 l -114.0312,0.094 c 15.8371,-14.2159 9.5819,-33.855 -8.9286,-38.1786 17.9629,-10.3142 17.9727,-37.7553 -3.5536,-41.0536 -18.9277,-2.9001 -28.7009,15.096 -20.2946,33.1251 l -8.0849,2.2008 c 0,0 -3.6193,-4.5447 -4.4508,-6.9687 -7.14,-20.815 7.806,-41.4753 33.2813,-41.4063 15.7126,0.043 18.9647,-4.4044 10.2812,-14.0625 -15.524,-17.2664 -10.6387,-41.531 9.6295,-51.0759 9.332,-4.3945 14.8348,-1.4866 14.8348,-1.4866 l 0.4821,11.442 c 0,0 -3.7834,0.3671 -6.7276,0.8347 -22.3885,3.5799 -18.2369,39.2633 4.5179,38.9554 12.5221,-0.1696 21.48,-9.6674 21.4821,-23.3079 10e-5,-3.8322 0.018,-9.4867 0.018,-9.4867 11.5009,19.6763 31.2562,21.0819 39.6696,5.0759 9.9039,-18.8416 -8.0658,-30.6855 -26.0803,-28.7411 0,0 3.7808,-2.4545 6.1696,-3.683 19.1816,-9.8639 12.5762,-38.0491 -8.6384,-38.0492 -14.5575,7e-4 -23.0478,13.5247 -18.3571,27.8662 0.7525,2.3006 2.5357,5.991 2.5357,5.991 l -8.6607,2.1964 c 0,0 -1.9644,-1.5007 -2.8438,-2.875 -14.8587,-23.2225 9.0026,-48.8009 39.0626,-43 11.0047,3.4496 10.6482,-4.1603 4.4687,-11.0312 -6.6441,-9.908 -11.6031,-21.1331 -6.7187,-32.375 z m -560.4688,10.125 26.0312,45.875 -29.1562,52.8438 -28.9062,-49.5 z m -2.5625,23.875 -18.0625,24.875 17.6875,28.5625 16.7813,-28.9063 z m -0.7813,9.3438 11.75,15.75 -11.8437,19.3437 -11.5937,-18.1563 z m 537.9376,49.5624 c 5.4735,0 9.9374,4.4328 9.9374,9.9063 1e-4,5.4735 -4.4639,9.9062 -9.9374,9.9063 -5.4737,0 -9.9063,-4.4328 -9.9063,-9.9063 0,-5.4735 4.4326,-9.9062 9.9063,-9.9063 z m 540.9687,54.5626 c -7.6187,0.1889 -15.8716,2.4117 -24.4375,6.8437 -9.2311,4.7763 -9.2318,4.7647 -12.8438,2.375 -8.7904,-5.8172 -11.4951,-7.1875 -21.4062,-7.1875 -6.1541,2e-4 -10.4062,0.3438 -10.4062,0.3438 l 0.8437,23.75 c 21.3474,-0.5764 27.1978,6.6745 22.7187,19.5312 -4.6488,5.8286 -3.5981,89.6385 -2.125,121.9688 -0.3518,15.8823 6.7095,30.9836 16.4688,40.1562 15.2439,13.509 42.2288,12.4985 57.9062,1.2188 10.4661,-7.5304 15.4436,-20.1384 17.6755,-32.9472 1.054,-26.2919 0.454,-52.6468 0.454,-78.9591 l 16.9018,0.1875 -0.1875,-23.8125 -16.5,-0.9687 c 0,0 0.169,0.6795 -0.5312,-16.9688 1.1603,-36.9261 -17.7992,-54.5291 -43.0313,-55.5312 -0.5023,-0.01 -0.9921,-0.013 -1.5,0 z m -1.3432,23.9412 c 13.9272,1.0596 19.582,6.5813 22.7968,18.4689 2.2914,8.4732 3.1535,18.4776 1.2339,21.6211 -3.128,5.1224 -15.1677,-3.7967 -30.9375,-23.0312 -5.3127,-6.4804 -7.6791,-9.8184 -7.6791,-9.8184 3.0506,-5.4371 9.5246,-7.6255 14.5859,-7.2404 z m -25.3175,31.9695 c 14.4762,12.4493 16.5221,25.0802 50.6741,37.0893 0,0 0.9696,-1.3299 0.3929,40.3124 -0.6372,45.9401 -3.3867,55.3477 -17.25,59.1563 -12.0135,3.3 -23.3247,-2.2771 -28.3126,-13.9375 -5.1018,-11.9284 -6.3396,-40.0114 -6.1562,-93.4375 0.066,-19.3938 0.6518,-29.183 0.6518,-29.183 z m -584.3885,13.9017 c 5.6708,0 10.2813,4.5793 10.2813,10.25 0,5.6708 -4.6105,10.2813 -10.2813,10.2813 -5.6707,0 -10.25,-4.6105 -10.25,-10.2813 0,-5.6707 4.5793,-10.25 10.25,-10.25 z m -15.5401,6.9867 c -0.9366,0.4014 0.025,9.3136 2.2679,13.0045 -14.8059,0.9069 -18.7254,12.2334 -20.1652,21.7945 l -13.2634,-0.036 c 2.2095,-32.3352 30.2186,-33.0603 31.1607,-34.763 z\"\r\n               style=\"fill:#000000\" />\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </g>\r\n  <g\r\n     inkscape:groupmode=\"layer\"\r\n     inkscape:label=\"Printing Marks\"\r\n     id=\"printing-marks\"\r\n     transform=\"translate(-259.9347,-369.77719)\">\r\n    <g\r\n       id=\"CropMarks\"\r\n       inkscape:label=\"CropMarks\" />\r\n  </g>\r\n</svg>\r\n", "<svg\r\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n   xmlns:cc=\"http://creativecommons.org/ns#\"\r\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n   xmlns=\"http://www.w3.org/2000/svg\"\r\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n   \r\n   width=\"__width__\" \r\n                                                    height=\"__height__\" \r\n                                                    viewBox=\"0 0 224.21875 312.8125\"\r\n   id=\"svg4423\"\r\n   version=\"1.1\"\r\n   inkscape:version=\"0.48.4 r9939\"\r\n   sodipodi:docname=\"KS.svg\">\r\n  <title\r\n     id=\"title3000\">Vectorized Playing Cards 1.0</title>\r\n  <sodipodi:namedview\r\n     id=\"base\"\r\n     pagecolor=\"#ffffff\"\r\n     bordercolor=\"#666666\"\r\n     borderopacity=\"1.0\"\r\n     inkscape:pageopacity=\"0.0\"\r\n     inkscape:pageshadow=\"2\"\r\n     inkscape:zoom=\"1\"\r\n     inkscape:cx=\"166.49541\"\r\n     inkscape:cy=\"162.35914\"\r\n     inkscape:document-units=\"px\"\r\n     inkscape:current-layer=\"CropMarks\"\r\n     showgrid=\"false\"\r\n     inkscape:snap-global=\"false\"\r\n     inkscape:snap-bbox=\"true\"\r\n     inkscape:snap-page=\"true\"\r\n     inkscape:window-width=\"942\"\r\n     inkscape:window-height=\"1036\"\r\n     inkscape:window-x=\"960\"\r\n     inkscape:window-y=\"0\"\r\n     inkscape:window-maximized=\"0\"\r\n     inkscape:snap-bbox-midpoints=\"true\"\r\n     inkscape:snap-bbox-edge-midpoints=\"false\"\r\n     inkscape:bbox-paths=\"true\"\r\n     inkscape:bbox-nodes=\"true\" />\r\n  <defs\r\n     id=\"defs4425\" />\r\n  <metadata\r\n     id=\"metadata4428\">\r\n    <rdf:RDF>\r\n      <cc:Work\r\n         rdf:about=\"\">\r\n        <dc:format>image/svg+xml</dc:format>\r\n        <dc:type\r\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n        <dc:title>Vectorized Playing Cards 1.0</dc:title>\r\n        <dc:date>4/24/2011</dc:date>\r\n        <dc:creator>\r\n          <cc:Agent>\r\n            <dc:title>Chris Aguilar</dc:title>\r\n          </cc:Agent>\r\n        </dc:creator>\r\n        <dc:rights>\r\n          <cc:Agent>\r\n            <dc:title>LGPL 3.0</dc:title>\r\n          </cc:Agent>\r\n        </dc:rights>\r\n      </cc:Work>\r\n    </rdf:RDF>\r\n  </metadata>\r\n  <g\r\n     id=\"layer1\"\r\n     inkscape:groupmode=\"layer\"\r\n     inkscape:label=\"KS\"\r\n     style=\"display:inline\"\r\n     transform=\"translate(-259.9347,-369.77722)\">\r\n    <g\r\n       transform=\"translate(-735.69962,-1384.075)\"\r\n       id=\"g3963\"\r\n       style=\"display:inline\">\r\n      <g\r\n         id=\"g3888\">\r\n        <rect\r\n           y=\"1754.3506\"\r\n           x=\"996.13269\"\r\n           height=\"311.81104\"\r\n           width=\"223.22835\"\r\n           id=\"rect6969-9\"\r\n           style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n           rx=\"10.629921\"\r\n           ry=\"10.629921\" />\r\n        <g\r\n           style=\"display:inline\"\r\n           transform=\"matrix(0.1535917,0.00170524,-0.00170524,0.1535917,1013.4583,1809.3687)\"\r\n           id=\"g3797-8\">\r\n          <path\r\n             style=\"fill:#131f67;fill-opacity:1\"\r\n             d=\"m 78.178284,-191.19552 1064.591116,-11.81957 20.8351,1701.46439 -1067.442046,9.0102 c 0,0 -12.368009,-1110.30404 -17.98417,-1698.65502 z M 853.11354,1489.646 c -40.43189,-71.0815 -104.38866,-186.8916 -106.25141,-187.7973 -23.03553,12.5352 -258.91498,46.6294 -372.88077,17.4149 -38.21421,58.5263 -75.7336,116.4844 -108.9282,174.445 z M 487.93075,1279.7509 c -5.94099,0.1983 -12.52978,3.8764 -11.34158,0.7258 0.68694,-1.8215 2.16206,-20.1813 2.8223,-26.7489 1.74477,-2.9384 4.33288,4.6848 4.12626,11.7923 -0.1186,4.0787 1.81805,1.1459 15.27904,1.699 14.55983,0.5982 26.51262,3.1795 31.46154,4.1869 17.25075,3.5115 50.51498,0.4837 64.66733,-9.9989 7.66108,-5.6745 10.64985,0.3284 2.75449,6.415 -35.65433,27.4861 -64.27621,17.4742 -95.56298,13.2821 -4.66294,-0.6247 -9.38457,-1.5143 -14.2064,-1.3533 z m 15.00302,-25.8703 c -2.25172,-1.4218 -3.72251,-1.5559 -6.56829,-0.1966 -10.97743,5.2433 -8.17297,-2.1344 -0.30592,-9.6207 3.59293,-3.4191 3.46912,-5.1397 0.67266,-8.6597 -1.41564,-1.7819 -3.74716,-1.9776 -3.2229,-4.6783 2.25838,-11.6351 18.45825,-29.3766 36.69483,-37.4258 7.58617,-3.3484 8.83168,0.2072 -0.74453,5.9453 -14.72718,8.8245 -19.43929,16.2673 -11.08806,13.1673 16.19114,-6.0102 31.06594,-2.0601 51.97956,8.0228 5.97494,2.8807 8.70287,3.4265 13.75269,2.8341 3.70146,-3.1217 7.08871,0.5452 9.42608,2.454 1.46723,1.1462 1.78456,1.7005 3.43654,1.2955 11.807,-2.8948 4.7967,4.6821 -11.25099,16.5951 -28.74779,20.6764 -60.24946,30.6254 -82.78167,10.267 z m 44.63457,4.5108 c 11.80161,-3.6767 26.1627,-11.2458 34.93378,-19.0707 10.66131,-9.5112 4.58841,-8.0154 -7.71675,-1.9585 -17.80998,8.7664 -30.31884,11.3816 -50.46645,11.1454 -16.86359,-0.1978 -16.3422,-0.8809 -16.93315,1.2128 -2.07488,7.3507 21.20979,14.582 40.18257,8.671 z m -33.03024,-28.2538 c 0.92696,-3.1663 1.61586,-7.3803 0.74008,-8.7379 -1.58639,-2.4589 -4.91837,-0.5923 -9.12083,4.8036 -2.60403,3.3435 -2.23581,3.7888 0.37481,6.3743 1.3083,0.8605 2.31133,1.5029 3.09869,1.9423 3.61477,1.485 4.15686,-1.8381 4.90725,-4.3823 z m 7.41824,4.2434 c 4.99197,-17.59 16.60297,-17.3782 25.07086,-0.6919 l 5.84131,-0.033 c -12.36984,-32.5098 -35.43437,-15.7206 -36.03161,0.5261 2.74754,0.8725 5.11944,0.1983 5.11944,0.1983 z m 43.33585,-3.4347 c 5.44674,-3.0959 4.61969,-5.1522 -2.40199,-8.6516 -4.98939,-2.4867 -7.6217,-2.9709 -8.50487,-1.3205 0.1078,3.6166 0.31235,8.7895 2.45104,11.6339 2.20109,1.2957 5.19719,-0.039 8.45582,-1.6618 z m -77.38071,-49.0801 c -1.02215,-1.6362 -0.87868,-4.6513 2.91432,-6.4466 23.38866,-11.0706 6.00538,-33.6938 -11.95321,-16.3817 -5.70357,4.7547 -14.24,7.0284 -20.88148,4.3083 -6.24818,-2.6213 -6.44757,-10.1685 1.79357,-11.8707 2.70446,-0.5586 9.64349,-2.1029 12.19032,-3.901 31.3659,-17.1172 48.52798,19.1529 26.27609,31.5349 -4.57216,2.7187 -9.43744,4.2626 -10.33961,2.7568 z m -88.75913,-32.1225 c -12.87039,-5.6179 -14.84608,-25.6045 -2.93171,-33.5283 7.58193,-5.2705 15.37683,-6.7709 36.53278,3.3328 14.94373,7.1369 23.36381,-0.82 23.07446,7.6815 -0.17592,5.1689 -0.42869,10.3827 -9.05534,11.7234 -14.0224,2.1792 -23.82016,-16.6364 -41.83997,-14.6521 -13.00114,1.4316 -11.18084,16.872 -1.74139,19.9088 12.57937,4.0468 5.03511,9.0928 -4.03883,5.5339 z m 235.48532,0.2915 c -2.34005,1.1212 -3.49922,-3.9726 -2.51301,-6.7085 6.23455,-15.1404 11.98764,-27.187 17.63178,-41.3706 4.50312,-11.3009 7.55389,-16.171 9.63119,-16.181 2.12131,-0.01 3.12389,1.6249 -0.3503,8.5906 -5.21043,14.0312 -24.35941,56.8648 -24.39966,55.6695 z m -105.1796,-2.7367 c -5.70847,-3.9431 -4.81919,-9.8954 1.67675,-5.4674 8.34775,5.6904 21.81028,-5.043 18.93001,-14.9985 -3.48036,-12.0298 -19.66185,-14.7743 -33.0615,-3.8161 -21.13942,17.2878 -44.53085,18.4133 -44.6776,5.0865 -0.006,-3.8116 -0.5503,-4.6707 8.31792,-5.3637 10.31166,-0.8057 21.89897,-5.6288 27.64536,-9.1941 25.77197,-15.99 53.4949,-5.4562 48.06996,20.8048 -2.44199,12.3862 -17.62862,18.5407 -26.9009,12.9485 z m -95.56493,-37.6093 c -2.10549,-0.04 -5.93255,2.1086 -7.04461,1.3025 -2.17763,-1.5785 -1.91664,-6.2285 -3.74816,-11.1862 -3.25064,-8.7986 -0.1467,-6.0717 5.42802,-3.7463 7.56682,2.8086 14.69996,2.1708 21.03008,-0.09 6.52877,-2.3322 15.1353,-1.9115 28.92063,-0.2804 11.08918,1.3121 17.30536,0.8256 27.32476,-2.1387 10.86997,-3.5138 7.99636,-2.2619 6.25135,4.4405 -1.13491,4.3961 -2.56244,10.291 -3.93283,11.7187 -7.58714,-4.1121 -13.29545,-2.4228 -18.21971,0.4858 -8.10427,3.6515 -13.87095,4.3305 -20.56069,2.4207 -6.31251,-3.4767 -10.03347,-3.1435 -15.03873,-0.026 -8.63655,4.2731 -12.56563,-2.5892 -20.41011,-2.9006 z m 162.45688,-20.168 c 1.49851,-2.6829 3.6781,-6.3777 5.71943,-10.5179 16.48345,-33.4313 17.5313,-42.6886 5.51133,-53.7573 -16.15265,-14.8745 -29.70443,-8.1932 -44.68616,22.0314 -3.63669,7.3368 -5.79922,12.8437 -7.27617,15.1119 -1.70226,2.6143 -3.74709,0.6364 -4.75586,-0.3628 -1.90952,-1.8912 14.73248,-33.9854 21.31719,-41.0233 17.23294,-18.4187 49.79266,-4.1987 48.00568,20.6153 -0.90006,12.498 -3.21442,19.3663 -14.45613,42.3859 -2.78254,5.6978 -5.19923,10.527 -6.67992,12.8558 -5.35303,3.6479 -4.21186,-4.5971 -2.69939,-7.339 z m -158.86368,0.4408 c 2.53005,-11.8704 40.68335,-17.7735 50.9267,-2.3587 1.00067,1.5059 0.4243,1.4509 -3.91199,0.3204 -19.5007,-6.1623 -23.35093,-5.7709 -41.88496,1.7431 -2.78708,1.1029 -4.77303,1.5665 -5.12975,0.2952 z m 145.78412,-3.8675 c -0.005,-1.1122 1.36039,-5.5041 3.47157,-9.7647 12.46453,-25.1543 15.91052,-31.2267 11.97174,-35.8622 -7.67357,-9.0307 -17.75683,-0.9963 -26.81395,25.2282 -3.38549,9.8026 -5.78948,7.7463 -7.51041,6.2243 -3.29675,-2.9157 10.81639,-33.4675 17.73335,-38.0758 15.68506,-10.1536 28.2468,1.2571 21.49313,21.7452 -5.34392,9.2761 -9.68452,23.5039 -14.68774,31.0195 -2.37702,3.3726 -5.6436,2.4184 -5.65769,-0.5145 z m -57.59287,-39.993 c -0.78246,-1.2526 0.68998,-2.9654 6.03348,-14.6746 7.34557,-16.0967 9.61351,-22.0607 6.45479,-31.169 -5.62942,-16.23268 -26.21324,-19.99808 -38.57221,-9.16734 -4.04396,3.49512 -6.75968,8.30313 -8.63605,12.61304 -4.39816,9.9805 -8.01358,22.8649 -10.65504,25.5888 -2.30908,2.365 -5.56351,2.8764 -5.39562,-1.2058 2.86945,-8.6789 4.19583,-15.3985 11.06793,-28.14841 17.06329,-37.93147 67.65019,-21.01718 56.29618,18.83791 -4.22454,14.4693 -9.14809,25.4473 -12.09196,29.0272 -1.63762,1.9915 -4.41047,0.3078 -4.5015,-1.7018 z m -11.7721,-6.8021 c -0.006,-1.2413 1.84392,-4.8017 3.79584,-9.7548 8.28955,-21.0351 8.27475,-27.4537 -4.15054,-27.5851 -7.41842,1.0315 -8.48851,4.0692 -14.8283,20.6631 -2.05916,5.3897 -3.18454,9.2249 -4.42533,10.8761 -1.33167,1.7722 -3.87826,0.7579 -4.93026,-0.2841 -2.69372,-2.668 8.63587,-29.891 14.72728,-35.06697 14.00193,-12.38144 32.51077,4.77347 24.10412,20.45147 -3.9007,10.9387 -7.28384,18.3677 -9.60592,21.7621 -2.05374,3.0021 -4.66916,2.6111 -4.68689,-1.0618 z M 210.24583,798.49518 167.27195,796.04334 c 8.11529,45.57381 9.05999,95.82972 1.76993,131.55702 -6.23293,30.54649 -6.05865,52.99403 -3.80409,79.39244 2.62322,30.715 16.00367,56.635 19.661,89.2294 2.6499,23.6161 -2.33812,48.3498 -6.7773,71.9083 -7.41842,39.3692 -5.75359,43.4537 -4.08558,89.5356 1.54653,42.7256 -2.47932,41.238 -4.97257,38.7687 -0.37766,-0.3739 -0.80675,-7.9275 -0.85013,-16.9163 -0.0436,-8.9887 -0.84591,-30.9648 -1.53058,-46.2186 -1.36766,-30.4728 1.74198,-57.4509 4.0885,-68.565 4.77577,-22.6201 10.16744,-45.799 6.41157,-70.7331 -7.41821,-31.4418 -17.73075,-62.8093 -21.56306,-93.1515 -4.72548,-37.4139 5.45099,-75.11846 8.65144,-102.36451 3.09013,-26.30686 -0.99761,-71.71241 -8.12852,-90.54912 -1.26173,-6.27819 -7.00626,-14.4196 -7.00626,-14.4196 -6.48533,-0.84788 -12.99556,-1.68611 -22.0751,-1.52818 1.49582,180.40786 4.0013,360.87751 6.14797,541.30161 l 40.4529,36.5249 40.71134,-39.3754 z m 5.18803,206.91322 c 0,0 61.4873,34.3226 129.2361,67.9719 -6.85185,-39.2842 13.42806,-45.4436 32.47861,-50.2232 -5.42038,-75.97712 64.75468,-61.1582 76.2136,4.7798 l 6.89752,-0.049 c 11.76424,-33.06877 23.50672,-55.93111 51.06294,-61.66231 21.35515,-4.44149 42.61452,8.81223 48.31874,40.52041 -0.96771,-2.2228 70.5002,-42.7858 73.41404,41.2043 32.43144,-20.5354 55.92739,-3.3676 65.63014,22.1433 13.55629,-21.0605 48.05543,-22.3631 59.07209,-24.0053 3.79292,-4.4529 10.54354,-7.045 22.86425,-7.1039 10.55458,-0.6532 24.65681,-8.6794 32.06435,0.8258 11.12319,1.6201 19.56081,-0.4702 29.13051,6.72 7.61675,5.6279 16.18119,18.2704 28.65492,9.3493 23.84165,-11.755 50.72267,-17.2334 72.00206,-31.3227 0,0 -5.76401,-7.2215 -4.09439,-6.1917 0.61148,0.3772 3.31773,3.7871 7.35697,5.347 1.44622,0.5585 14.52926,-7.4386 14.52926,-7.4386 C 869.85219,914.90906 794.19382,715.90461 840.63353,530.49126 c 1.30858,-3.16177 -4.09446,-4.31149 -6.75715,-5.39711 0.79915,-1.42691 13.92449,0.3306 8.49163,12.1457 -5.21109,35.48336 -11.13315,73.937 -12.21933,103.32087 0.017,3.57916 0.37609,6.77525 0.37609,6.77525 201.19963,89.66199 178.86213,288.95258 128.20618,358.79683 l 8.2252,10.6567 c 3.6137,2.3516 156.51235,-88.66168 151.39515,-92.2711 l 28.9593,-14.75075 -9.0521,-390.20227 -115.2629,-7.48493 c 0,0 1.1918,-3.29098 2.6389,-4.1571 0.7892,-23.83513 -1.7427,-59.05007 -0.9232,-88.55807 -0.4867,-84.2931 0.046,-112.9654 -1.0766,-115.2846 -35.77984,-22.88192 -89.12207,-56.33045 -133.87963,-72.3404 1.83496,0.49955 -0.3379,34.93536 -1.67203,36.91346 -41.55807,13.70629 -22.01241,30.41796 -37.22353,48.7691 -10.22845,11.44 -34.43884,13.86515 -46.28938,0.40819 -14.13199,-13.30915 -21.03087,-44.12462 -21.03087,-44.12462 -21.80026,23.72244 -16.9558,52.03478 -46.38079,63.04115 -47.22642,23.96969 -63.08168,-45.94788 -60.30209,-44.35409 -18.00554,17.65898 -68.90798,32.42437 -75.24329,-41.23208 -22.72319,21.2898 -48.57449,11.13325 -59.77925,-14.62927 -14.00815,0.64867 -29.60204,11.7515 -43.72168,17.81485 -13.09778,5.94427 -29.89819,9.53681 -42.40054,9.41709 -15.61193,2.05459 -28.48838,2.12631 -42.62324,-1.89245 -6.5933,2.21134 -21.588,-4.01876 -26.29545,-13.12851 -7.13577,-8.16013 -13.28305,-8.57251 -19.96318,-7.01108 -22.68029,12.21179 -47.11,15.37119 -73.90009,28.18928 -1.66894,1.18103 2.40266,3.32545 1.03682,2.9108 -0.57549,-0.1747 -14.0726,6.78749 -14.0726,6.78749 138.39259,176.96528 147.81547,357.08299 120.64087,485.1199 -1.07207,4.43834 -1.65565,7.65909 1.33155,11.10925 -4.33463,-0.69345 -4.39075,0.56722 -5.2295,-2.18302 l 12.99412,-107.36069 c 0.27351,-12.95347 1.91194,-12.01355 -9.57387,-16.71606 -10.62321,-4.34934 -20.66809,-8.54177 -29.45206,-13.78513 -33.53443,-24.15775 -71.4637,-53.93184 -90.20159,-91.40026 -53.17124,-80.38734 -36.99816,-177.19074 1.30599,-254.17411 l -9.85128,-9.95795 C 158.15577,338.54885 91.332109,400.76834 91.332109,400.76834 l 4.743035,382.93703 117.644686,12.18008 z M 155.91229,750.32055 c -3.81283,-4.1029 -13.41512,-4.72354 -17.37936,-1.52802 -0.91394,0.78487 -2.84031,4.86723 -3.42502,4.72481 -5.33944,-1.30051 -9.0348,-2.36073 -9.79257,-6.82267 l 5.55484,-8.56044 c 4.39631,-6.77499 10.81793,-9.23266 21.65056,-11.88016 3.84548,-0.93987 9.65385,-1.82505 11.69988,-2.71624 8.12266,-3.60096 10.88074,-11.23064 2.65223,-7.73431 -6.01932,1.717 -14.46091,1.26465 -15.64196,-4.21649 -0.97043,-4.50369 -4.85276,-6.22998 -9.15518,-5.65246 -7.93841,1.99219 -15.16363,6.21049 -22.16484,10.45225 -3.10495,1.90917 -8.98403,6.22147 -8.98403,6.22147 -0.91847,1.4689 -4.48513,-9.13341 -1.30506,-12.27813 3.99824,0.43682 7.43449,0.43637 11.31074,-1.15083 9.67099,-3.95997 18.97111,-8.71217 28.73282,-12.55067 6.21646,-2.50843 6.79145,-2.30835 5.09738,-6.70013 -0.82897,-1.61658 -1.60832,-7.01174 -0.56437,-9.85191 1.10936,-3.01815 0.96507,-4.52859 -0.98784,-5.79269 -4.44353,-2.87622 -14.99263,-0.0337 -29.7934,7.24372 -4.50662,2.22033 -7.48462,3.12238 -10.32443,5.45605 1.79571,-4.70725 0.71011,-5.55953 0.60738,-10.46582 6.08311,0.69093 11.52332,-1.77023 16.3441,-4.36693 3.977,-2.12635 8.43966,-4.23108 19.41687,-5.75092 2.99807,-0.41509 1.51081,-11.33683 -1.94436,-14.46873 -3.26692,-2.96127 -10.06527,-2.95045 -18.2593,-0.43822 -7.32619,1.76032 -16.43775,3.56063 -21.4019,11.46717 -6.30586,6.07415 0.0442,-9.95391 11.59269,-16.45048 5.09405,-0.1651 16.30337,-2.68909 18.94123,-3.30026 4.47318,-1.0364 5.0753,-11.5167 -1.49188,-15.93051 -4.11944,-3.49872 14.78583,-3.80095 14.43322,-2.71606 -0.23399,0.61875 -0.3596,5.09696 1.09846,6.22239 8.16953,2.34763 8.17025,8.97515 8.91536,11.7585 9.52053,15.17174 14.01645,5.53766 20.39435,0.20347 -0.98702,33.28226 10.74359,36.93712 12.31299,39.02572 -15.72496,29.98521 -3.60751,30.58275 11.52134,37.27219 0,0 -5.69626,2.37402 -9.50673,2.18294 -5.99423,-0.30058 -17.38146,6.89462 -22.34814,11.11492 -2.73977,2.32805 -2.84575,0.413 -13.90773,0.21598 -10.42144,-0.18562 -11.17755,0.59664 -15.90492,2.74367 -9.32717,4.23587 -9.23519,8.13757 -0.0947,6.49977 9.73508,-1.74975 19.35635,4.04035 20.56757,12.05528 0.79004,1.51001 0.12864,4.20066 -0.0258,4.11338 -2.03599,-0.35816 -6.62058,0.45494 -6.56151,-0.51283 0.0591,-0.96776 -0.0531,-4.60408 -1.87898,-7.13777 z m 13.78619,-40.47206 c 2.62649,-1.70958 3.02777,-6.50128 0.70421,-8.41079 -2.11463,-1.73782 -11.00624,-0.6979 -13.49747,1.57865 -5.6369,4.51894 4.83885,11.85598 12.79326,6.83214 z m 5.47771,-20.09002 c 3.24404,-2.57719 3.57641,-8.68903 0.70162,-12.2044 -4.87449,-5.96065 -17.39981,-2.22106 -17.99608,5.37301 -0.63497,8.08625 10.50969,12.22149 17.29446,6.83139 z m -4.39412,-27.42997 c 0.51789,-6.64088 -6.12742,-10.76936 -12.16191,-7.5558 -7.51628,4.00271 -2.83391,12.21131 6.62849,11.62045 5.24186,-0.32731 5.24186,-0.32731 5.53342,-4.06465 z m -22.42683,-26.67291 c -3.51183,1.76266 -3.6439,5.89964 -0.27211,8.52571 13.34334,7.14147 9.08849,-12.33417 0.27211,-8.52571 z m 926.67786,29.37067 c -6.0593,-21.2926 -21.8736,0.0601 -21.893,0.35567 -0.8124,-21.88082 3.2408,-31.66837 -13.3268,-38.9616 16.2663,-25.1324 12.7783,-28.53433 -4.8693,-37.91185 1.6181,0.12141 23.2333,-4.95378 26.8048,-17.31784 0.8296,0.56721 34.1056,8.33664 38.045,-9.7394 -9.9618,4.65353 -29.6498,5.55037 -30.0893,-13.83567 1.8571,-0.57801 6.5362,0.3257 6.1528,0.94847 -2.4818,12.46362 20.3063,15.2868 23.9185,5.42408 0,0 7.6992,5.01416 11.0697,5.76423 0.3766,0.24593 -10.1804,15.17069 -19.9351,17.51272 -17.5646,6.00622 -23.6269,7.6407 -23.6101,11.12886 0.01,1.35489 2.8953,1.53853 8.1444,2.54741 10.9561,0.62921 10.7525,2.97365 12.2288,6.56883 1.3057,3.17957 2.5484,3.80514 6.1954,3.44079 12.4591,-4.27574 18.6891,-6.51786 27.3071,-15.29109 1.0574,-0.21693 2.394,9.09476 3.0717,9.40693 0.086,-1.48806 -8.8359,1.20738 -22.4929,9.36759 -11.1467,6.6603 -15.5282,7.65869 -16.9346,9.43965 -1.0433,1.32105 1.7272,5.41378 2.0646,9.88771 0.2837,3.7617 -2.2394,5.6159 -0.3561,6.77014 2.1753,1.33322 5.518,1.04829 9.9013,-0.13831 9.6734,-2.43557 16.7705,-6.31099 25.4273,-11.77172 -1.8145,3.51149 1.3893,12.33447 1.3893,12.33447 0,0 -4.3365,-2.96567 -7.8601,-1.3632 -6.7899,3.05531 -17.7751,7.24184 -20.7465,7.97278 -2.8773,0.70783 -4.1246,1.09561 -5.2416,2.05998 -1.3743,1.18655 -1.1113,4.0029 -1.0913,8.1411 0.014,2.90446 -0.7895,5.59255 1.0533,6.44887 4.0881,1.26087 12.3029,0.75642 20.6422,-2.24446 3.5501,-1.59095 11.078,-5.77749 11.078,-5.77749 l -2.2356,12.27292 c -3.2165,-3.52822 -12.3025,-0.80234 -18.378,1.66016 -3.0682,0.99842 -3.9683,2.93569 -4.7202,5.61738 -1.312,4.58698 1.6394,7.70204 5.0181,9.1663 2.2503,0.97523 5.6935,0.5271 5.6935,0.5271 -15.7421,6.16701 -12.5717,8.34044 -21.8482,3.89769 -4.0372,-4.25529 -7.995,-8.74972 -9.5771,-14.3092 z m 16.5475,-0.17883 c -2.6564,-2.98858 -7.2446,-4.66765 -9.8907,-3.44669 -2.3562,1.2795 -1.4754,3.89071 -0.6969,5.88406 2.0633,5.52201 15.9346,3.57834 10.5876,-2.43737 z m -9.3962,-15.1642 c 3.6527,-4.87931 -0.4978,-11.34063 -7.3451,-11.30759 -4.7603,0.0229 -7.2643,3.00291 -7.1724,6.71077 0.1742,7.02361 11.4674,8.6712 14.5175,4.59682 z m -7.813,-18.34981 c 6.8443,-1.93655 8.8777,-8.58624 4.0788,-13.33904 -3.4113,-3.37858 -14.0092,-3.68587 -16.806,-0.56533 -7.1437,7.97066 1.0632,17.20448 12.7272,13.90437 z m 5.4403,-24.31044 c 4.0082,-2.09736 4.7487,-5.52691 1.1431,-9.37656 -6.5273,-5.40704 -17.764,-1.00817 -14.0293,6.93955 1.8292,3.89275 8.001,4.99321 12.8862,2.43701 z M 251.38784,432.16108 c 6.03901,-2.2645 10.36487,-6.99844 16.70691,-10.66384 4.27867,-2.38819 2.98656,-2.0014 -2.5576,-5.14694 -4.35531,-1.93489 -13.13457,-10.59277 -13.92289,-8.49583 -1.92605,3.75389 -1.41848,24.1498 -0.22642,24.30661 z M 407.0679,644.12849 c 0.20371,-4.166 0.63665,-10.44359 0.46941,-15.0412 0.72439,-8.77437 -0.83059,-6.19581 -5.56282,-3.27937 -3.50009,2.30331 -9.11571,5.80572 -11.32087,6.93153 -8.69367,4.43844 -7.6453,4.65439 4.72629,10.41425 10.38165,4.49172 11.53869,4.02793 11.68799,0.97479 z M 394.84442,623.7461 c 8.29606,-5.33441 11.03877,-8.06727 11.37786,-13.95673 -0.0325,-6.76823 -0.85146,-9.22073 -6.75842,-4.46941 -20.15462,16.2116 -41.43288,-14.92141 -23.01341,-32.55255 3.75613,-3.59537 8.51483,-9.21021 8.54165,-10.62225 0.19204,-10.11028 -11.12398,-0.16928 -20.30688,13.81248 -10.19601,12.73213 -16.46118,28.59406 -7.22268,43.65315 7.37805,11.01329 23.55115,13.02853 37.38188,4.13531 z M 348.4189,603.84663 c -0.42178,-4.94345 0.91503,-10.48562 1.54471,-12.13787 2.21605,-5.81485 2.11264,-6.53357 -8.19408,-1.59941 -4.11589,1.40377 -9.03645,2.55983 -10.93464,2.56899 -8.46222,0.0409 -6.32064,2.66738 5.91858,12.59898 12.30093,9.98167 12.71681,10.8921 11.66543,-1.43069 z m 28.28095,-48.77193 c 1.25853,-3.06006 -1.44106,-4.20137 -4.00382,-3.59884 -0.20132,0.0473 -4.60368,3.39196 -9.77099,7.53554 -15.66516,12.56153 -27.23887,14.1367 -35.18255,4.78802 -8.05536,-9.48004 -4.85862,-20.86476 12.76351,-34.05411 7.77508,-5.81931 9.65167,-6.22879 5.85445,-8.69075 -2.8887,-1.87285 -3.0584,-1.58045 -14.24151,6.13844 -22.53678,15.55551 -29.22052,26.08162 -26.77484,41.28603 0.53486,6.24928 3.86384,9.48875 7.07587,11.88693 21.8622,18.85702 51.60425,-7.80689 64.27988,-25.29126 z m 23.01842,8.7803 -1.60154,-21.05662 c -23.30781,-19.5572 -45.5754,-53.15729 -53.45598,-81.10106 -7.99004,-24.83989 -2.41991,-76.90593 -1.21843,-73.05679 l -12.73465,-23.38094 c -10.57948,25.08025 -14.89789,63.19554 -2.65705,101.84533 10.39096,32.80893 30.90531,72.45812 71.66765,96.75008 z m -97.37224,-11.19588 c 7.18009,-14.1019 7.4236,-12.59032 -6.74801,-12.55404 -16.17435,0.0414 -14.38869,-1.93994 -5.12122,11.70912 7.44245,10.96118 6.2214,11.93743 11.86923,0.84492 z m 9.50214,-19.32252 c 9.28281,-3.07989 7.1637,-2.37266 19.43885,-10.51474 14.08863,-9.34503 14.62676,-14.37591 0.45865,-7.1379 -18.19099,9.29318 -34.28131,7.1476 -40.37428,-4.64972 -5.43051,-10.51455 5.51406,-23.82244 23.71947,-29.18319 6.22062,-1.83175 9.49213,-3.35707 9.47901,-6.07787 -0.04,-8.29282 -31.0048,3.11548 -43.67543,15.77906 -24.45852,24.44506 -2.5022,52.88438 30.95373,41.78436 z m -40.39451,-37.18937 c 0.82014,-1.27023 3.00709,-4.31678 5.02392,-7.47222 8.64395,-10.22711 1.31591,-7.11786 -6.48897,-9.80036 -4.12342,-1.46494 -8.35051,-2.91714 -10.75633,-2.52674 -4.64366,0.75353 1.6728,9.62589 3.23313,15.38022 4.3277,12.80704 3.84244,12.41843 8.98825,4.4191 z m 32.84346,-23.53076 c 15.65814,-1.69979 17.23956,-3.22574 17.22396,-6.45925 -0.0159,-3.20658 -1.94535,-2.57153 -9.80178,-1.39651 -20.80434,3.11158 -34.66136,-2.01311 -37.76224,-13.03587 -3.20202,-11.38241 10.79082,-22.34439 29.60509,-21.91489 10.19054,0.23263 16.93499,-3.34749 10.69399,-6.64894 -3.24918,-1.7188 -31.30017,-1.0287 -37.62458,0.88099 -18.58298,5.61128 -26.06463,16.01632 -24.20546,30.28588 2.77441,17.61572 12.51037,22.56616 36.09168,21.05152 4.51862,-0.29023 10.2605,-2.16383 15.77934,-2.76293 z m 11.48957,-57.60814 c -0.0137,-2.7527 -4.49314,-3.10376 -19.30794,-5.12513 -19.73269,-2.69237 -28.73559,-20.74122 -16.9819,-31.79115 4.45558,-4.18883 15.16248,-6.08383 21.14986,-5.06649 13.0145,2.21135 20.98462,4.78193 21.05979,0.3937 -0.0184,-3.91299 -3.7901,-4.15138 -28.22801,-9.00672 -36.92131,-7.34548 -56.74381,28.871 -27.09656,46.14652 11.26266,6.56278 49.43129,9.94203 49.40476,4.44927 z m 8.56137,-51.59877 c -0.006,-1.37869 -1.2145,-2.42529 -4.01693,-3.48066 -4.07196,-1.53352 -6.79914,-1.79478 -16.00737,-7.82554 -12.24899,-8.02222 -16.11557,-23.88839 -8.10371,-32.84306 7.78528,-8.36315 -6.49424,-17.9749 -17.68283,-8.5114 -11.62486,9.8325 -10.46936,25.05384 3.17617,36.9619 12.56423,10.96451 42.66592,22.17515 42.63467,15.69876 z m -59.70787,-1.48893 c 12.73668,-6.12094 21.97122,-2.7824 12.08178,-10.92485 -5.55664,-5.01163 -10.41034,-19.38143 -14.09734,-7.10639 -2.84496,7.32303 -4.8523,20.20634 -4.9169,21.4725 0.86802,0.8597 0.65719,-0.62975 6.93246,-3.44126 z M 717.15624,325.8562 c -14.62322,-3.45313 -24.77189,-20.19746 -21.24009,-36.43858 1.99564,-9.17641 10.41051,-30.84359 12.09657,-32.20466 6.38051,-5.15064 5.57125,1.61736 -0.20272,13.42235 -5.25213,12.04292 -9.34216,21.72541 -7.59644,28.83731 2.48488,10.1232 6.69509,17.82377 17.32613,20.28149 7.47272,1.72757 14.46064,-1.4414 19.18216,-4.83938 6.24245,-4.49256 12.06578,-15.90413 19.00189,-31.69251 2.22257,-4.44269 5.12297,-18.04709 9.00244,-9.80866 1.873,4.26536 -12.98368,32.93839 -18.5745,40.22486 -7.03402,9.16739 -19.03097,14.6323 -28.99544,12.21778 z m 87.80628,-10.51297 c 7.17883,6.69462 19.22294,9.96896 27.03328,7.454 19.15976,-6.95936 27.69726,-25.14301 20.0932,-54.13794 -3.86663,-16.25812 -7.13239,-26.36001 -10.34373,-28.33986 -1.56099,-0.96242 -3.2357,0.88229 -4.71737,3.16759 -1.32223,2.03954 0.7649,4.86198 3.03224,12.50886 9.54983,32.20843 7.30843,46.84494 -3.84036,53.14475 -16.17473,9.13981 -30.23314,-1.02313 -35.21189,-24.02331 -0.79631,-3.55386 -3.10612,-10.79279 -3.10612,-10.79279 -1.28199,-3.19137 -11.35355,-2.36991 -7.57038,8.32119 1.195,8.2885 9.10136,28.00841 14.63113,32.69751 z m 81.56795,-85.54099 c -0.38078,-11.36451 -24.94964,-60.423 -26.52745,-55.16962 0,0 0.0236,11.52955 1.01595,16.05504 0.37459,1.70783 1.63809,3.28075 2.68609,5.09334 21.28633,36.81612 18.35302,62.96105 0.31586,68.8813 -6.13543,2.85364 -7.44526,5.61081 -4.65665,8.45332 5.64571,5.975 19.50359,-6.11883 22.17874,-10.48358 6.74073,-9.79844 5.59157,-27.52433 4.98746,-32.8298 z m -349.66702,-4.50406 c 7.77108,-8.8312 24.68853,-39.19996 29.83429,-55.09311 15.84112,-47.30403 32.44254,-101.695582 36.63941,-151.848345 0.45632,-6.32727 0.68114,-15.9515331 0.98744,-16.7780169 -1.30233,-1.36880934 -9.40847,-0.5525544 -12.11772,0.8622219 -1.28666,1.7063999 -0.37215,5.448034 -0.7829,10.34167 -6.69734,56.405175 -19.64712,107.86711 -39.11577,160.32275 -8.5182,22.78792 -16.49413,37.81642 -26.88252,53.71449 -1.81345,2.77527 -4.12841,5.63891 -5.03404,7.25061 -2.62792,3.86686 -0.63566,6.35228 2.44,4.69526 5.45942,-3.15555 10.13194,-9.15078 14.03181,-13.46753 z m -26.67361,14.00203 c 24.71679,-34.66074 42.09864,-76.13323 55.42378,-125.00309 8.41348,-31.628816 15.77078,-63.61944 20.03449,-96.184351 0.87214,-6.950323 1.58619,-11.6048976 0.20252,-13.6655675 -3.39768,-0.8706556 -9.71732,-0.2368797 -11.89103,1.4726048 -1.32045,2.0370206 -0.37952,6.0734437 -1.51733,15.4447017 -2.94225,24.23285 -7.48035,48.580385 -15.2412,80.475622 -20.63855,70.63377 -39.88549,110.26368 -65.35857,145.03346 -2.05723,2.9238 -3.89748,4.82975 -3.69669,6.05809 0.29451,1.80173 2.80103,1.62641 6.88289,-0.9753 5.32276,-4.26164 11.42173,-7.99754 15.16114,-12.65617 z m -38.03009,18.6955 c 12.19867,-7.07538 33.48186,-37.50365 48.39613,-70.18721 16.7099,-38.57377 30.57084,-82.08921 39.54381,-119.74256 3.89164,-16.499669 9.22968,-57.65709 8.37154,-60.3532039 -1.01927,-3.2023552 -12.98779,-0.3933399 -11.29834,1.8070976 0,0 -11.18809,66.1874103 -23.61107,102.7406163 -23.06278,67.85928 -43.14758,113.94923 -65.06585,136.24359 -2.8733,2.9226 -8.53092,8.64015 -8.53092,8.64015 0,0 0.14688,2.52091 2.00143,2.88507 4.42939,0.76423 7.35916,-0.54315 10.19327,-2.03355 z m -18.82132,-2.48509 c 27.53154,-15.74735 59.17895,-88.21921 84.66058,-179.05722 4.3596,-15.541279 12.06563,-67.4965445 12.06563,-67.4965445 0,0 -11.03376,0.5314696 -13.13868,2.8672945 -2.10658,3.157655 -1.67456,11.132911 -4.55618,30.118311 -11.27508,57.404354 -28.66064,109.844489 -55.08861,161.775899 -11.42514,23.00813 -30.59047,44.7698 -42.77188,51.04167 -6.81124,3.50686 -8.77245,7.31003 -3.75521,7.52685 8.44996,0.2075 9.22099,1.96086 15.32005,-1.39198 z m 388.57991,802.24698 c -20.77476,0.1572 -38.20219,20.2242 -53.64652,45.3736 -32.87532,51.5426 -54.40495,137.3098 -59.37232,182.8162 l 12.59056,-2.5144 c -1.88362,0.8883 22.24306,-121.2269 60.48164,-173.8248 20.61955,-33.1465 19.7306,-33.6345 31.4773,-36.7841 14.85219,-3.9823 26.97891,11.953 19.69539,21.7151 -2.6376,3.3056 -5.59826,0.9321 -4.82218,-3.7462 2.47615,-14.9278 -19.35886,-17.5514 -25.28694,-2.8455 -6.8189,16.9158 11.97563,31.7276 30.10428,24.9044 16.2007,-5.908 22.76221,-28.6561 11.15751,-45.2773 -5.93397,-5.5995 -14.47882,-10.5339 -22.37872,-9.817 z M 732.5272,1056.884 c -24.53207,31.4257 -36.49952,63.5727 -51.28963,107.4443 -14.77822,43.8364 -25.26803,86.6684 -29.47618,135.729 l 13.40218,-1.8726 c -0.84211,-31.502 32.12185,-181.9008 80.15637,-238.6357 2.67707,-3.588 4.82644,-6.5679 4.61351,-7.3918 -2.78378,-7.5549 -14.21929,1.7089 -17.40625,4.7268 z m 54.83248,-12.2409 c -31.9494,26.7007 -57.06684,84.5336 -73.46105,137.9192 -17.72142,57.7074 -25.37335,110.4926 -23.9944,110.4773 l 12.78977,-2.0205 c -0.99096,-3.3281 33.70404,-206.3561 101.85183,-244.0063 5.91178,-3.0224 7.12562,-6.0182 2.09918,-7.2539 -7.72821,-0.9938 -13.90775,1.6034 -19.28533,4.8842 z m 36.10126,-0.2672 c -70.30095,10.0252 -113.91564,225.9231 -115.25403,243.8219 -0.0207,0.2762 -0.23874,1.6678 -0.23874,1.6678 l 13.98439,-3.0364 c 0,0 0.11276,-0.6896 0.16917,-1.0335 9.04279,-55.1381 18.01994,-93.8249 39.41008,-143.8095 16.69618,-37.053 39.76687,-84.4462 74.97301,-89.4089 2.86025,-0.4031 5.58863,0.713 4.54874,-2.6025 -2.20624,-5.2581 -12.75231,-5.8136 -17.59262,-5.5989 z M 403.12188,981.20847 c -25.37305,6.80597 -25.86312,37.23693 -8.48433,75.92133 1.31283,2.9223 1.10057,4.5296 2.41009,5.6471 2.92512,2.4963 5.15903,-1.0553 5.45566,-3.3857 0.45041,-3.5386 -1.11594,-8.2767 -3.88415,-15.154 -10.78332,-26.7897 -8.44221,-42.3192 1.86771,-49.29213 26.46367,-13.97539 33.93755,14.03423 38.10517,26.91283 1.02092,3.139 1.40678,7.4624 3.14592,7.6803 5.31812,0.6666 7.82866,-1.2406 7.75,-1.2397 0,0 -7.31878,-24.1135 -11.71836,-33.15398 -7.11905,-14.62853 -23.69478,-17.52149 -34.64771,-13.93605 z m -184.28855,30.77023 3.29631,320.6512 -48.20197,46.1911 c -21.10425,-17.6485 -48.87507,-45.3461 -48.87507,-45.3461 l -5.154,-542.07442 -15.68585,-1.07869 c -1.24947,232.93571 4.10677,469.27351 6.51513,702.62531 l 144.03848,-0.5384 117.13817,-187.1217 c 0,0 1.48323,-2.2297 1.9463,-3.4029 1.42306,-3.6054 1.19421,-8.9511 0.25715,-28.7006 -0.38103,-8.0261 0.45365,-14.2025 -0.75264,-16.0722 -1.22164,-1.8932 -3.75102,-0.5022 -6.1121,0.5873 -2.40492,1.1098 -3.84813,0.7416 -2.57847,-2.1171 0.71999,-1.6214 3.06731,-5.1881 5.09057,-8.5865 6.57147,-11.0381 8.1688,-14.5679 5.77231,-26.7004 -0.58894,-2.9815 -3.36479,-5.4809 -5.79482,-8.9771 -20.38977,-29.3362 -29.04662,-73.0602 -19.44232,-105.2614 3.01685,-14.2218 1.84268,-17.0829 -5.13784,-28.0621 z M 845.48829,660.20503 c -13.16903,-6.56813 -12.91438,-6.42183 -12.85303,6.28293 0.17674,9.50048 0.38349,11.79574 3.9386,10.47605 5.13645,-2.67744 11.42182,-5.15024 16.16342,-7.22281 9.06309,-3.22058 -2.53549,-7.0898 -7.24899,-9.53617 z m 52.20916,32.44935 c -10.25315,-7.98615 -6.49036,-7.09738 -9.16469,11.19684 -1.61539,11.05034 -3.85402,11.3598 7.53482,7.58477 6.46407,-2.31296 19.81898,-1.04874 13.75173,-8.58618 0.0399,0.13358 -10.10929,-8.52851 -12.12186,-10.19543 z M 492.4598,977.53027 c -15.48478,9.5915 -30.90264,55.41073 -30.90264,55.41073 -54.40884,7.087 -76.62166,60.8458 -78.56216,105.4872 -1.5319,35.2413 -3.46667,76.3923 0.13183,79.9562 35.54467,-16.4373 49.5107,1.9226 52.84031,-3.1061 1.52211,-2.1956 -8.02549,-9.3153 -19.99027,-15.6642 -2.7783,-1.4742 -7.08739,-4.135 -8.72262,-5.4579 -4.37825,-3.542 8.65283,-0.5989 16.92732,4.8934 10.55573,7.0067 12.30051,5.5024 7.52202,-15.2576 -5.19475,-22.5683 -6.03376,-25.3317 11.27691,-34.4922 6.92675,-3.6656 10.85347,-6.7562 15.77861,-12.3944 3.94112,-4.5117 4.95054,-5.6121 3.55322,0.9703 -2.42042,11.4021 -12.4925,16.4732 -21.56208,21.1918 -4.51168,2.373 -6.3365,7.0694 -6.31707,11.0808 0.0193,4.0938 4.97305,26.1514 7.23083,33.1888 2.09444,6.6903 2.91139,13.4094 4.54749,20.2335 4.28911,17.7126 4.59028,21.1917 2.6658,34.103 -1.12875,7.5721 -1.69644,11.8865 -1.22476,16.4482 0.42878,4.1461 1.067,9.7855 1.067,9.7855 0.0213,-0.1969 -9.83684,-9.8717 -31.07644,-1.2474 -15.31192,6.2175 -27.53294,0.049 -36.20102,-4.3301 -1.9056,7.0143 -1.37248,14.6053 -1.04379,22.628 88.87323,15.2149 164.59806,12.2003 228.30104,4.8234 1.44291,-18.8557 8.81975,-78.838 25.10794,-133.0337 6.7776,-22.5511 14.46286,-46.3315 23.24851,-62.2397 5.99099,-10.8479 12.1456,-18.1824 14.33609,-19.4601 0.6819,-0.4234 0.74343,-0.6443 0.72201,-0.9345 -0.017,-0.6012 7.7e-4,-1.1079 -0.0363,-1.6861 -0.26252,-3.4986 -1.16984,-8.912 -4.21172,-11.2811 -7.42514,-5.7828 -19.08489,1.8992 -22.80033,15.0219 -3.29615,7.8729 -18.35687,41.9416 -19.46541,41.383 -0.91545,-0.5597 -3.05708,-0.581 -2.31114,-3.2065 5.75751,-13.8054 13.71532,-28.42 18.15015,-40.8043 6.11832,-17.8272 19.74822,-27.3545 30.13704,-16.2703 3.56075,3.7991 5.01333,7.3219 6.63988,8.5241 1.22758,0.9073 2.85911,0.2589 3.85009,-1.2696 3.80531,-5.8692 -5.3123,-18.9924 -14.96668,-21.5422 -13.93548,-3.6804 -24.17565,6.5587 -39.567,39.563 -8.88658,19.0557 -10.4606,23.8336 -11.91698,22.3912 -0.31691,0.1322 -2.73284,0.1553 -1.90053,-3.5267 1.7886,-7.9127 13.60589,-30.9803 22.18783,-45.6249 12.70309,-21.6772 36.71376,-23.6889 47.02661,-5.1118 1.573,2.5303 1.68754,5.8606 3.42863,8.1141 3.14596,3.9716 8.23914,3.119 9.4303,-3.4732 -1.42458,-4.3397 -10.04705,-19.9762 -15.94514,-22.6515 -13.61756,-9.1303 -29.99955,-7.1273 -43.66497,5.3389 -3.10001,2.8279 -6.30213,8.5407 -15.25108,27.2087 -13.15503,29.9214 -13.51254,30.041 -17.2501,25.2837 5.26021,-14.5432 19.26587,-38.23 24.86395,-52.742 1.07292,-2.165 1.26853,-4.4803 1.15919,-6.7024 -0.44986,-10.4954 1.05843,-29.07 -21.3107,-42.008 -19.06393,-9.99288 -43.96467,1.0187 -52.26118,21.1972 -6.35449,15.4552 -11.00409,26.0763 -14.2686,28.2923 -4.58727,3.1138 -3.77169,-1.1617 -3.33092,-2.7165 6.412,-13.9933 15.49439,-28.1624 16.8006,-42.1882 0.53583,-37.91778 -38.0751,-51.50433 -62.86957,-32.09573 z M 286.03787,269.37359 c 29.85378,-14.27458 50.32386,-21.51943 80.80184,-30.86929 4.11133,-1.85554 4.76449,-2.27823 0.28326,-10.90535 -19.79955,-38.11694 33.02186,-69.26224 51.50594,-31.8372 2.46445,4.98981 3.05449,7.75779 5.40174,5.33194 4.3759,-5.87209 9.56617,-14.19654 14.94872,-23.69237 C 458.96261,145.68208 467.76766,109.65371 478.26,77.825956 482.54978,59.148808 488.61271,39.606461 490.16813,19.608663 449.04451,-50.137269 420.19564,-117.3626 376.67316,-179.38383 l -282.418921,2.93187 5.204148,564.27829 C 177.6909,321.09671 231.18641,296.67754 286.03787,269.37359 z M 603.7103,245.11198 c 3.38591,-3.65407 6.28292,-9.68713 18.28591,-35.01177 2.1416,-4.51856 5.56371,-11.52635 6.9532,-14.78469 1.77726,-5.94811 8.63659,-9.73164 5.39303,0.91959 -0.73815,2.29947 -2.01935,5.40387 -4.05846,9.53571 -4.00396,7.38604 -7.7845,16.42043 -10.62666,22.32475 -15.35485,31.63284 -14.40603,49.9554 3.29257,63.40976 13.24566,12.37978 40.78715,13.48753 55.21228,-6.89768 2.15714,-3.28182 4.06639,-7.49424 4.68289,-9.03831 6.1944,-15.51389 10.80587,-23.28798 11.99391,-24.82996 6.42519,-8.33939 7.58337,1.89235 -1.97748,17.76959 -10.95561,18.19346 -10.93198,37.77988 -1.13555,51.45168 14.5198,20.26369 41.67718,20.54251 58.53554,3.9693 l -4e-4,0 c 8.74442,-10.47559 15.63832,-23.756 21.11934,-40.69511 1.21479,-3.75446 2.48255,-6.5471 3.37849,-8.75009 1.38124,-3.39616 3.41042,-4.6771 8.69035,-5.74864 36.19582,-7.34581 66.22501,-44.89716 70.09501,-85.57582 0.50725,-5.50251 1.96272,-15.24368 2.46969,-21.02119 1.01117,-11.52685 0.3707,-71.167924 -0.80197,-74.713844 -0.63251,-1.911818 -1.72663,-2.915965 -4.08731,-2.862591 -1.81229,0.04093 -4.37091,0.70516 -8.04009,2.060386 -11.91105,4.399386 -17.46533,5.542216 -29.00048,1.563556 -3.81073,-1.314374 -6.44186,-1.747937 -7.99794,-1.596231 -5.0632,0.49362 1.75249,7.686191 16.61792,15.549874 6.36978,3.36956 11.42413,7.94964 6.28963,7.6637 -1.49241,-0.0831 -19.4289,-9.09458 -21.90765,-10.576119 -8.17898,-4.888473 -5.98984,1.356499 -1.62148,17.802869 5.86629,22.08622 2.69777,28.341 -14.70615,37.21233 -3.24485,1.65401 -7.53642,5.0777 -9.71497,7.27744 -9.1208,13.79928 -6.83925,3.68232 -2.24574,-3.66503 7.88632,-8.43935 2.96006,-11.23307 -13.33673,-5.26402 -18.5891,6.80867 -27.0781,2.08288 -32.41329,-8.22871 -6.03273,-11.65983 4.90462,-26.86455 14.1701,-26.67236 2.99926,0.0622 2.47194,1.14748 -1.91307,4.2107 -5.29864,3.70139 -7.78781,7.24209 -8.27391,13.46929 -0.99098,12.6928 8.14623,17.97667 20.73575,9.33076 5.94474,-4.08261 10.62867,-6.9089 15.15394,-7.98862 4.484,-1.06986 11.25361,0.52424 11.27096,4.11708 0.007,1.4805 -0.15711,5.11763 0.17067,5.91958 1.23401,4.00092 7.59625,-1.75329 10.36966,-3.80193 9.47346,-7.24376 9.14656,-8.64749 6.40889,-20.19491 -4.44457,-16.15369 -6.7634,-30.944645 -11.01129,-47.323708 -2.26769,-8.580323 -2.7439,-18.299223 -1.51864,-27.082586 0.61425,-4.403011 2.2248,-13.45634 2.50305,-19.645256 0.27825,-6.188915 -0.20521,-15.022314 0.0233,-15.02341 9.56577,7.149138 13.43669,8.374589 22.65407,4.759155 14.25891,-6.025511 23.31299,-5.516142 35.44545,0.11978 4.4893,2.085398 8.57422,3.545026 8.57422,3.545026 l 0.34158,-18.604972 c 0,0 -11.19596,-2.1760956 -31.87289,-4.6579455 -62.24143,-7.4708323 -189.79612,-7.7780194 -194.46112,-0.224771 -1.18587,1.92006453 -2.24278,15.2190275 -5.42533,33.7301665 -7.0947,38.468492 -15.09842,76.816651 -25.96126,114.398461 -2.2285,7.65676 -4.40348,10.75512 -3.22141,10.9696 0.48666,0.0883 2.75981,-2.89301 3.81908,-4.14228 5.9694,-7.04017 1.52117,9.57158 -7.38524,29.61975 -0.80418,1.81006 -1.45962,3.78977 -1.45674,4.39937 0.005,1.20431 -5.57263,15.17046 -9.43424,23.61958 -2.3997,5.25051 -4.41886,6.84734 -4.435,3.50732 2.64479,-11.5245 9.81314,-26.47028 10.7557,-36.72248 -6.32067,9.34359 -15.506,24.75834 -22.48306,33.97011 -1.27795,2.47487 0.11454,3.22022 1.28786,6.24868 4.38101,11.30752 14.69539,12.20964 20.53666,1.86153 3.25728,-5.7703 13.33117,-27.48318 16.81513,-36.9775 3.58337,-9.76505 6.11953,-14.92158 7.34144,-15.56998 2.45478,-1.30261 2.99085,4.22031 -1.284,13.46724 -12.97177,28.05924 -18.48841,43.76699 -24.92751,49.60903 -4.99651,4.53322 -13.73143,4.3451 -18.67073,-3.57053 -8.3741,-13.42016 -15.34353,-8.86838 -7.64374,4.90312 7.95427,14.22665 25.78159,15.36766 34.94114,2.37195 3.02379,-4.29021 17.1711,-32.02141 21.58886,-43.28186 2.46661,-6.28732 5.12132,-11.19141 6.02236,-11.54943 4.83312,-1.92044 -0.54716,12.43204 -14.16412,41.19797 -4.39304,11.09823 -11.51649,22.77199 -21.29355,26.46908 -23.79355,5.48605 -27.16029,-7.08546 -35.61752,-21.3602 -4.0729,-3.52844 -7.66181,2.2266 -6.04818,8.52693 2.61766,10.2205 7.34328,14.17853 14.62915,19.24141 15.20397,9.4365 36.12063,2.59417 43.60612,-8.43867 z m 107.0788,58.68338 c -2.21637,-4.76142 -1.95926,-9.62332 -0.90482,-14.16713 2.38761,-10.24193 6.41675,-20.19942 11.15938,-28.8774 7.7926,-3.78954 1.97225,11.00871 1.01678,13.20781 -9.23009,19.7898 -10.03767,27.41658 -1.19634,29.59032 7.57586,1.86259 11.5863,-2.80059 18.53181,-20.52933 3.56448,-9.09839 4.98418,-13.12569 6.2764,-13.66148 2.73799,-1.13524 4.07378,-0.0407 3.9425,2.7242 -4.59491,11.64106 -8.155,23.86749 -15.80322,33.57556 -7.52117,6.43657 -18.95633,6.59771 -23.02249,-1.86255 z m -71.02432,-14.33852 c -3.29557,-0.6045 -8.97815,-4.7837 -12.93392,-8.32315 -13.48366,-12.06459 -11.46765,-28.97521 4.73085,-60.90298 1.25827,-2.48009 5.9657,-12.13203 7.47782,-15.30186 2.70778,-5.67637 5.45903,-3.49562 5.47708,0.24022 0.005,1.05026 -4.03353,9.8618 -8.11857,18.04384 -17.88106,35.90736 -17.09293,50.46319 0.76313,58.76059 17.42723,8.09813 25.13982,3.24076 38.66101,-24.16615 7.76966,-20.5495 11.70889,-20.93171 11.3564,-13.15056 0.0138,2.90188 -9.446,22.62629 -15.58878,31.81287 -8.9081,13.32196 -16.72071,15.75778 -31.82502,12.98718 z m 1.12125,-17.24288 c -6.8516,-4.13243 -9.74437,-14.57044 -5.81664,-23.1829 3.5798,-7.10708 12.65229,-34.29571 17.04064,-35.87021 7.07966,-0.32074 3.36614,5.64785 -5.22469,22.4009 -10.13502,22.1802 -9.69677,28.07522 -1.64735,31.36399 7.45004,3.04385 10.89582,-3.40207 21.54607,-29.33087 1.67239,-4.07147 4.02264,-8.30642 5.43844,-7.44081 1.7368,-0.15065 4.77109,1.12432 -0.84852,12.88191 -1.33307,2.81142 -3.58418,8.7019 -6.0815,14.19327 -7.29898,16.04982 -15.7362,20.21406 -24.40645,14.98472 z M 763.21507,224.0134 c -3.01222,-1.5035 -17.10989,-6.85814 -15.07825,-11.44702 0.25082,-0.43202 1.07088,-0.10446 1.48917,0.16877 12.94677,8.45796 28.95639,10.46511 45.49382,-1.65955 2.77734,-2.49972 4.89095,-0.85355 3.36015,2.2643 -4.93894,10.05995 -27.36089,14.58555 -35.26489,10.6735 z m -41.44504,-14.04735 c 0.37726,-0.96433 1.5019,-3.83589 2.48472,-7.69068 1.47719,-5.79405 1.06946,-10.04419 2.44326,-9.32233 5.85839,3.07828 16.27195,3.03808 21.33401,-0.12564 5.54968,-3.4685 16.87365,-4.63542 21.03455,-1.99729 5.94455,3.76902 8.92908,1.9524 13.0302,-1.31379 4.62875,-3.6864 4.72989,-2.13381 13.1951,0.69487 6.25101,2.08879 8.71456,3.539 11.3551,3.03043 1.01234,-0.19498 3.04601,-2.52581 3.70313,-2.4154 2.031,0.34128 2.32179,6.07928 4.26023,12.61152 1.71506,5.77903 0.7897,7.1876 -4.45146,3.77152 -3.89574,-2.53918 -15.03029,-3.63399 -26.55404,0.0351 -8.53884,2.71869 -10.52189,1.68483 -16.82039,0.6933 -15.6968,-2.47104 -27.02628,-4.38826 -38.62641,2.49317 -6.19649,3.67586 -8.44045,5.57411 -6.388,-0.46478 z m -39.28987,-28.20107 c -7.76212,-15.12536 9.47725,-35.45876 24.90549,-28.51811 5.11565,2.30136 9.74169,11.18345 2.16554,7.16889 -34.98765,-6.64981 -25.69962,44.30948 11.4881,16.92433 24.7317,-16.7938 42.3322,-19.54446 43.97583,-3.57913 -0.63041,5.87828 -5.86289,4.99875 -9.81541,5.57956 -10.31065,1.55283 -14.11071,3.27167 -26.01742,8.52418 -18.14239,5.93233 -35.88336,10.8105 -46.70213,-6.09972 z m 136.67439,5.51249 c -8.54192,-2.0908 -15.97798,-5.36669 -24.87723,-6.87602 -8.81458,-1.43287 -12.83515,-5.97486 -11.31348,-12.16387 1.581,-6.43046 10.38285,-7.20453 23.70926,0.71884 14.77606,8.78528 25.44184,10.83482 30.77286,7.40199 10.7852,-6.94497 4.80346,-17.98691 -5.59091,-20.71406 -7.80442,-2.07641 -2.11446,-5.1598 6.27736,-2.76233 13.55135,4.9586 14.10702,29.30929 0.28614,34.5193 -4.62333,1.74284 -12.81018,1.37563 -19.264,-0.12385 z M 699.3563,107.9825 c 9.84397,-6.22681 19.3565,-11.799531 22.72466,-15.489566 1.76712,-1.935999 6.66939,-8.423598 2.83012,-6.417322 -20.07713,12.349954 -43.65462,2.538989 -60.74854,-5.568639 -8.20668,-3.723468 -6.1802,-2.056847 -12.44488,-1.569969 -4.24875,0.330209 -7.65325,1.259119 -8.44787,-1.766729 -0.35083,-1.335778 -2.72336,-0.748748 -4.24675,-0.882022 -6.28827,-0.55012 -2.411,-8.897908 10.68423,-18.198028 15.44294,-10.967456 28.94178,-18.164301 42.38783,-21.220576 13.9664,-3.174531 28.25916,-1.6255 38.84311,8.324987 4.06599,3.822566 3.73957,6.406108 7.38961,3.9897 8.32867,-5.513822 8.48182,1.679571 1.47881,8.414748 -4.80943,4.625584 -3.01826,5.847541 2.97376,10.132465 2.86052,2.045544 0.5568,4.048284 -0.99402,7.08983 -0.58105,1.85511 -0.0854,3.878761 -0.35607,5.28316 -1.25391,6.514118 -30.63334,29.815691 -41.31922,33.857861 -7.36459,1.45616 -3.55708,-4.14061 -0.75478,-5.9799 z m 20.11009,-42.438037 -4.92007,0.120609 c -5.41057,17.137359 -15.68561,23.071944 -24.51749,2.69421 l -3.91548,0.437978 c 0.0176,17.342407 30.01329,27.899918 33.35304,-3.252797 z m -32.17853,16.37252 c -2.06864,-3.37773 -4.43757,-11.155882 -6.56245,-11.245321 -5.77988,-0.179582 -13.75352,0.947753 -11.82047,4.499596 3.04605,5.62626 20.78089,10.661173 18.38292,6.745725 z m 39.56224,-3.484591 c 5.29108,-3.261374 6.40065,-5.482364 2.88712,-8.962146 -4.53778,-4.49418 -6.85385,-2.148511 -8.18182,5.123537 -1.14135,6.249999 -0.25498,7.259333 5.2947,3.838609 z M 654.50709,67.226505 c 35.49735,-16.514152 49.00366,-18.746736 63.54412,-14.919045 3.36711,0.886381 6.36231,2.727207 8.23768,2.594455 6.93542,-0.490908 2.42245,-8.204776 -10.08585,-12.513441 -14.2853,-4.92073 -23.284,-2.511744 -50.47559,12.027851 -15.92175,8.513543 -28.79493,20.986273 -11.22036,12.81018 z M 757.68904,46.516287 c -0.51758,-0.960018 -2.74973,-7.347484 -3.38859,-9.68193 -0.63896,-2.334446 -1.22045,-4.743884 -1.88674,-4.748416 -16.52355,2.824364 -31.11206,-0.10298 -35.03416,-0.991305 -25.10161,-5.685415 -49.27757,-4.207389 -67.2558,3.054302 -4.39152,1.773791 -9.82864,4.62712 -10.34876,5.123076 -1.41379,1.348122 -3.53907,-0.143407 -3.54712,-1.80745 -0.01,-1.95257 10.97641,-10.833239 17.92432,-14.366229 21.13096,-10.744981 43.53275,-12.791634 68.22752,-6.449129 16.10737,5.96075 26.43583,4.852911 36.63871,0.256972 5.00851,-2.256107 1.49875,3.226103 -0.0137,10.46362 -1.04782,5.014165 0.21085,9.281426 0.45023,12.105324 0.7055,6.822163 -0.0344,10.252546 -1.76591,7.041165 z M 1146.6414,1483.9208 1140.3646,918.52481 c -93.0959,70.17335 -269.82087,144.25329 -269.82087,144.25329 22.85872,45.2313 -25.95656,84.6941 -54.71587,38.8269 -28.70693,32.9079 -67.48406,147.4787 -68.48227,185.3897 0,0 78.81929,133.9377 117.28536,200.0571 z m -519.05835,-180.432 c 2.26521,-28.4156 7.80857,-76.6075 26.12149,-132.825 7.68148,-23.5807 16.96229,-50.6476 30.23008,-74.9282 5.30803,-8.4953 5.64657,-11.7625 -0.0773,-8.6636 -3.60211,1.9502 -19.94049,20.7586 -22.13991,25.487 -24.78611,53.7405 -35.81689,118.0991 -44.55888,167.2407 -1.98317,11.0462 -2.45265,24.7582 -2.45265,24.7582 z m 18.54004,-2.5367 c 5.27323,-69.0269 29.6544,-162.4129 67.16342,-223.5203 3.52463,-5.8225 7.89209,-10.8875 7.70065,-12.8875 -0.56423,-5.8948 -15.15032,4.4655 -26.36535,22 -12.45046,25.3499 -24.91252,52.3833 -34.34379,82.2664 -13.31296,42.1824 -22.93984,81.1196 -26.2748,133.8562 z m 36.63002,-6.1656 c 3.38621,-39.7799 15.33674,-76.3745 25.28831,-113.0103 12.16909,-44.7994 28.70981,-77.8542 48.08195,-107.6682 6.21323,-9.5623 13.57014,-18.5298 20.55821,-27.6601 0.89156,-1.097 1.77866,-3.0645 1.56351,-3.8813 -4.56044,-0.7436 -8.16628,0.7058 -11.66275,2.7119 -4.8838,2.802 -11.71851,9.8102 -15.69822,14.9948 -27.66343,36.0386 -42.29902,77.9158 -55.84176,120.2123 -13.00581,40.6196 -22.26623,79.6483 -23.75627,116.3152 z m -252.3645,-27.6618 c 5.63851,-0.5032 9.28623,0.5185 10.90748,-0.9976 1.60898,-1.5047 1.03475,-5.5009 1.48959,-10.6208 0.97264,-10.948 -0.15533,-10.3361 -6.92148,-3.1946 -11.20274,11.824 -31.83119,16.5634 -44.2096,9.6276 -6.24586,-3.4997 -10.58784,-5.9226 -11.14001,-2.9491 -0.64388,3.4678 0.32848,6.1056 3.00291,7.9254 14.97622,6.6168 29.06885,1.7979 46.87111,0.2091 z m -13.41281,-8.2287 c 7.81893,-2.6888 15.75057,-6.96 20.16635,-13.3954 4.21443,-6.142 4.13301,-7.0116 0.90505,-5.8167 -15.86509,8.0056 -26.30078,12.1034 -40.58088,10.0977 -19.33762,-2.7161 -20.11077,-0.2491 -7.26225,7.5847 8.40719,5.1259 15.33595,5.203 26.77173,1.5297 z m -28.61266,-24.1225 c 2.96698,-2.233 3.6314,-11.2051 1.21669,-11.6886 -2.44388,-0.4893 -5.94782,4 -6.77894,7.6323 -0.922,4.8183 2.6625,6.0085 5.56225,4.0563 z m 29.88265,-0.7175 5.12694,-0.5198 c -2.87347,-22.4504 -27.33453,-23.1512 -31.5615,2.6008 l 3.87979,0.5327 c 4.82055,-20.5449 19.61102,-20.1461 22.55477,-2.6137 z m 16.08122,-3.8005 c 7.43469,-4.2455 4.79063,-9.3746 -5.32109,-11.2347 -6.64074,-1.48 -6.21394,3.922 -2.69964,11.214 1.74619,3.6232 2.93179,2.9267 8.02073,0.02 z m -57.88933,-26.9122 c -0.0935,-2.5032 -1.16612,-6.5323 -2.38375,-8.9536 -8.81465,-17.5286 -13.80575,-38.2972 -13.11476,-64.1843 0.49529,-18.5574 0.6637,-24.2946 -3.19909,-24.2759 -5.36723,2.6512 -8.17198,37.1976 -0.98416,65.8584 5.07142,20.2219 20.19199,45.2222 19.68176,31.5554 z m -0.52181,-28.0872 c -0.63301,-9.6846 1.26193,-31.4274 0.14454,-36.1542 -1.46885,-6.2137 -5.2266,-11.797 -7.32982,-13.2723 -3.26345,-2.289 -4.02309,2.1774 -2.77365,13.8076 2.93148,27.2872 7.55742,47.9216 9.95893,35.6189 z m 2.17464,-49.7539 c 2.08879,-3.8536 1.21137,-7.909 -3.58301,-16.993 -18.88251,-35.7774 -21.55424,-60.3417 -2.34593,-69.4906 2.15061,-1.0243 3.51102,-1.2297 4.94197,-2.042 6.05162,-3.4356 3.66496,-9.5224 -5.41186,-6.8977 -25.07509,7.2509 -29.77376,30.7988 -8.08864,74.04 11.04061,21.5737 12.74921,24.5902 14.48747,21.3833 z m 4.35248,-20.4553 c 0.31271,-1.514 0.90001,-7.4007 1.13658,-8.605 0.2378,-1.211 -2.33443,-4.6442 -5.13462,-11.5536 -7.31092,-18.0393 -7.54296,-25.5553 0.13419,-30.8922 2.4921,-1.4942 5.07768,-1.5958 5.44825,-3.29 0.57664,-2.6363 0.48403,-6.9567 -1.11129,-8.1912 -11.09156,0.2016 -16.1461,6.7126 -18.02099,12.8767 -2.82295,9.7457 0.3903,23.9396 9.29608,41.4743 4.28148,5.4507 6.6007,15.4792 8.2518,8.181 z m 8.2204,-23.5385 c 5.79954,-12.014 1.2e-4,-27.4335 -8.10599,-22.0624 -5.25839,3.4842 -5.48708,7.1105 -2.12703,17.0221 4.09251,12.0723 6.44423,12.889 10.23302,5.0403 z m 20.44996,-32.1964 c 2.34911,-2.3718 0.20365,-5.7172 -4.33212,-18.8683 -3.88501,-11.2643 -2.25092,-19.009 4.88561,-21.3211 10.24408,-2.6402 14.06324,14.0759 16.30235,21.1188 1.17574,5.4413 4.78676,6.9071 7.93305,3.0787 0.88145,-1.0726 1.1278,-1.9582 -0.45699,-7.8927 -6.91814,-25.90532 -15.68068,-34.07499 -29.56899,-27.44824 -12.87602,6.14374 -11.02849,19.54364 -1.33292,47.65834 1.29707,3.7612 2.1653,6.5532 3.0753,6.9354 0.74481,0.3129 2.19183,-1.9454 3.49471,-3.2609 z m 11.3657,-8.9515 c 3.03279,-3.0622 2.86746,-1.6918 -0.76352,-12.4926 -4.13949,-12.3136 -6.27257,-14.8683 -10.52731,-10.5724 -2.61302,2.6385 -1.24709,5.4926 1.8809,15.573 3.63386,11.7106 4.57762,12.3711 9.40993,7.492 z m 536.06384,-48.27235 c 20.26946,-14.27816 11.56735,-39.40619 -15.42058,-48.45932 -3.18609,-1.06884 -6.69488,-2.36392 -7.79737,-2.87791 -12.41668,-5.78865 -22.04714,-7.515 -22.02477,-2.87965 0.0131,2.72137 3.7376,4.05509 15.64337,9.67811 17.61164,8.31791 21.67801,18.10737 13.17,30.60356 -6.13211,9.0065 5.65451,19.11206 16.42935,13.93521 z m 18.19189,-30.89862 c 1.69384,-7.2313 4.26094,-13.44594 5.47689,-17.66173 1.65867,-6.59711 -0.55659,-5.04338 -4.91162,-3.96855 -11.19564,5.94956 -19.28646,2.87472 -13.72668,10.82361 6.19048,10.58985 11.29855,18.75955 13.16141,10.80667 z m -1.67647,-25.19254 c 13.93715,-8.53531 16.80505,-30.40217 3.63297,-40.66084 -3.15052,-2.45368 -8.58626,-5.6745 -15.15407,-7.59234 -13.33119,-3.8928 -32.52849,-5.51514 -39.5347,-3.31304 -1.48936,1.79282 -1.52135,4.58475 0.002,5.38056 1.96603,0.70342 5.50784,1.14298 10.62198,1.60385 19.54727,1.76153 29.24281,7.45042 28.46096,21.27996 -0.80558,14.24926 -12.16196,19.84932 -32.82182,15.57726 -11.11011,-2.29732 -16.25866,-1.07186 -11.78235,1.46513 5.31722,3.01358 16.73893,6.92238 27.96625,8.99663 9.60077,1.57302 20.53364,2.09486 28.60894,-2.73717 z m -67.38165,-2.8462 c 15.40041,-35.51683 22.68931,-128.314 -68.29437,-194.32513 l 3.19094,18.51011 c 53.68372,45.8647 67.11021,104.88298 56.69861,159.27155 z m 79.8625,-64.25727 c -5.60735,3.71516 -10.28953,7.55915 -17.5077,10.86803 -4.31907,1.98716 -4.42517,2.46164 1.51006,5.60564 2.87118,1.52086 7.60256,4.32248 9.42306,6.23789 3.15946,3.32419 6.85561,4.57055 8.22059,3.33483 -0.20474,-5.25837 1.40699,-22.66966 -1.64601,-26.04639 z m -26.63244,6.99671 c 18.21305,-5.95965 27.89638,-14.83718 25.65028,-29.48341 -3.29491,-21.48486 -21.39713,-25.83425 -55.11244,-17.04844 -16.21812,4.22626 -17.58607,11.85573 -2.19299,7.75919 19.43669,-5.17266 34.82091,2.14794 32.90851,16.39652 -1.07226,12.28708 -10.89078,19.54509 -28.26895,19.73887 -9.17715,0.10233 -12.00371,0.94941 -10.72495,4.23438 0.86727,2.22764 30.23469,0.85894 37.74054,-1.59711 z m -30.74491,-50.78566 c 29.76471,-10.53984 43.4814,-26.56405 36.45906,-44.26882 -8.26872,-20.84715 -34.34931,-20.76799 -60.33342,-0.99099 -12.13956,9.06965 -10.22877,12.35576 1.58029,7.67743 15.29659,-7.21139 25.1751,-8.4085 31.53231,-2.88088 11.48231,9.98391 4.00704,27.70221 -13.16298,34.21745 -8.31295,3.55275 -10.97363,5.49231 -10.96157,7.99049 0.0191,3.95405 1.5323,2.98404 14.88631,-1.74468 z m 50.39765,-0.88737 c 0.70182,-6.2033 -6.55958,-27.61356 -9.53851,-22.63394 -0.7892,1.31925 -3.51156,7.41776 -7.00293,10.60683 -10.17587,9.29479 -8.27258,5.79653 1.96649,8.49163 5.69069,1.49788 13.75026,5.39179 14.57495,3.53548 z m -79.53419,-45.0424 c 30.01352,-17.78713 41.26456,-42.82316 25.42804,-59.20433 -14.23814,-14.72787 -37.46741,-5.80434 -58.83369,21.49578 -9.79575,12.51621 -2.35049,10.87492 10.91097,-1.07351 15.44696,-13.9175 35.36291,-7.50394 35.44571,9.65586 0.0354,7.32802 -10.22916,19.76881 -20.00219,25.60564 -3.03443,1.81226 -3.44922,4.54447 -2.34955,6.30469 1.18769,1.90109 3.6229,0.63999 9.40071,-2.78413 z m 52.74775,-18.79289 c -1.62825,-4.6722 -13.21793,-24.67872 -15.65022,-23.96328 -2.52111,5.1912 -2.6337,11.98558 -5.66485,17.49266 -4.1184,8.27766 -3.59858,6.98101 9.81446,6.79028 9.98473,-0.14218 11.20843,1.23797 11.50061,-0.31966 z M 864.73879,738.606 c 25.08494,-26.53485 26.98617,-57.30031 3.12815,-64.11136 -13.21219,-3.77179 -34.16477,5.95299 -34.11739,15.75517 0.0297,6.10274 1.18764,7.19784 6.50017,4.94798 22.33334,-8.56483 40.34664,12.73181 20.02033,37.6658 -4.93275,7.20968 -5.58409,9.01197 -4.10724,10.47456 1.72819,1.71158 3.11159,1.04818 8.57598,-4.73215 z m 270.84951,-227.52693 -7.7254,-695.82444 -148.51641,1.64889 L 863.4204,1.9102527 863.74823,47.377196 c 0.0111,1.570601 2.70776,2.516555 4.42121,0.5219 6.64583,-5.24072 4.11905,0.212318 -3.45997,11.99769 -7.66254,11.91521 -5.17001,21.636056 3.49449,34.170576 18.36431,26.566628 28.32815,75.599858 20.92792,101.662848 -2.79382,9.83989 -3.39615,13.80842 -1.44142,19.27451 2.23482,6.24945 3.60501,9.58661 9.91939,13.5597 5.49555,3.72756 50.55429,20.6705 123.34195,66.19351 l -3.983,-326.903517 45.0538,-44.017097 48.6155,45.347256 7.6772,539.693158 c 0.081,5.70605 11.2945,8.18075 17.273,2.20134 z m -32.0524,-540.271181 -40.6949,-36.948907 -39.4092,37.28264 c 1.7441,175.801698 6.9678,536.595258 6.9678,536.595258 l 39.603,2.39637 c 0,0 2.8144,-8.26288 -1.127,-29.50088 -5.9141,-31.8676 -5.9997,-70.86806 2.2726,-130.27657 5.1632,-36.45127 -0.7161,-67.9415 -9.5264,-101.07187 -7.5732,-22.05744 -8.0618,-42.54126 -6.9515,-62.36314 2.4645,-31.60976 10.919,-55.55181 11.482,-100.998264 0.3209,-25.906421 -1.2013,-51.252152 -0.6066,-83.209776 0.3441,-4.2861645 2.1632,-3.7782966 2.5338,0.6358362 1.5319,28.9011808 2.9631,56.3551518 3.5386,84.5878668 -0.4611,36.729007 -9.0477,74.616607 -9.6632,108.238647 -0.4852,23.29265 -0.7727,31.35123 9.404,59.59039 15.9944,44.38252 6.5537,112.94237 6.3854,114.15856 -6.0797,43.92351 -10.2456,100.07465 12.3984,141.79447 l 21.5122,1.67451 z M 830.10384,305.52137 c 11.82493,-5.57567 14.06853,-15.21401 7.41344,-38.29179 -1.18786,-4.11931 -2.54405,-9.01616 -3.01355,-10.88187 -1.43416,-5.69876 -4.01786,-6.29697 -7.40499,-1.71445 -2.02312,2.73723 -0.12221,3.34751 3.17418,16.04126 4.98228,19.18589 2.28239,25.57934 -4.89277,25.61397 -6.35991,0.0307 -11.37006,-5.1404 -13.32577,-17.60262 -0.66781,-4.25559 -1.60635,-7.15184 -2.65693,-8.84583 -1.76102,-2.83956 -3.83704,-2.30096 -5.48091,0.87596 -2.12725,4.11117 2.14156,20.89976 7.65583,28.99964 5.97358,8.16313 10.04519,9.80716 18.53147,5.80573 z m -3.42811,-17.23923 c 2.47697,-4.76678 -0.78602,-16.39324 -2.50934,-24.01102 -1.55619,-4.24464 -3.28361,-5.26562 -6.1034,-4.5434 -4.20064,1.07587 -3.94495,5.66711 -2.33628,13.2134 3.27591,15.36652 4.97745,17.29297 10.94902,15.34102 z m 35.81744,-28.18871 c 13.50891,-7.87847 14.6611,-21.22027 5.25751,-45.36047 -3.85549,-9.89753 -8.59786,-16.84126 -11.17052,-16.88789 -0.93827,6.33333 -1.8343,9.71325 -0.67857,12.18164 1.08773,2.2916 2.91187,5.79671 4.22038,8.73158 7.93386,17.79538 5.96599,28.12454 -1.44396,33.79576 -6.91686,5.29386 -2.45549,9.63062 3.81516,7.53938 z m -445.11811,-4.37802 c 31.81658,-7.15522 60.01184,-58.56898 77.62111,-104.3344 15.9926,-46.08921 32.97469,-96.721411 35.28608,-138.813365 0,0 -12.05508,0.689505 -13.50801,3.19103 -1.33823,2.462297 -1.87801,7.746984 -3.07493,15.275335 -7.88604,38.786734 -14.16703,68.244937 -28.26848,104.77522 -9.78862,25.35776 -20.45889,54.05646 -47.3018,92.74381 -8.84023,10.82738 -19.01451,17.59125 -31.87232,19.52271 -3.27285,0.49164 -8.79891,-0.0581 -10.17757,0.9355 -2.42421,1.74717 -0.17683,5.62284 6.14183,7.12523 5.66322,1.34656 11.38731,0.36367 15.15409,-0.42107 z m 439.34879,-10.85272 c 4.80901,-5.21217 5.22031,-11.34475 -0.38076,-24.23964 -1.56946,-3.61308 -2.2939,-5.66409 -4.10473,-5.13865 -3.83386,1.11244 -8.21212,11.24108 -5.46171,19.74018 3.58504,11.07815 5.64022,14.30603 9.9472,9.63811 z m -450.63413,-3.11404 c 9.32913,-1.34591 21.08136,-8.88041 29.50008,-20.58338 17.31921,-23.10963 29.15458,-49.31181 37.9216,-69.68059 7.01884,-16.41021 19.62916,-51.806424 23.0187,-64.611781 7.20038,-27.202182 11.11293,-44.746122 14.31552,-64.196592 0.29433,-1.78756 0.55947,-4.642298 0.0184,-5.558846 -3.71152,-0.966509 -11.81501,-0.274846 -14.27774,2.239104 -4.13215,31.185575 -14.19426,62.536984 -21.51391,88.582965 -12.3408,44.30689 -48.1336,115.36175 -68.03692,118.91575 -10.70413,1.91137 -23.09388,-7.24447 -21.22427,-16.80032 1.14785,-5.86711 1.92838,-8.10623 4.79144,-9.60432 6.92432,-2.5144 11.02217,2.15534 3.42983,5.31858 -8.74984,7.75296 7.28457,19.28212 16.95777,10.99711 16.403,-14.04912 -8.21707,-40.3343 -27.99105,-27.90882 -21.90763,13.7662 -15.9805,37.12091 -1.98572,48.09628 7.05671,5.53418 15.16658,6.2332 25.07627,4.79486 z m 155.84626,-33.43998 c 13.47384,-14.09054 23.5081,-32.25217 30.70318,-54.8988 15.5717,-50.85166 28.30323,-109.087915 32.64681,-154.6477363 0,0 -11.65423,-1.0674401 -14.21725,1.4135617 -1.80953,1.7515468 -0.0424,3.3791488 -4.62488,36.6896226 -7.77318,48.569218 -19.36055,96.850992 -36.43277,138.722052 -6.99771,16.93156 -9.01271,19.02063 -13.9891,27.82865 -6.94397,12.44087 -4.28636,15.5599 5.91401,4.89265 z M 863.11342,99.315394 c -1.26902,-0.638297 -1.15699,-0.211946 -1.68946,0.16383 -1.8439,1.301186 -0.55784,7.763326 3.77032,17.708716 11.30832,17.74856 12.99144,52.42058 12.41165,65.46519 -0.17889,3.91738 -0.55954,6.16602 0.67121,9.63465 1.21819,3.39968 3.33,7.34403 6.58633,0.65691 3.36822,-25.72284 0.20041,-52.57708 -9.91862,-74.23862 -3.57061,-7.70472 -7.06104,-15.23187 -11.83143,-19.390676 z m 9.39554,75.636936 c 1.86943,-6.92949 -2.03069,-34.2941 -6.59755,-43.87305 -1.8411,-3.86165 -5.0943,-4.1263 -4.65546,0.28062 0.14032,9.49372 -0.68701,27.5631 0.39742,32.89827 4.97737,11.1094 8.83719,18.17583 10.85559,10.69416 z m -26.38363,-110.42355 -5.24405,0.0641 c 0.37959,17.919236 -15.51119,23.077269 -21.63076,1.62006 l -4.70834,1.141779 c 6.61316,30.306488 34.81878,16.064341 31.58315,-2.825939 z m -31.72755,13.864353 c -2.81293,-7.922481 -1.71779,-10.840825 -8.59085,-7.188783 -5.25071,2.790058 -8.38325,5.733635 -0.90808,9.219012 6.64707,2.719265 11.27841,2.981449 9.49893,-2.030229 z M 854.28809,73.3708 c 2.13978,-4.435477 1.83534,-8.412406 -1.46373,-8.396482 -2.54562,0.01232 -3.23037,2.042335 -3.905,6.330355 -1.20479,7.658209 2.00804,9.032241 5.36873,2.066127 z m 2.44314,-29.808162 c 2.0136,-0.662985 1.40817,-3.495421 0.82457,-7.097775 -8.77412,-11.877395 -30.11284,-7.974033 -37.76457,-5.508842 -8.83638,2.964906 -11.07008,1.921746 -17.13692,-0.766556 -4.99755,-0.868245 -5.6859,0.347658 -6.8716,2.734833 -1.04432,2.102397 -1.19038,6.078508 -1.46016,13.004841 -0.22794,5.852495 0.0118,8.567941 2.03348,6.717696 7.83563,-7.171222 16.89787,-16.122097 30.26062,-16.821157 16.19404,-0.847176 30.12699,8.000137 30.11458,7.73696 z M 798.0561,60.424493 c 0.0119,2.412972 2.06042,0.885776 7.29719,-2.470821 19.05772,-11.57348 30.19006,-10.088982 46.67554,-4.855287 3.671,1.165443 5.89212,-2.6746 1.89159,-5.878018 C 834.23421,31.456685 810.3192,41.910478 798.0561,60.424493 z m 68.70341,-74.373784 102.1749,-172.741919 -579.86039,6.01403 L 489.55435,0.40223329 C 569.63724,-19.013809 701.53277,-44.134413 866.75951,-13.949291 z\"\r\n             id=\"path4096\"\r\n             inkscape:connector-curvature=\"0\"\r\n             sodipodi:nodetypes=\"ccccccccccscsscssssscssssssccsscccccsscccccccccccccccsccccsccccccccssssscccscccccsssccccccsscccccccccccsssscccccccccccsssccccccsccccccsccccsssccsccccssssscccscssccccccccccccscccccccccsscccccccccccccccccccccccccccccscccccccsccccccccssccccscccccccccccccssccccsccccccccsccccccccccccccccsccssscsccccccccscccsssscccccccscccccccscsccccsccccccccccsccssccsssscssscssccssccsssccsssssccccscccccsccsccsssssccsssccssssssccsssscsccssscccssscccccccccsssccscccccssscccccccsccccccccccccccccccccsccscccccscscccccccccccccccccccsssccscccccccccccccccccccccccscscssccscccsccccccccsssssssccccccccccccccccccsccccssssscscssccscsscccsccccssssscscccccccccccssccscccccccccsccccscccccssscccsssssssssccsssscsssccsscsscssccssccsscccccscsssssssssssssscccsccccscccsccccsccccsccccsccssccccsccsssccssssssssccscsccssscsccssscccssscsscccsccccsssscssscccccccccsccsccscccssccscccssccscsccccccccccccccccccscsccccccccsscccscsssccscscssccccccscccssscscsscscscscssscccsssscccssssssscsssssssscssscsscssssscscscsscsscsccccsscccccccssccsscssccsccssccscccsscsscccccscccscsscsscscccsccccccscsscsccccccccccsccccsccccssscssccccscccscssccscsccscsscssscsccsssscccsscccscscsssccscssscsscssscscscscccccssssscssccssscsscccsscc\" />\r\n          <path\r\n             style=\"fill:#e2cf00;fill-opacity:1\"\r\n             d=\"m 367.41414,1334.0138 c 12.08049,-18.4034 73.26186,13.4666 76.62168,26.3243 35.68249,-28.6513 79.36841,-31.194 114.93544,3.7788 35.7298,-39.8195 74.47478,-37.554 115.00589,-15.1713 -4.5991,-8.8538 50.96253,-48.8064 85.27522,-24.1907 l 93.85977,162.4248 -589.64562,8.4396 c 34.25315,-52.519 64.4186,-115.1262 103.94762,-161.6055 z M 100.38107,484.38419 c -3.300045,-8.81228 -17.245143,-99.46441 15.54829,-102.09422 53.32215,22.86347 121.98007,106.005 153.93251,156.923 39.59485,63.09649 80.51079,208.74301 58.74239,202.60369 -3.14419,-0.88674 67.73827,68.31838 72.64788,75.1032 8.06659,11.1476 -115.73284,221.98304 -136.65037,214.70094 -6.32338,-2.2014 -48.60233,-26.7363 -48.60233,-26.7363 l 0.4277,-69.89347 c 0,0 64.56133,-130.66378 67.73596,-174.12106 1.19969,-16.42181 -45.90966,-43.98056 -48.11366,-49.62736 -5.48953,-14.06424 -5.44001,-66.54816 -32.96213,-89.15878 -15.13028,-8.95176 -29.28965,-5.88351 -44.52287,-3.77743 -62.001692,-9.61519 -31.09009,-113.96591 -58.18337,-133.92221 z m 1035.54813,35.15195 0.6577,25.77352 c -40.6467,9.30915 -113.0443,-24.30508 -134.2307,31.37621 3.3689,59.84804 17.1209,86.54962 26.7128,104.52829 7.2421,16.16358 56.5863,-2.91711 74.22,13.27078 50.7507,60.90058 39.8437,142.86129 41.1034,216.58818 l -21.6035,11.18201 C 971.69467,835.63419 853.37797,562.661 836.54086,484.75771 834.96437,434.6436 971.91559,272.01045 971.91559,272.01045 c 0.31109,-0.35347 50.88551,29.9338 50.88551,29.9338 1.219,0.47198 1.2815,211.43102 1.2782,210.45377 39.694,1.59468 78.1944,5.02973 111.8499,7.13812 z M 828.81419,330.12781 c -75.79365,110.98467 -100.01847,275.86707 -93.79288,390.62046 11.88615,171.29926 136.07032,322.75743 128.04034,337.29113 -1.40241,-0.9878 -4.61814,0.7511 -5.86116,-0.327 -28.48768,-24.7075 -48.14596,-20.1062 -62.57551,-20.1733 -27.58124,-0.1282 -35.11338,8.1575 -50.91595,9.8971 -40.35765,4.4428 -37.06684,5.4275 -71.4801,-7.066 -43.63859,-34.6863 -101.86138,-61.00911 -148.11449,-74.67894 -36.91571,3.72751 -93.06868,21.76275 -114.53402,7.90074 145.19974,-274.4525 121.05793,-448.84579 -35.56996,-733.08136 12.76507,3.59868 14.87467,15.42423 24.43243,18.23961 31.67756,11.80091 75.09006,6.71051 101.01311,-4.91246 28.14032,-13.01587 55.04756,5.28626 54.6795,4.67535 56.1247,38.58888 123.7912,63.14001 159.06106,80.23261 10.42457,5.22099 23.43064,-3.34783 34.8498,-5.78551 23.3975,-4.99473 43.38015,-15.22222 60.94327,-9.55785 5.63354,1.8169 14.03062,4.02427 19.82456,6.72542 z M 478.80717,-23.031056 C 471.10658,-36.949974 392.2966,-182.52896 392.2966,-182.52896 l 574.15517,-2.92452 -84.56453,142.230899 c -8.04409,7.758859 -48.26818,29.583256 -90.07454,-18.35778 -0.69763,6.963053 -60.68604,50.645627 -113.23715,-0.571757 -30.96521,28.692546 -62.68556,45.468722 -115.66737,14.144769 -1.07049,8.910754 -41.67269,49.2805654 -84.10101,24.976293 z\"\r\n             id=\"path4098\"\r\n             inkscape:connector-curvature=\"0\"\r\n             sodipodi:nodetypes=\"ccccccccccssssccssccccccccccccccccccsssccccccccssccccccccc\" />\r\n          <path\r\n             style=\"fill:#d40000;fill-opacity:1\"\r\n             d=\"m 556.99464,1360.8644 c -56.20374,-51.3953 -113.5897,-3.8015 -112.2314,-0.8458 -22.26269,-22.0789 -43.99597,-40.1212 -72.91906,-30.8202 0,0 -0.0833,-7.8319 0.13231,-8.0124 86.69864,14.8454 219.26683,17.4705 373.81737,-16.6033 l 8.1363,16.5088 c -41.70939,-14.2745 -62.89851,5.8423 -81.05273,29.2564 -67.13977,-40.7823 -83.00256,-4.1743 -115.88279,10.5165 z m 123.02217,-606.38088 39.3461,-1.20464 c 8.68112,114.22281 106.23867,288.06632 108.53924,288.04082 -6.76227,-9.1591 -69.80738,-1.1773 -69.32826,-0.017 -35.73617,-92.09839 -74.87362,-184.07022 -78.55708,-286.81918 z m -226.5095,273.70828 c 0,0 -13.02334,-32.6257 -20.75711,-46.56081 40.53343,-70.92446 73.61483,-144.23304 90.09979,-225.52754 l 28.14414,-0.0624 c -7.09493,112.05933 -94.93545,283.10145 -97.48682,272.15075 z m 506.09122,-20.6129 c 60.74277,-112.38613 48.25887,-273.26641 -128.57397,-360.28902 0,0 3.27293,-118.06165 16.34643,-118.47715 2.96123,0.88154 79.58121,-1.86792 79.58121,-1.86792 19.53186,-49.43667 51.18423,-109.31422 95.8865,-150.00485 l 2.5946,131.89952 c -33.3773,3.66226 -53.63668,14.53706 -63.469,40.74976 l -46.18298,10.80932 c 4.8728,132.47646 56.15977,254.35934 205.44888,362.6842 -35.0461,30.76438 -155.30542,93.76624 -154.85353,92.67864 z M 216.7376,932.55909 216.52821,795.18083 c 22.40126,-5.09578 40.17059,1.20979 58.26426,-39.19061 0,0 31.27521,14.40487 41.67271,19.72739 -28.50331,52.29447 -52.99254,108.10851 -99.72758,156.84148 z m 292.09305,-246.47392 0.75096,-69.75272 66.31507,1.17316 c -5.3654,23.70915 -6.86159,47.37535 0.91896,70.93856 z m 151.23424,-2.52414 c 4.27384,-22.86958 7.25194,-45.85422 -2.40659,-69.96097 l 71.79694,0.42434 -0.92055,69.47259 z M 522.03647,548.71038 C 508.57594,412.0626 413.02049,258.29005 411.73985,261.59767 c 11.07466,1.6456 30.60473,6.90148 41.26748,1.71313 12.99707,2.00736 24.21716,0.4157 24.81782,-0.78878 0.81183,-4.79295 89.43556,197.62738 78.8815,285.48846 -1.34115,2.98162 -31.82372,3.51899 -34.67018,0.6999 z m 165.92925,-0.64292 c 9.42789,-63.29985 34.29419,-179.17508 95.00991,-273.59449 7.20468,16.56504 13.2853,33.61316 23.08893,49.06128 -45.81194,68.17998 -73.64504,145.83649 -90.1777,224.9782 z M 258.35438,518.77184 C 229.45937,461.51095 110.90785,372.17694 117.02184,381.26874 165.19631,337.16166 219.1583,308.89013 273.01725,280.33668 c 0,0 9.73059,9.02305 8.29656,11.33702 -32.71958,52.79677 -47.63282,164.05311 -14.68241,227.35542 31.74007,67.65485 87.15445,107.24127 143.54374,138.17814 -3.86374,42.56457 -5.64094,73.31712 -15.64063,115.70159 0,0 -35.41851,-18.1062 -64.40986,-29.69343 C 324.64254,662.9852 307.21097,591.35813 258.35438,518.77184 z M 563.41356,-48.860269 c 41.70926,24.769233 78.78638,21.698165 114.3787,-12.939161 45.61386,40.431869 94.23819,20.825497 114.67191,2.14282 19.33526,21.278635 44.3492,32.925703 80.65493,25.420865 l -8.80259,18.995954 c 2.04275,-10.064591 -251.23523,-23.644311 -373.31268,11.9623579 0,0 -7.31692,-14.1775569 -6.52178,-14.3080289 10.65084,-0.763589 46.26771,11.9674752 78.93151,-31.274807 z\"\r\n             id=\"path4094\"\r\n             inkscape:connector-curvature=\"0\"\r\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccscccscccscccccccccccccccccccccccccccccccccccccc\" />\r\n          <path\r\n             style=\"fill:#000000\"\r\n             d=\"m 1001.25,153.375 0,19.25 18.5,-1 0,166.15625 -20,0.0937 0,19.75 55.5,0 0,-19.75 -14.5,0 0,-47.78125 24.2188,-31.5 31.7812,79.28125 -20,0 0,19.75 60.75,0 0,-19.75 -16.8438,0 -42.4062,-101.53125 43.4062,-64.71875 13.5938,0 0,-18.25 -58.5,0 0,18.25 18.375,0 -54.375,79.34375 0,-79.34375 14.5,0 0,-18.25 z m 462.5635,103.89032 102.3115,190.39093 c 0,0 2.9974,-0.55036 4.5,-0.84375 141.8063,-27.68802 254.1208,-31.47552 374.75,-10.28125 l 107.2393,-177.24908 c -195.1706,-2.21902 -588.8008,-2.01685 -588.8008,-2.01685 z m 11.4053,8.10968 568.9374,0.625 -32,52.4375 c -19.166,-5.90616 -29.8474,2.87259 -32.5312,21.21875 0,0 -2.3692,-1.02017 -6.8125,-1.5 -28.0389,-3.02796 -31.5785,33.88677 -5.4063,38.34375 6.6829,1.13792 7.8126,-0.1875 7.8126,-0.1875 -23.3469,19.59596 -36.6077,6.37529 -47.5938,-0.0937 -0.2972,2.28802 -20.9246,17.77162 -40.375,-0.75 27.8554,2.77939 32.1909,-25.10947 18.875,-35.71875 -2.786,-2.73609 -5.625,-4.875 -5.625,-4.875 6.5545,-5.70434 7.9826,-13.28778 3.7812,-21.96875 -8.4472,-17.45711 -34.9218,-16.43753 -38.9687,2.625 -1.5747,7.41738 -1.625,8.71875 -1.625,8.71875 -21.3797,1.39462 -25.7226,21.55989 -18.375,32.75 4.1767,6.36095 13.3615,7.74111 21.8437,7.3125 -11.432,16.18055 -37.597,10.67292 -49.25,-2.65625 -18.5191,21.74323 -39.6242,19.09642 -50.1562,7.4375 7.1548,-0.0769 12.0875,-0.18049 18.6562,-6.25 11.2331,-10.37882 5.7141,-28.78582 -10.1562,-33.9375 -3.0789,-0.99943 -5.2977,-1.20462 -5.4688,-1.21875 0.1129,-0.15758 0.4121,-1.17614 1.0938,-6.71875 3.9482,-32.10143 -44.1818,-28.92969 -39.5312,2.65625 0.5389,3.66052 1.5312,5.625 1.5312,5.625 0,0 -5.1063,-0.28501 -8.0312,1.0625 -26.7279,12.31328 -8.3128,46.22262 12.3437,37.5 1.9601,-0.8277 7.2893,-3.44385 8.0625,-3.40625 -25.5849,31.69708 -47.0607,9.22892 -52.7188,5.78125 -17.2779,25.61053 -47.2885,8.13816 -47.9062,6.34375 1.8689,0.5187 7.4957,-0.64114 12.8438,-3.375 16.9096,-8.80705 12.1257,-31.47148 -1.0626,-36.40625 -4.0404,-1.40891 -8.92,-1.55696 -14.4062,-1.125 0,0 0.4169,-5.70647 -0.125,-7.71875 -8.3125,-30.86511 -46.7292,-15.45485 -37.2812,10.625 0.8286,2.28764 3.0624,4.59375 3.0624,4.59375 0,0 -5.2081,3.16158 -7.5312,5.25 -18.3399,16.48701 0.3235,43.68634 21.75,32.375 2.7659,-1.46013 5.4464,-4.52735 6.2188,-4.34375 -10.0798,18.404 -25.375,24.83027 -47.1876,9.59375 -13.4531,21.31163 -35.4053,12.4588 -41.5937,1.78125 20.5084,1.8771 33.8295,-37.40988 -5.5937,-38.6875 -3.0658,-10.6682 -2.9127,-26.92377 -27.9063,-24.125 z m -133.125,22.90625 c -21.4032,56.74067 -81.8204,108.09303 -116.8126,172 -39.5315,64.68808 -27.1183,130.84551 26.6876,142.28125 28.2052,5.99482 64.9981,-21.1216 68.2812,-50.3125 0.6706,-5.96341 2.8683,-9.10992 6.875,-8.625 3.1283,0.37861 2.8372,8.07274 1.6562,17.3125 -4.3199,30.35027 -20.7704,78.51536 -42.0624,100.71875 l 99,0.0625 c -3.9778,-2.24739 -40.9398,-48.42721 -37.3438,-104.4375 0.063,-10.01632 0.059,-13.34041 4.5,-13.3125 3.5636,0.0224 3.6019,1.67195 4.6562,11.5 6.6712,62.17462 83.9738,68.92031 108.25,9.46875 12.2535,-30.00463 -0.5867,-83.40007 -32.9062,-129.0625 -24.546,-40.17692 -66.3131,-86.89285 -90.7812,-147.59375 z m 43.625,373.4375 c 0.2152,0.12166 0.3635,0.1414 0.375,0 z m 367.3437,-328.9375 c 4.5154,0 8.1554,3.67206 8.1563,8.1875 0,4.51544 -3.6409,8.1875 -8.1563,8.1875 -4.5154,0 -8.1875,-3.67206 -8.1875,-8.1875 0,-4.51544 3.6721,-8.1875 8.1875,-8.1875 z m 127.125,0.96875 c 4.7839,0 8.6555,3.90358 8.6563,8.6875 0,4.78392 -3.8724,8.65625 -8.6563,8.65625 -4.7839,0 -8.6555,-3.87233 -8.6563,-8.65625 0,-4.78392 3.8724,-8.6875 8.6563,-8.6875 z M 1631,343.21875 c 4.6131,0 8.3428,3.73068 8.3438,8.34375 0,4.61307 -3.7307,8.375 -8.3438,8.375 -4.6131,0 -8.375,-3.76193 -8.375,-8.375 0,-4.61307 3.7619,-8.34375 8.375,-8.34375 z m 356.9688,10.28125 -7.25,12.875 c -7.9971,-7.00905 -2.4836,-16.20025 7.25,-12.875 z m -456.5,17.75 -7.2071,-13.3125 c 12.9042,0.87075 9.0998,10.10855 7.2071,13.3125 z M 1752,364 c 48.8257,55.6319 92.6149,39.17577 121.25,2.1875 12.2807,31.52585 39.6508,53.32419 86.75,32.125 -2.849,5.04117 -10,13.9375 -10,13.9375 -41.6239,11.2118 -62.2831,-8.3762 -78.3438,-27.03125 -42.3463,35.15408 -82.2219,26.63203 -115.125,-4.375 -28.084,35.35517 -73.5614,42.95258 -115.6562,14.09375 -19.2443,28.40113 -46.8505,39.8705 -81.5625,25.65625 0,0 -7.3647,-11.57654 -8,-12.3125 5.0272,4.2197 68.9566,30.75644 84.5625,-33.0625 C 1658.1298,412.98503 1731.0921,414.98882 1752,364 z m 4.9062,22.875 c 54.9234,51.35703 112.5603,6.94728 114.0313,3.8125 0.8624,2.85514 32.2098,40.2841 77.4063,26.21875 L 1941,429.5 c -85.0463,-14.38826 -163.2748,-23.6313 -342.4375,2.71875 0,0 28.596,-8.4688 43.0625,-31.28125 8.0517,5.22961 70.2045,39.92139 115.2812,-14.0625 z m -694.375,14.5625 c -4.9987,12.10475 -13.1679,24.62336 -20,35.8125 -32.1412,49.8673 -33.9707,54.65077 -36.5312,72.25 -7.15112,34.45116 33.5292,48.39211 46.5,24.875 5.8117,-9.93741 9.4714,-3.46882 6.875,5.9375 -1.656,16.52421 -18.4762,35.67065 -18.5312,35.3125 L 1090.125,576 c 0,0 -21.1393,-21.53111 -20.8125,-38.8125 0.028,-7.89938 4.2335,-8.12851 9.375,-1.03125 14.7086,20.30294 42.1313,3.97234 42.3125,-24.90625 0.1111,-17.69276 -5.2575,-27.61705 -37.2812,-75.25 -6.981,-10.42443 -14.675,-23.54754 -21.1876,-34.5625 z m 501.875,28 c 0,0 23.9068,2.805 25.7813,3.28125 2.098,1.62776 -20.1291,7.72957 -20.2187,7.28125 z m 48.4688,245.03125 c -1.4473,0.0479 -3.2528,1.6744 -6.25,4.625 -6.4846,6.38368 -7.958,7.22188 -14.25,8.125 -4.7447,0.68103 -14.7658,6.44741 -20.8438,12 -1.6429,1.50126 -4.7804,2.75398 -8.5312,3.40625 -3.2592,0.56677 -7.7448,1.3386 -9.9688,1.71875 -2.2225,0.38014 -4.6385,1.08328 -5.375,1.53125 -3.1913,1.94478 -8.3893,2.24228 -14.2187,0.84375 -5.622,-1.34879 -6.5232,-1.31352 -12.7187,0.59375 -9.0269,2.77846 -14.9336,2.78365 -19.375,0 -4.4404,-2.78204 -11.4949,-3.82043 -15.9688,-2.375 -6.6175,2.13801 -23.7558,-8.12214 -23.7188,-14.1875 0.01,-1.37632 -9.7398,-8.67213 -12.1874,-8.6875 -8.6869,-1.28761 -85.0142,28.8474 -84.625,30.59375 93.7233,115.7577 172.6189,292.11995 113.1874,507.93755 l -10.5,-5.0313 c 8.8227,-39.2295 12.3166,-78.7099 15.0313,-118.8125 -175.9184,-75.9478 -191.0612,-252.56196 -122.7813,-364.0625 l -11.5937,-12.34375 C 1306.8122,742.42258 1264.7681,754.95743 1162.5,840.75 l 0.2812,138.875 c 0.2516,125.5459 0.1876,247.875 0.1876,247.875 37.0097,4.098 77.7692,7.4461 117.9687,10.9062 0,0 -0.5165,124.1591 -1.4375,172.7188 -0.7788,41.0738 0.75,38.5 0.75,38.5 l 133.125,70.1875 c -9.3564,-36.9707 13.734,-51.6531 33.0622,-50.1175 -8.5445,-35.6417 12.6622,-51.9583 36.8753,-47.3825 16.3545,3.0907 22.0793,12.1083 31.4375,41.9063 1.5207,4.842 3.6124,11.3207 3.6124,11.3207 l 9.3312,-0.3443 c 11.6769,-25.0798 19.4795,-56.9919 46.9591,-61.13 35.9625,-5.4154 49.3558,19.2944 49.3391,43.9999 34.8474,-30.7051 76.5874,-6.9394 73.8741,38.9307 17.533,-11.2698 47.2407,-21.4593 65.9583,22.0018 7.0376,-1.4818 10.6225,-9.3236 20.5196,-11.7788 3.701,-0.7732 12.0937,-5.2813 12.0937,-5.2813 l 0.1036,-1.5056 c 0,0 7.7793,-2.6923 18.2089,-4.4007 8.9498,3.3402 6.3393,3.2244 11.1614,-2.723 5.3716,-2.7521 14.0847,-4.5678 20.8074,-3.9644 7.046,0.6314 10.1818,1.14 14.3124,-0.6563 6.4314,-2.8102 12.441,-3.5249 16.25,0.7187 2.7354,3.0475 6.6925,1.5769 10.9376,1.4063 8.4948,-0.3414 19.8115,3.1485 23.3437,10.7813 5.205,5.3067 16.5937,10.6874 16.5937,10.6874 l 9.2188,-2.125 1.0625,-3.4062 75.4063,-28.7812 c -153.76,-168.363 -149.7523,-391.7193 -113.5313,-504.7813 l 13.9063,6.6875 c -7.376,33.5079 -15.7456,67.9222 -14.6563,117.875 138.4636,61.7359 207.3517,221.3087 123.4063,360.5938 l 8.875,11.4687 c 34.9217,-14.6583 122.7653,-63.9785 153.125,-90.7813 l 6.4687,0.5313 c 0,0 18.4102,-11.9206 26.5313,-18.2813 l 1.0937,-369.62495 -6.4375,1.6875 -1.1562,-21.59375 -114.1563,-9.0625 c 1.4513,-1.08506 2.5448,-1.52642 2.875,-3.6875 l -0.6563,-204.625 c -4.2397,-6.48429 -99.8516,-62.4908 -135.4062,-75.59375 -1.4237,-0.009 -0.4443,2.39691 0.062,8.25 1.7465,20.07212 -11.8051,37.93605 -27.5,37.96875 -5.6497,0.0118 -6.6257,2.41246 -6.3437,13.9375 0.3994,16.38859 -5.5242,27.39829 -22.7813,33.625 -20.4581,7.3817 -34.3043,-3.32119 -45.6875,-45.40625 -2.9896,-11.05284 -8.8368,-8.28836 -14.4375,6.8125 -2.7801,7.49569 -11.7812,25.6891 -17.1563,35.28125 -4.1412,7.37007 -10.6912,10.64158 -19.5937,14.5625 -6.9413,3.43307 -21.9654,2.83796 -30.625,-1.5625 -15.697,-7.97641 -21.7879,-17.55184 -26.3125,-41.28125 -0.5912,-3.1005 -2.6294,-2.83349 -7.7188,1 -27.7169,20.88282 -66.6954,-0.70617 -66.4687,-36.8125 0.066,-10.60014 -0.3671,-11.0224 -6.5937,-5.9375 -18.7956,15.34806 -44.3373,7.56392 -54.5626,-16.625 -2.3933,-5.66255 -3.6704,-8.18662 -5.5312,-8.125 z m -159.3125,12.8125 c 1.9586,-0.0861 8.0625,8.03125 8.0625,8.03125 5.6287,6.22497 13.1922,9.37617 21.0625,14 0.7323,-1.09847 91.7688,121.07765 107.25,289.53125 l 42.3437,0.21875 c -7.8961,-163.68354 -53.0394,-242.35559 -73.75,-292.84375 l 15.1876,-4.8125 c 34.0557,65.25007 75.5656,197.68295 74.1874,313.62495 l -69.9374,0 c -9.8729,-116.1289 -55.0309,-229.35479 -118.1876,-315.24995 -4.3963,-6.59813 -7.8401,-11.19959 -6.5624,-12.375 0.091,-0.0834 0.2131,-0.11926 0.3437,-0.125 z m -26.7813,17.28125 7.0938,22.25 c 0,0 0.8519,-5.19201 3.0312,-7.15625 13.8181,-12.45291 27.0423,3.94063 20.8126,26.1875 -1.4225,6.84918 -4.1876,20.34375 -4.1876,20.34375 0,0 -13.8849,-7.12133 -20.875,-9.40625 -19.2712,-8.1855 -25.6912,-24.32392 -10.9687,-26.15625 2.4652,-0.30682 7.5313,-0.53125 7.5313,-0.53125 -6.1218,-4.80964 -19.625,-15.8125 -19.625,-15.8125 z m 64.6876,2.5 c 5.8207,3.30306 20.8416,6.86765 29.4687,3.625 6.9723,-2.62066 12.2791,-1.18244 19.5313,-0.5625 4.1582,0.35551 12.4374,-1.46875 12.4374,-1.46875 41.4045,87.10292 69.8833,190.45276 74.625,284.96875 l -32.5624,0.1875 C 1582.6759,893.40531 1543.8136,791.40747 1494.5,715.75 c -2.1821,-3.29678 -5.0834,-8.56444 -3.0312,-8.6875 z m 136.0312,1.5 c 12.6072,0.15131 25.7982,12.71876 32.9688,33.28125 3.9923,11.45087 5.5521,10.75759 10.9062,8.90625 13.7551,-4.71161 28.4,10.38888 9.9688,12.90625 -18.093,2.98952 -7.7679,38.38284 -9.3126,41.5 -7.3316,1.28145 -21.1093,-28.80046 -20.75,-37.75 0.8811,-21.93755 -19.7257,-40.28091 -32.5312,-31.0625 -6.068,4.36823 -5.4078,7.4487 -7.2812,5.875 -5.7635,-4.83998 -6.9307,-18.18563 -0.1876,-25.75 4.8736,-5.4655 10.4883,-7.97503 16.2188,-7.90625 z m 374.5625,7.5625 c 0,0 0.7128,28.84967 -0.375,35.21875 -2.1486,19.23071 -27.2692,21.2534 -28.25,5.875 -4.1039,6.14468 -6.9249,13.78751 -8.5625,20.65625 l -17.8125,-12.25 c 6.7636,-4.85564 13.2151,-9.11709 18.2187,-15.125 -13.2067,1.00064 -20.5867,-10.42927 -11.75,-20.15625 9.8119,-11.1425 36.9546,-12.34359 48.5313,-14.21875 z m -654.9375,9.125 7.875,8.875 c -70.1882,124.40965 -45.441,283.4437 123.9688,367 -1.1209,38.1695 -6.01,76.7745 -15.125,112.5938 l -62.5,-30.3126 c 0.4206,-140.6617 -79.2254,-274.76086 -206.375,-362.9062 46.137,-37.06957 97.1777,-69.63196 152.1562,-95.25 z m 511.75,1.0625 c 2.9802,16.42401 18.5326,46.17199 19.6562,44.46875 -0.1628,-0.97652 -64.7216,82.69113 -92.7812,222.625 l -23.9688,0.0937 c 15.7128,-93.24235 47.0686,-181.22579 97.0938,-267.1875 z m 198.9688,3.90625 12.75,7.71875 c -66.8995,56.01029 -110.9527,127.02105 -143.3126,203.59375 l -16.9062,-8 c 50.1693,-111.08002 99.7393,-160.41042 147.4688,-203.3125 z m 17.8437,12.40625 c 3.4997,0.22304 7.6535,4.65467 14.0937,8.1875 6.297,3.45352 4.7293,5.28942 -7.125,14.375 -14.0189,10.74593 -15.3392,10.27024 -15.2187,-5.0625 0.08,-10.17051 2.649,-16.95346 7.5625,-17.46875 0.2279,-0.0239 0.4542,-0.0462 0.6875,-0.0312 z m -15.4063,15.8125 c 0.7366,-0.0391 1.3323,0.2039 1.7188,0.8125 1.0249,4.05702 0.9198,13.3556 -0.7188,22.53125 -1.3249,6.04064 -19.3035,21.21738 -25.7187,27.21875 -2.5699,1.68811 -3.7466,1.07108 -4.2187,-1.9375 0.2026,-4.76401 0.6638,-11.10687 0.75,-17.5625 0.025,-1.98783 -0.3923,-4.07077 1.4062,-5.59375 8.8112,-10.39975 21.6353,-25.19478 26.7812,-25.46875 z m 33.4063,4.9375 c 0.1084,0.004 0.177,0.0187 0.25,0.0625 1.659,0.99606 1.3873,21.84448 0.2187,23.21875 -5.2161,1.34817 -19.2433,-0.86146 -22.8437,-2.78125 -0.7871,-2.4218 19.0132,-20.63717 22.375,-20.5 z m -626.6563,6.75 4.875,20.4375 c 0,0 1.3967,-2.74084 1.75,-3.28125 9.6874,-14.81474 21.4731,-6.12982 21.2813,14.4375 -0.063,6.49623 -5.9687,32.46875 -5.9687,32.46875 0,0 -36.3608,-17.46327 -39.2188,-25.125 -2.8121,-7.53864 1.1816,-14.1725 7.875,-14.78125 2.5024,-0.2858 5.1277,-0.4905 8,0 L 1450,778.3125 z m 416.3126,2.71875 16.5,6.09375 c -34.4102,55.97239 -69.9184,111.25766 -95.7813,237.3437 l -69.1563,0 c 9.6716,-77.05539 29.2733,-152.80502 64.25,-226.5312 0,0 13.5816,-4.17149 21.25,-6.65625 0,-2e-5 -57.1589,130.78756 -63.8124,214.875 L 1790,998.6875 c 17.8248,-81.93971 51.1913,-166.86602 93.3438,-225.84375 z m -130.9376,2.03125 c 9.2924,-0.34609 16.1472,6.18862 15.625,17.78125 -0.1166,10.60158 -1.0881,12.14335 -8.5937,7.90625 -9.8517,-5.5615 -17.6442,-5.68292 -26.4687,0.625 -4.8578,3.47216 -9.625,6.34375 -9.625,6.34375 0,0 4.2575,-18.41625 10.7812,-24.21875 6.2486,-5.55785 12.706,-8.22985 18.2812,-8.4375 z m -35.4687,27.25 c -0.6708,6.2314 -2.5081,9.08813 -4.1563,14.40625 0,0 5.4113,-2.10547 8,-3.3125 12.2889,-5.72989 25.0962,4.88185 24.9063,17.3125 0.5523,8.29254 -8.4578,18.22633 -19.1875,18.3125 -3.7434,0.0301 -7.7058,-1.14852 -11.5312,-4 2.7755,15.19188 3.3277,22.21933 -7.7813,29.84375 -9.295,6.18586 -28.8813,-0.88544 -27.7813,-17.875 l 0.6876,-10.46875 -9.4063,1.21875 c -26.2721,1.07612 -26.7316,-31.26211 -5.5313,-36.34375 8.4664,-2.00224 17.6563,4.9375 17.6563,4.9375 -4.0268,-7.92839 -4.1085,-21.5728 1.3125,-27.875 13.3417,-15.51038 34.4544,-1.40957 32.8125,13.84375 z m 229.4063,-20.1875 c 1.4358,12.10268 6.2433,25.29928 4.875,36.59375 -2.0469,14.43574 -14.3202,22.98576 -23.9688,13.625 -1.1905,-1.15497 -3.3438,-3.5625 -3.3438,-3.5625 -4.3475,5.50827 -7.0624,21.09375 -7.0624,21.09375 l -17.0313,-10.5 c 0,0 11.8273,-8.3011 15.0937,-13.03125 0.9105,-1.31635 1.3438,-3.8125 1.3438,-3.8125 -9.4778,2.96274 -17.5209,-6.72923 -14.9375,-15.28125 5.132,-14.00836 30.62,-19.20039 45.0313,-25.125 z m 119.0312,8.75 c 6.3752,-0.19861 16.2445,1.60883 24.0312,2.4375 5.9963,1.0451 2.6706,4.42455 -10.75,17.5 -12.3256,12.00963 -11.9383,10.87882 -21.4374,10.71875 -22.1842,-0.37432 -26.0712,0.12461 -13.1563,-13.8125 6.7673,-7.30293 12.6755,-13.89871 17.5313,-16.34375 1.0299,-0.29726 2.31,-0.45417 3.7812,-0.5 z m -40,2.53125 c 0.2817,0.0126 0.5078,0.11689 0.7188,0.3125 1.4685,1.3706 0.9734,7.62594 0.8124,16.875 -0.1699,9.8436 -0.063,9.84868 -4.1874,15 -5.2501,6.57928 -9.6129,13.29258 -15.0938,19.625 -4.7462,5.15041 -4.5981,4.59906 -7.4375,-7.78125 -2.7538,-12.00698 -1.2193,-15.74632 14.25,-33.15625 5.2344,-6.71673 8.9658,-10.9635 10.9375,-10.875 z m 69.2812,6.84375 0.1876,24.34375 C 2049.0671,869.16887 2017.9609,919.51327 1996.8125,975 l -15.9375,-6.34375 c 27.6123,-70.8936 68.9431,-126.18038 113.7812,-168.59375 z m -396.8124,14.71875 c -7.567,0 -13.6876,6.12109 -13.6876,13.6875 5e-4,7.56641 6.1206,13.71875 13.6876,13.71875 7.5664,0 13.7187,-6.15234 13.7187,-13.71875 0,-7.56641 -6.1523,-13.6875 -13.7187,-13.6875 z m -0.094,4.3125 c 5.2233,0 9.4684,4.24549 9.4688,9.46875 0,5.22326 -4.2455,9.46875 -9.4688,9.46875 -5.2233,0 -9.4375,-4.24549 -9.4375,-9.46875 0,-5.22326 4.2142,-9.46875 9.4375,-9.46875 z m -508.5625,5.78125 c 142.7912,91.60977 206.8165,233.624 206.5313,355.625 l -8.0626,-3.625 C 1379.3,1004.4835 1285.5955,898.49313 1184.3123,829.90625 z m 845.375,1.3125 c 3.2325,0.0121 7.6309,0.51384 14,1.25 11.8208,0.63057 13.2702,1.37723 5.125,10.71875 -2.2306,2.55824 -6.5113,7.90892 -9.5313,11.9375 -3.0185,4.0286 -6.6936,8.23285 -8.375,8.8125 -2.4847,0.85735 -23.2353,-0.12216 -29.1562,-0.9375 -1.9399,-0.26714 0.6072,-2.24687 10.7188,-16.6875 7.7493,-11.06862 8.5719,-14.73307 15.9062,-15.0625 0.4167,-0.0187 0.8507,-0.0331 1.3125,-0.0312 z m 59.4687,4.6875 c 0,0 2.8338,78.57684 0.7813,128.6875 -32.5731,-1.20462 -51.7045,11.15863 -59.6563,34.5625 l -34.2187,-16.9375 c 25.1079,-64.48547 58.6844,-109.35909 93.0937,-146.3125 z m -100.8124,1.8125 c 1.8497,0.0275 2.9079,3.85725 3.4374,11.40625 2.1541,13.50656 1.9181,15.07971 -3.7187,23.75 -2.8064,4.31679 -6.6566,10.41169 -8.5313,13.5625 -3.2678,5.49657 -5.5911,7.1331 -6.4062,4.46875 -4.4582,-14.57267 -5.8648,-23.5925 -4.2812,-26.53125 2.601,-4.83135 14.753,-22.09877 16.4687,-24.34375 1.19,-1.55706 2.189,-2.32502 3.0313,-2.3125 z m -814.5313,1.46875 c 114.7813,71.0646 198.7497,192.43315 202.2187,339.06255 0,0 -24.4607,-11.4805 -39.5624,-19.875 l -0.7813,-14.25 7.9687,-0.25 2.5626,16.0624 17.5312,-0.5624 -4.6562,-40.0938 -27.4376,2.5938 -5.5312,-22.7188 8.3125,-1.7812 4.5937,14.6562 17.8438,-4.7188 -9.5,-35.7187 -27.5625,7.5313 -8.8125,-24.125 9.1562,-3.2813 7.4063,14.4375 16.7813,-5.8438 -15.8438,-35.8124 -25.3438,11.9687 -12.875,-23.375 9.9063,-5.2813 7.9687,13.9063 15.6876,-8.125 -19.4063,-32.9375 -24.0625,13.4375 -12.0938,-18.125 7.4688,-5.21875 8.25,9.53125 13.7812,-9.75 -21.125,-28.40625 -23.0312,18.03125 -17.0312,-19.71875 7.8437,-6.65625 11.7187,10.5 13.0938,-11.4375 -25.0938,-27.375 -21.9374,20 -16.3438,-14.1875 8,-8.84375 10.1875,7.78125 10.8437,-12.84375 -27.3124,-22.5 -20.4688,20.25 -19.625,-12.96875 0,-9.65625 c 6.3721,2.45921 13.1163,5.32197 19.1562,8.53125 l 10.1563,-15.375 -29.3125,-19.78125 z m 319.6563,6.0625 4.3437,25.0625 c 4.1204,-6.81556 7.4003,-11.50937 16.3125,-8.875 10.7043,4.36114 10.8519,20.48018 1.7812,45.15625 -1.6802,4.57177 -3.75,8.53125 -3.75,8.53125 0,0 -4.6921,-1.94671 -7.8124,-4.09375 -6.55,-4.47705 -17.5806,-9.54743 -23.2188,-18.4375 -5.9043,-9.30968 -6.0336,-22.33241 4.8125,-21.21875 2.155,0.0135 6.4063,1.03125 6.4063,1.03125 l -16.2813,-20.75 z m -325.9688,7.46875 19.875,12.8125 -4.125,7.5 -15.75,-7.09375 z m 498.2812,5.90625 c 5.758,8.05078 -14.5059,31.77347 12,41.25 0,0 0.651,5.46014 -4.875,8.78125 -12.9668,9.42943 -31.5914,-7.78461 -25.8124,-25.5 3.6953,-11.33098 14.3751,-24.46636 18.6874,-24.53125 z m 55,0.75 c 0,0 7.9922,5.83912 9.5938,7.375 14.7565,14.15086 14.8985,34.43898 1.5312,41.53125 -8.8929,4.71886 -18.9472,0.91694 -22.4374,-5.9375 -1.6165,-3.17174 1.0424,-6.49004 4.4374,-6.46875 6.367,0.0399 11.2272,-12.15775 9.3438,-25 -0.7464,-5.08898 -2.4688,-11.5 -2.4688,-11.5 z m 174.125,4.71875 c 0,0 1.7572,17.34273 4.2813,25.03125 7.7499,21.55973 -2.1498,34.68872 -16.625,27.46875 -2.0674,-1.03118 -5.7187,-5.71875 -5.7187,-5.71875 l -1.4376,24.78125 -20.5937,-6 c 4.455,-7.16141 10.8658,-12.25321 15.6563,-20.3125 0,0 -3.0829,-0.10804 -5.7813,-0.125 -12.3014,0.4239 -16.8373,-13.21214 -3.9375,-24.4375 9.6096,-8.28816 34.1562,-20.6875 34.1562,-20.6875 z m 107.6563,5.75 c 2.492,-0.0176 5.5993,0.18353 9.875,0.1875 13.0624,0.0122 16.4156,-1.75809 10.6563,6.375 -2.2465,3.17033 -7.7216,11.99563 -9.3438,15 -3.2928,6.09859 -3.9521,8.01737 -9.4375,9.21875 -7.9437,1.57333 -16.9503,0.48585 -26.0313,0.90625 -1.9724,-0.0968 2.0827,-6.86199 4.3438,-11.0625 5.5435,-10.29837 8.9261,-17.36716 13.6875,-19.53125 1.8709,-0.85036 3.758,-1.07614 6.25,-1.09375 z m -40.375,7.96875 c 1.5794,-0.0836 2.7477,2.74532 4.25,8.59375 3.5057,13.64748 4.411,13.98766 -1.25,25.1875 -2.8563,5.65114 -7.7178,15.22559 -9.7187,19.1875 -5.133,10.16108 -5.4229,10.06269 -8.6563,0.96875 -6.2034,-17.44644 -6.7416,-15.65124 3.5,-35.25 6.3965,-12.24064 9.5667,-18.56533 11.875,-18.6875 z m -753.1875,4.78125 18.4688,14.8125 -5.25,5.09375 -10.2188,-7.53125 -15.0938,16.15625 24.8126,22.625 21,-20.6875 18,18.8125 -5.5,4.65625 -10.5626,-10.1875 -15.8124,13.5 23.5937,27.875 23.7813,-18.125 14.9062,19.53125 -6.0938,3.8125 -9.7187,-9.4375 -15.4687,10.71875 19.25,27.125 24.25,-13.90625 13.7812,22.65625 -7.6562,3.6875 -7.8126,-12.4375 -17.4062,10.0313 16.4375,31.7187 26.1875,-10.9375 10.5312,24.2188 -8,3.25 -6.7187,-14.5626 -17.625,6.9688 11.8125,33.3125 26.5625,-7.625 6.4375,24.75 -8.1875,2.2813 -4.0313,-13.7188 -16.9062,4.0625 7.0625,33.4375 27.0313,-1.7188 3.2187,27.0313 -8.4063,0.375 -2.0937,-16.125 -17.2187,0.2187 c 0.092,5.684 0.75,17.2813 0.75,17.2813 l -10.4063,-4.8125 c -15.4607,-102.7869 -70.6002,-188.45178 -152.75,-248.09375 l -0.4375,-12.28125 20,12.6875 c 0,0 18.3403,-16.33669 21.5,-20.5 z m 789.0312,23.96875 c 5.7316,-0.0444 3.1973,4.40039 -3.7812,17.6875 -7.7857,14.82382 -9.1696,15.13109 -23.75,18.6875 -17.7332,4.32541 -17.2155,5.29215 -7.625,-15.15625 3.6981,-7.88482 6.3951,-14.78529 9.7812,-17.40625 4.4446,-3.43911 13.0546,-2.12027 22.4063,-3.53125 1.1662,-0.17596 2.1502,-0.27491 2.9687,-0.28125 z m -829.5624,4.375 c 85.3135,55.03836 139.2423,168.88485 145.9374,237.90625 0,0 -2.3089,-1.5483 -6.9687,-3.6875 -6.4671,-2.9687 -8.055,-4.9107 -9.9375,-14.3125 -16.8994,-84.4008 -64.5424,-156.02932 -128.6562,-206.59375 z M 1942.6875,920 c 3.6101,-0.75138 10.1839,25.15942 8.2187,30.59375 -1.4119,3.90735 -14.1027,-5.31729 -18.7187,-7.28125 -2.308,-0.98198 8.0597,-22.80458 10.5,-23.3125 z m -411.4063,1.1875 -0.4062,26.875 c 0,0 3.2377,-3.84501 4.9062,-5.0625 6.3457,-4.62913 16.04,1.78614 16.4063,9.71875 0.508,11.00112 -1.1544,15.4674 -9.9687,30.75 -2.7286,4.72834 -6.8438,10.75 -6.8438,10.75 0,0 -10.4057,-7.41816 -21.7812,-18.75 -12.2954,-12.24669 -9.947,-28.60186 0.8124,-28.65625 3.22,-0.0265 6.0897,1.0701 8.9063,1.96875 C 1520.9897,940.86554 1512.3438,925.5 1512.3438,925.5 z m 333.4688,20.125 c 0,0 5.5695,7.33346 11.9688,26.625 6.1098,18.42182 -3.2958,32.2891 -16.0626,25.34375 -2.2876,-1.24464 -4.6874,-3.9375 -4.6874,-3.9375 -0.8947,8.93025 0.6938,24.99615 0.9062,25.12505 l -20.5938,-3.5938 c 0,0 11.3123,-17.96306 12.125,-22.40625 0,0 -1.2773,1.00294 -6.9374,1 -20.6915,-0.0106 -16.3999,-24.6254 7.5,-38.28125 3.5883,-2.05015 15.7812,-9.875 15.7812,-9.875 z m 118.625,0.3125 c 4.4768,-0.19997 2.3628,4.13395 -2.5938,14.25 -5.4795,11.18666 -4.1073,10.21716 -15.6874,4.3125 -16.1948,-7.91138 -15.2382,-9.14702 5.2812,-14.6875 6.4866,-2.39798 10.655,-3.77025 13,-3.875 z m -293.6875,3.28125 c 16.2194,0.0981 28.1806,16.09983 25.7813,38.84375 -4.1205,39.0446 -1.7524,36.6359 2.5,40.5312 7.7453,7.0989 -2.7402,11.3596 -11.9688,4.5938 -6.425,-4.7103 -8.5178,-9.3616 -8.2188,-30.90625 0.345,-24.76404 -0.991,-31.06915 -9.8437,-28.90625 -5.525,1.34999 -7.2662,6.04819 -6.6563,22.75 0.8574,23.4389 -0.6924,29.3418 -9.5937,36.8437 -9.597,7.4277 -19.9534,0.8052 -11.1875,-4.0937 4.0091,-4.5086 4.763,-10.2421 3.2188,-24.4063 -1.6905,-12.06507 -8.7278,-55.45986 25.9687,-55.24995 z m 400.9687,19.6875 c 2.0397,-0.0386 4.0885,-0.0151 6.1563,0.0625 31.2078,1.17113 110.125,7.59375 110.125,7.59375 l 0.6875,23.3125 c -3.5245,2.16894 -62.4223,-6.81196 -105.75,-6 -10.1294,0.18983 -17.2999,4.66255 -24.625,0.90625 7.0333,2.91623 6.3877,38.08325 -24.5938,29.56245 -26.2719,-9.4467 -13.4705,-44.97222 20.125,-53.93745 5.7768,-0.783 11.7582,-1.38404 17.875,-1.5 z m -173.6562,15.625 67.4375,33.25005 c 9.4402,126.6033 53.1452,260.3592 202,361.75 -24.1148,17.2538 -84.6081,59.633 -153.75,88.6562 l -5.6563,-6.0625 c 82.0923,-139.605 20.072,-293.267 -123.6874,-362.8125 0.3879,-38.7482 5.2557,-76.9756 13.6562,-114.78125 z m 237.2188,21.21875 c 12.9326,-0.5043 16.297,0.9801 17.4062,6.8437 1.0473,5.5373 5.1577,6.8388 10.0313,5.0625 11.8684,-4.3256 19.1124,16.7242 9.2812,26.0625 -6.1052,5.7991 -5.0355,8.0311 -0.031,8.0626 12.3938,0.078 12.0309,16.3008 -0.5624,25.5 -5.2271,3.8165 -5.1552,5.5497 0.3124,8.25 9.1593,4.5204 7.3145,13.4565 -4.3124,20.8124 -6.3259,4.0026 -6.5334,4.9848 -1.3126,6.4063 13.1531,3.5808 -0.2688,22.3242 -14.6562,19 -5.9026,-1.3638 -11.52,-0.089 -17.1562,3.5937 -15.4126,6.4196 -17.9918,7.6934 -34.625,5.625 -14.6079,-2.6801 -21.1357,-7.4883 -24.9063,-20.3124 -8.5687,-26.0769 -17.8078,-54.9647 -17.9063,-83.4376 -1.2905,-17.4797 28.0079,-33.28363 41.8849,-33.96778 11.303,-1.7022 24.2677,2.38648 36.5524,2.49908 z m -922.4063,0.4375 c 15.4985,0 28.0625,12.564 28.0625,28.0625 0,15.4985 -12.564,28.0625 -28.0625,28.0625 -15.4985,0 -28.0625,-12.564 -28.0625,-28.0625 0,-15.4985 12.564,-28.0625 28.0625,-28.0625 z m 311.875,8.25 -2.5313,24.5312 c 0,0 4.1235,-3.2203 5.0938,-4.0312 7.2998,-6.1005 18.8385,0.7215 16.2188,10.2188 -0.853,8.3699 -15.3042,33.2503 -21.0626,38.4687 0,0 -23.1776,-25.2495 -25.6562,-30.1875 -5.5087,-10.9748 2.0175,-22.4152 12.0312,-17.5625 1.4276,0.6911 5.5626,3.75 5.5626,3.75 L 1526,1012.0312 z m -310,1.9688 c -9.9181,0.3363 -19.3339,6.4258 -18.0625,14.5312 0.8469,3.4632 6.1325,-1.5351 11.3438,-4.8125 3.9909,-2.5105 8.7956,-2.9063 13.3437,-0.9375 4.0325,1.4368 5.7601,5.1516 8.0937,8.0312 1.9827,2.4253 4.149,4.4118 5.375,3.2188 1.0421,-1.2859 0.62,-2.8978 0.3438,-4.3438 -2.1379,-11.0496 -11.2782,-15.9634 -20.4375,-15.6874 z m 755.7187,3.8124 10.0313,5.125 c 13.5012,178.9152 103.9719,284.0987 199.0313,346.75 l -7.5626,4.5626 c -116.6561,-74.7353 -197.6484,-208.6341 -201.5,-356.4376 z m 15.1876,7.3438 c 0,0 25.1873,12.8908 38.375,18.8438 l 0.5,16.1874 -8.8126,0.3126 -3,-15.2188 -18.3124,1.3125 5.7187,37.4375 29.5313,-3.625 4.125,22.625 -10,2.0938 -5.125,-13.9063 -16.9376,4.125 10.9688,36.375 26.625,-8.5937 8.3438,23.7812 -8.9376,3.25 -5.7187,-13.9375 -17.5313,6.125 13.5626,35.5 27.7187,-8.9063 11.1875,22.2188 -8.4062,3.7188 -8.0313,-13.7813 -16.625,8.5 19.5,33.1563 25.0313,-13.125 11.6874,17.7187 -9.1874,6.1563 -8.3438,-10.8438 -13.4688,8.875 21.5626,29.4375 21.5624,-16.1563 16.125,18.5938 -7.125,6.3125 -11,-11.1563 -13.0312,11.625 25.6875,28.1876 22.3125,-19.375 15.8438,14.75 -4.6876,4.9374 -10.6562,-6.6562 -14.125,15 26.9688,23.4688 21.4062,-23.4688 18.1562,13.375 0,9.875 -16.2187,-8.2188 -10.875,16.375 27.0937,20.5 -0.1874,8.0626 c -154.6683,-92.2752 -195.3666,-235.3928 -203.25,-341.8438 z m -316.6563,1.7812 c 6.6866,-0.2013 13.7439,6.0855 25.4063,19.5938 32.5929,37.756 23.8914,96.1643 -18.7188,126.625 -6.2088,4.4384 -8.7029,4.0441 -16.2812,-2.4688 -43.7064,-37.5517 -46.2283,-87.7678 -7.3126,-131.875 6.7268,-7.6221 11.7056,-11.7169 16.9063,-11.875 z m 156.2187,5.1876 c 8.0383,12.3206 18.1839,24.9981 19.3438,39.9687 -0.5769,14.796 -10.5514,17.5219 -20.875,8.9063 -1.3075,7.7703 3.125,22.9062 3.125,22.9062 l -18.6875,-2 c 0,0 7.3301,-12.8047 7.625,-20.8125 -12.9744,9.0374 -22.8868,-2.7477 -21.125,-12.25 3.7103,-16.1639 16.9953,-27.0656 30.5937,-36.7187 z M 1688.5,1039.875 c -1.5315,0.1222 -3.1245,1.1697 -5.5625,3.125 -11.3839,9.1302 -20.3266,20.4882 -24.9687,32.2812 -9.7989,24.8911 -3.404,52.9489 18.6874,74.7188 11.2233,11.0585 15.172,10.301 32.375,-12.5625 14.4108,-19.1506 17.406,-43.8871 8.5313,-65.375 -4.3303,-10.4849 -12.1801,-20.7073 -21.5937,-28.125 -3.6172,-2.8491 -5.4997,-4.2197 -7.4688,-4.0625 z m 359.5,4.5938 14.5,7.125 c 18.4973,122.012 78.4628,196.4521 145.6562,247.7812 l -0.125,11.3125 -18.0312,-13.9687 -21.5938,22.5937 -17.5,-14.3437 6.5626,-6.375 9.9687,6.3437 12.75,-14.2813 -25.0937,-22.375 -21.875,18.9688 -18.2188,-18.75 5.5312,-4.625 12.5938,11 14.0938,-12.5 -24.375,-27.3438 -21.8126,16.5313 -15.2187,-20.1875 6.625,-3.9375 7.9687,10.9375 16.8126,-10.4688 -17.7813,-27.3437 -25.3437,13 -12.9688,-23.375 7.375,-3.5313 8.4062,13.125 15.7813,-7.5937 -15.875,-32.25 -25.9063,8.5625 -9.5312,-25.375 7.4062,-2.7188 6.5313,15 17.5313,-5.625 -11.9063,-34.7187 -26.7813,7.5625 -6.625,-25.5312 8.2813,-1.7813 4.3437,13.7813 18.4063,-3.6876 -6.75,-33.0624 -27.4063,3.4687 c -0.9096,-5.6172 -4.9525,-20.7494 -4.875,-26.4687 l 8.4376,-0.6876 2.6562,14.5626 18.4375,-0.625 z m -358.5312,2.6562 c 10.0486,1.3779 22.3194,20.7231 25.0937,27.75 5.2934,13.8929 5.7389,29.9914 0.9063,42.4688 -3.9543,10.2046 -15.7755,28.304 -23.2813,33.4062 -6.0586,3.2803 -11.1307,0.8483 -19.7813,-10.9062 -17.0934,-23.2324 -20.3994,-51.1718 -6.9062,-70.3126 10.3054,-14.6177 17.9482,-22.4192 23.9688,-22.4062 z m 377.9687,6.0312 7.2813,3.4376 c 8.942,70.7026 50.8428,167.7349 133.3124,225.7812 l 0,8.875 c -64.1373,-46.0334 -123.0164,-125.4257 -140.5937,-238.0938 z m -379.249,4.8143 c -28.7205,21.6476 -24.1252,55.538 -2.3708,78.3696 23.4361,-15.5101 31.7247,-57.3997 2.3708,-78.3696 z m -438.2823,1.4357 c 16.2009,-0.3745 26.4723,5.2707 31.4063,16.5 7.6633,17.4424 8.7063,20.7544 10.2813,29.9063 0.8992,5.2307 2.2893,13.1249 3.0624,17.5313 8.4113,47.4005 2.2213,65.262 -26.5624,72.6562 -8.5882,2.2059 -20.5677,2.9201 -28.9376,0.9062 -2.1971,-0.5283 -10.2387,-0.5766 -16.5624,-0.7812 -12.5497,-0.4061 -16.3865,-1.7338 -22.6876,-6.8438 -2.2717,-1.8426 -4.4572,-3.3165 -7.1874,-3.75 -14.3606,-2.2748 -18.6489,-15.4299 -7.75,-25.1562 6.2068,-5.5398 6.8252,-6.2732 6.25,-7.2188 -0.3257,-0.5319 -2.9748,-0.9815 -5.9063,-1 -14.4764,-0.091 -14.3286,-14.9831 0.25,-25.625 6.9293,-5.0575 10.0514,-9.8236 5.4687,-8.6562 -13.2011,3.1138 -17.8587,-16.1806 -4.0607,-22.1651 7.3461,-4.1079 12.6203,-7.5438 5.5295,-7.9287 -5.9503,0.515 -10.7949,-3.8762 -8.9741,-9.0552 2.2057,-6.2736 14.2876,-11.9864 21.2553,-9.851 5.4447,1.6681 10.753,3.196 14.1563,0.75 8.2583,-5.9354 11.954,-8.6108 19.0625,-9.5625 4.1215,-0.5518 8.4402,-0.6704 11.9062,-0.6563 z m 481.4688,3.625 66.5625,1.2813 -1.9687,65.2813 -62.6876,-1.1876 c 0,0 13.7432,-29.1642 -1.9062,-65.375 z m -149.1562,1.5 63.75,0.7813 c -10.5032,24.6021 -6.5824,49.8825 -2.7188,64.125 l -62.4062,-0.9687 z m 106.4687,0.095 c 17.1276,9.9797 21.8417,46.3231 -1.9525,65.0052 -22.6468,-23.2729 -18.1103,-51.6064 1.9525,-65.0052 z M 1531.4062,1093 l 17.0938,1.5938 -6.0938,24.4687 c 0,0 2.7529,-2.9041 3.6563,-3.1875 21.9583,-10.312 23.5348,13.0559 1.1875,34.1562 -4.9405,4.6508 -12.875,11.0313 -12.875,11.0313 0,0 -6.2177,-9.4047 -11.1562,-17.9063 -5.6137,-8.5493 -9.4292,-17.7044 -8.4688,-22.5624 1.3937,-7.0524 9.8753,-11.7138 15.2812,-7.4063 2.6632,2.1209 5.75,5.3437 5.75,5.3437 z m 305.1876,17.9375 c 0,0 7.1697,7.3538 11.5312,12.125 15.0929,16.5107 17.685,31.96 10.0312,36.6563 -6.5714,3.0078 -10.6476,0.9458 -15.9374,-3.3438 1.0981,10.2351 9.2276,25.3432 9.0312,25.375 l -22.5312,3.625 c 0,0 5.5613,-20.5048 5.0937,-28.25 0,0 -4.6281,3.5571 -6.6875,4.4375 -14.7087,5.3709 -21.9999,-11.3409 -9.9062,-28 10.1451,-13.9763 19.375,-22.625 19.375,-22.625 z m 307.7812,30.9375 c 15.1188,0 27.375,12.2562 27.375,27.375 0,15.1188 -12.2562,27.375 -27.375,27.375 -15.1188,0 -27.375,-12.2562 -27.375,-27.375 0,-15.1188 12.2562,-27.375 27.375,-27.375 z m 13.5,12.5312 c -1.1804,0.2661 -2.1451,2.9815 -2.2812,8.9688 -1.3631,12.2807 -11.5789,17.2232 -22.75,11.5312 -4.5159,-2.2995 -8.3604,-5.7099 -8.375,-3.0937 -0.01,1.401 3.6154,8.7209 6.1874,11.2187 9.4682,8.5143 32.5266,6.4958 32,-13.3437 -0.2472,-9.3385 -2.8138,-15.7223 -4.7812,-15.2813 z m -497.0312,10.2813 c 2.9724,-0.2016 6.7412,1.0295 9.1562,3.5313 7.4841,5.1121 8.9027,11.6412 9.375,36.2812 0.4168,21.7353 -0.028,22.2661 3.5625,24.9062 8.7802,6.4573 14.0728,-3.385 11.5625,-25.4062 -2.4168,-21.2015 5.2215,-36.6117 18.0312,-36.5312 6.3031,0.039 7.4747,3.7413 2.6876,8.4687 -5.052,4.9875 -6.2719,11.082 -4.6876,23.3437 4.0612,31.4191 0.5506,46.8414 -12.6562,53.2188 -13.7741,6.6514 -31.489,-0.9887 -34.5938,-18.375 -1.9903,-11.5988 -1.9726,-25.3503 -0.5937,-38.3125 0.247,-13.6285 -0.063,-15.1847 -4.8125,-23 -3.3599,-5.2455 -0.8539,-7.8658 2.9688,-8.125 z m -346.375,10.1875 c 7.6145,-0.017 15.5227,4.3978 20.25,14.1562 11.405,23.5489 -13.3032,42.9195 -35.9688,44.4376 -39.3446,0.5861 -86.1045,-5.0879 -125.5938,-10.3438 l 0.625,-22.25 c 36.24,2.0941 77.1024,5.0359 121.125,7.0938 -5.0136,-20.6883 6.8706,-33.066 19.5626,-33.0938 z m 206.9374,4.5625 21.9063,4.8437 -13.9375,22.7813 c 4.1348,-1.7906 6.9924,-3.0393 11.125,-1.5313 8.9235,3.2196 9.0442,14.527 2.5,25.0938 -5.1732,7.6732 -19.7291,16.8396 -29.6562,22.4688 -5.5788,-11.9772 -17.9038,-32.9488 -13,-44.4063 2.6028,-6.0833 9.8149,-9.0422 16.5312,-5.7187 2.2223,1.33 6.4688,3.5 6.4688,3.5 z m 51.7813,0.625 66.75,0.7813 c -9.7024,67.4877 -28.6854,157.6052 -66.0937,231.0624 l -15.7188,4.0626 c 32.9894,-72.9901 54.9329,-141.4449 65.1875,-217.9688 l -33.375,0 c -19.1994,82.1328 -47.6027,158.247 -91.2813,224.375 l -19.4062,-6.3125 c 46.6677,-73.99 83.6517,-156.5651 93.9375,-236 z m 152.25,1.1875 74.4063,0 c 13.6867,137.4142 60.1145,231.1992 129.2187,323.9688 0,0 -4.3628,0.9773 -6.9375,-0.125 -7.165,-8.9406 -13.7298,-14.4077 -24.4688,-17.1563 -58.0763,-83.615 -97.0434,-200.5135 -106.4374,-289.9375 l -44.25,0 c 5.0371,112.316 36.1541,204.406 77.5624,293.5938 l -22.4687,4.125 c -33.2542,-79.8179 -69.7097,-149.2777 -76.625,-314.4688 z m 115.7813,16.9688 c 6.122,4.7359 12.7379,9.3902 18.9687,13.9062 16.754,11.7552 16.534,33.9772 0.25,33.875 -1.7289,-0.011 -5.75,-0.25 -5.75,-0.25 0,0 6.6522,14.5673 10.8437,21.9375 -6.7865,1.8099 -20.9687,4.4687 -20.9687,4.4687 0,0 2.0296,-14.304 1.625,-26.1562 0,0 -2.7209,3.0377 -4.9687,4.0938 -10.8065,4.5142 -19.9434,-4.9143 -18.5938,-16.0626 1.8214,-15.0436 18.5938,-35.8124 18.5938,-35.8124 z m -497.0938,2.6874 36.625,18.1876 c -24.9591,56.8117 -53.5386,110.003 -94.875,150.4374 l 1.0625,-131.2812 c 22.5643,-0.6562 45.7108,-0.8609 57.1875,-37.3438 z m 250.4375,2.0626 22.5313,0 c -9.9978,104.8097 -79.2491,246.5925 -92.25,263.6874 l -4.2813,3.2188 c 0.2583,-0.1395 -8.8685,-32.1402 -19.25,-43.6562 39.07,-52.6986 80.0052,-153.9626 93.25,-223.25 z m 158.4375,0 34.0312,0 c 10.6014,83.5147 36.4178,173.7348 101.8438,283.3124 0,0 -6.5577,0.6591 -11.625,-2.375 -11.1502,-6.9121 -18.8978,2.2409 -25.5593,1.8823 -10.4175,-0.5608 -12.1319,-1.1815 -22.8782,1.3677 -53.9894,-113.874 -69.3088,-203.5064 -75.8125,-284.1874 z m -367.5938,18.75 12.1563,5.7187 c -26.1381,60.4557 -49.5496,108.4947 -111.4687,167.4687 l -0.2188,-17.5624 c 43.4993,-42.1281 72.8093,-97.6528 99.5312,-155.625 z m 17.6876,8.4374 c 5.7548,2.1661 12.2865,5.7264 17.7187,8.6563 1.8184,0.7275 1.3285,2.3563 1.3437,4.0625 -2.2991,5.7421 -12.4431,8.2606 -16.2812,9.375 -4.6338,1.3196 -9.2051,2.2436 -10.0312,2.4375 -5.2979,1.2428 -3.621,-4.0649 2.125,-15.6875 2.5869,-5.2341 3.6063,-8.7266 5.125,-8.8438 z m 24.2812,12.8126 c 3.6394,-0.224 18.3317,7.8947 21.4688,10.8124 1.1141,3.4437 -2.0474,8.872 -6.6876,18.9063 -7.1328,15.4293 -8.5526,15.7718 -10.6874,3.0937 -0.3692,-2.1832 -2.4956,-9.3966 -3.7813,-14.1874 -2.9814,-11.1107 -3.2626,-17.5014 -0.3125,-18.625 z m 26.5938,12.4687 c 0,0 8.5372,4.1491 11.3124,5.9687 -38.1283,114.1925 -139.6686,208.5808 -139.125,206.4063 l -15.8437,-9.3125 c 67.5738,-61.0549 117.0992,-133.1534 143.6563,-203.0625 z m -40.3126,1.625 c 3.6885,0.076 0.4766,4.6129 -4.5,15.5937 -4.7209,10.7537 -6.2698,14.5693 -10.6874,16.2813 -6.333,2.2927 -15.4275,2.3649 -23.5,3.7813 -3.4541,0.5979 -2.0057,-2.0412 3.3124,-12.8438 6.2411,-12.6746 6.5895,-15.306 16.375,-17.9375 5.6561,-0.8823 13.2691,-4.9207 19,-4.875 z m 13.375,22.6875 c 3.9311,14.1417 3.8481,16.9316 1.2188,21.8438 -4.9322,9.2115 -11.3797,19.9617 -13.1562,22.875 -4.4428,7.2792 -5.7061,5.7643 -8.3438,-11.9376 -1.6364,-10.9809 -3.0701,-15.9166 -1.8576,-20.6963 2.217,-5.4072 8.828,-18.1585 12.5664,-25.6184 5.3517,-15.9126 8.2188,12.1252 9.5724,13.5335 z m 70.1876,-12.3438 20,6.5626 -15.6876,18.9374 c 0,0 6.5809,-1.1847 7.3438,-0.875 15.7382,1.0452 13.1249,16.6889 0.9375,26.1563 -5.047,4.6235 -29.9375,15.9375 -29.9375,15.9375 -2.666,-13.9991 -8.158,-22.9428 -6.8438,-37.3125 0.9236,-7.7377 1.6133,-14.7189 11.0938,-14.9375 4.9871,-0.2669 7.0084,4.8349 10.25,8.9375 z m 362.5624,16.9688 c 0,0 12.0483,6.2161 23.2188,14.8125 14.5682,11.2111 17.0607,24.3886 2.5,29.4687 -1.6829,0.5886 -6.4688,0.3438 -6.4688,0.3438 4.0104,6.981 13.5313,17.375 13.5313,17.375 -4.7712,3.3385 -11.5038,5.9529 -18.9687,8.2812 0,0 -1.8504,-17.3827 -3.625,-24.0937 0,0 -1.9263,3.796 -4.3126,5.2813 -14.0288,8.7288 -25.0388,-7.7217 -17.5,-28.5313 4.579,-12.6356 11.625,-22.9375 11.625,-22.9375 z m -154.2187,2.9062 c 35.029,-0.8521 14.5094,56.5147 -3,52.8126 -0.2976,-0.5208 14.4572,-33.9338 -5.4063,-39.25 -9.113,-2.4394 -1.2576,-13.6781 8.4063,-13.5626 z m -57.4375,4.0626 c 10.884,-0.066 18.8028,7.6086 8.4062,12.4374 -16.3631,7.6015 -6.6207,25.8083 -6.25,36.125 0.2274,6.3088 -14.5743,-5.5001 -17.7187,-18.3124 -4.0653,-16.5658 -2.1843,-28.8312 15.5625,-30.25 z m -259.0938,6.0312 c 2.4154,-0.01 4.2313,0.1837 4.8438,0.6562 1.0231,2.7053 -3.8664,11.1657 -11,22 -3.7957,5.7663 -5.4248,7.3861 -7.75,8.75 -5.5174,3.1013 -13.2638,2.2951 -19.7188,2.75 -9.6251,0.1218 -7.9327,-0.07 2.7188,-16.6562 4.7586,-7.41 7.7635,-13.4714 10.5938,-15.4062 0.568,-0.3635 13.0705,-2.0712 20.3124,-2.0938 z m 12.625,11.9688 c 0,20.7477 7.0497,27.5476 1.875,34.0937 -6.3279,10.1937 -14.4086,21.3482 -17.3437,24.875 -4.9441,5.941 -4.3931,4.818 -5.6875,-10.7187 -0.9385,-11.2661 -1.9635,-18.7969 -0.5,-22.3126 4.2325,-10.1676 9.2632,-15.0334 14.5,-25.8437 4.1049,-8.7118 7.1562,-7.2573 7.1562,-0.094 z m 276.5,10.4062 c 10.1761,0.1384 16.458,10.9507 16,20.875 l -0.4374,9.5 c 13.1459,-5.0415 29.4645,-0.1406 30.1874,12.75 1.2265,21.8599 -14.8782,19.3257 -28.5,18.4062 1.3744,0.5158 3.3824,19.7625 -4.7187,27.125 -12.7155,14.2326 -36.426,-0.31 -30.4687,-21.1874 1.2374,-4.3374 1.5,-7.0626 1.5,-7.0626 0,0 -8.5041,3.0656 -11.5,2.9376 -25.7936,-1.1031 -23.8186,-37.5711 2.0937,-33.2813 5.2935,0.8763 8.875,2.1563 8.875,2.1563 0,0 -0.5628,-2.3037 -1.4375,-5.5626 -3.7686,-14.0374 4.1472,-26.8501 18.4062,-26.6562 z m 515.9688,6.5 13.9062,8 0,15.5 -19.7812,-14.625 z m -833.5938,10.375 c 5.4806,-0.053 9.7859,0.3752 8.9376,1.6875 -0.017,2.7658 -12.0015,19.4444 -19.0938,27.0625 -6.0457,6.494 -6.9015,5.5686 -21.6875,4.8438 -5.8011,-0.2858 -9.5928,-0.3294 -9.4375,-1.875 6.8133,-8.9317 16.1989,-20.4298 22.6875,-30.0313 2.5491,-0.7782 11.5492,-1.6187 18.5937,-1.6875 z m 13.5313,7.2812 c 1.0231,-0.015 1.3368,2.2036 1.3125,7.0313 -0.018,3.6452 0.5019,14.9205 1.0312,19.8125 0.9639,8.8945 0.9662,8.8819 -2.8437,14.1875 -4.6456,4.9884 -9.385,12.3418 -15.375,18.0625 -8.9974,9.9679 -8.0714,10.5363 -7.9375,-10.7812 0.1045,-16.6544 -1.1493,-16.6522 2.2188,-20.5626 1.8516,-2.1499 7.5731,-9.1471 11.3437,-14.625 5.7248,-8.3146 8.7547,-13.1014 10.25,-13.125 z m 85.75,2.9376 18.5,9.875 -18.5313,18.7812 c 0,0 4.6345,-0.02 6.1876,0.2812 11.9045,2.312 11.0125,14.9264 -0.9688,24.3438 -7.3571,4.6469 -32.625,13.8438 -32.625,13.8438 -0.867,-10.6098 -3.1115,-20.3672 -2.6875,-31.75 0.1793,-5.2512 0.6593,-10.9602 4.6875,-15.5 2.7849,-3.081 7.4403,-4.8744 13.9688,-0.6563 3.4286,3.0488 5.2187,6.5 5.2187,6.5 z m 218.3125,6.4062 c -7.2487,0 -13.125,5.8763 -13.125,13.125 0,7.2487 5.8763,13.125 13.125,13.125 7.2487,0 13.125,-5.8763 13.125,-13.125 0,-7.2487 -5.8763,-13.125 -13.125,-13.125 z m 206.8125,3.0938 c 0,0 24.219,9.0986 35.125,19.0937 10.187,8.4957 5.3947,22.4924 -4.7187,22.7813 -0.7349,0 -5.0313,-0.625 -5.0313,-0.625 3.4274,5.211 14.9063,18 14.9063,18 l -18.7188,7.5937 c 0,0 -2.9963,-14.4089 -5.3125,-22.5 -6.5238,15.0642 -22.6214,5.2643 -23.6875,-4.125 -2.5964,-13.7587 3.2533,-27.1978 7.4375,-40.2187 z M 1678.125,1357.5 c 5.0396,0 9.125,4.0854 9.125,9.125 0,5.0396 -4.0854,9.125 -9.125,9.125 -5.0396,0 -9.125,-4.0854 -9.125,-9.125 0,-5.0396 4.0854,-9.125 9.125,-9.125 z m -357.375,18.6562 c 6.5254,-0.061 14.6657,0.2412 18.3125,0.4688 2.7773,2.1309 -3.0302,8.7537 -14.25,20.5312 -8.9966,9.4452 -10.323,8.1322 -21.2187,8.2188 -18.2822,0.1454 -18.7383,0.2672 -10.3438,-9.2812 9.1952,-10.4607 14.5604,-17.196 18.8125,-19.375 1.4281,-0.3713 4.7723,-0.5246 8.6875,-0.5626 z m 22.2812,9.1876 c 1.9342,-0.386 1.4074,4.5489 1.0938,15.7187 l -0.5312,18.9375 -14.2188,13.6875 c -16.4585,14.7273 -14.4919,15.6487 -14.375,1.875 0.093,-10.9474 -0.024,-18.6417 2.3438,-23.5 7.186,-8.6604 14.6715,-16.3269 22.8437,-24.5937 1.2883,-1.2731 2.1995,-1.9969 2.8437,-2.125 z m 361.4688,4.7187 c 3.9591,-0.3299 14.0632,16.9542 16.5938,31.4375 5.777,33.0746 25.5881,48.7504 39.5312,35.4688 5.6705,-7.8071 6.3074,0.7126 6.0312,4.7812 -2.9256,41.9 -50.4077,24.4594 -55.8124,-17.1562 -16.6652,10.8152 -32.2138,-11.0316 -22.2813,-10.6876 23.4904,-7.4662 17.0696,-29.0335 15.9375,-43.8437 z m -55,0.3125 c 2.3254,14.4942 -23.8032,39.3165 -38.5,21.9062 -7.4777,-8.8579 -0.6636,-27.1254 8.8438,-15.875 10.5096,7.7772 20.6981,-1.2458 29.6562,-6.0312 z m -359,19.875 c 5.3722,-0.115 13.1414,0.9028 16.5312,0.4375 4.7948,0.4844 1.3679,2.795 -9,12.25 -8.9294,8.1444 -11.479,11.7693 -12.5,8.2187 -0.4968,-5.505 -0.281,-12.0499 -0.25,-19.8124 0.8215,-0.7642 2.7769,-1.0415 5.2188,-1.0938 z m 121.8125,9.625 15.9375,11.625 -15.8125,14.5625 c 14.179,-0.7008 15.4425,12.5927 10.0625,20 -3.4849,5.1946 -16.9296,10.6651 -30.375,12.8437 -8.092,1.3126 -14.6875,2.2813 -14.6875,2.2813 0,0 -0.3041,-6.2352 -0.5313,-16.5937 -0.4618,-21.1863 0.9804,-29.526 9.125,-33.6563 5.8308,-2.9562 15.7011,1.684 18.125,7.0937 0.8017,1.7875 2.9063,4.9063 2.9063,4.9063 z m -102.5625,1.1562 c 0.063,-0.013 0.104,9e-4 0.125,0.031 0.9,1.2135 -2.3438,35.6875 -2.3438,35.6875 l -23.0937,-13 c 0,0 23.3729,-22.3087 25.3125,-22.7188 z m 611.1875,4.0626 c 16.4492,7.7486 28.7766,6.2421 39.8437,15.8437 9.636,5.0434 6.7792,18.9315 -0.25,22.0313 -3.1829,0.9704 -8.4374,0.4374 -8.4374,0.4374 5.8176,7.1811 18.5624,16.25 18.5624,16.25 l -20.25,8.4688 c 0,0 -2.7683,-13.655 -5.3437,-21.0938 -3.6846,11.0678 -16.1684,10.7974 -23.2813,5.5938 -5.0384,-3.8586 -7.1206,-16.7904 -4.7187,-28 0.6339,-2.9587 3.875,-19.5312 3.875,-19.5312 z m 74,112.3437 c 20.8969,29.4014 32.5345,54.1299 35.7813,91.0313 1.9204,22.7526 1.2647,27.0025 -4.125,26.9687 -3.4673,-0.022 -4.9591,-1.735 -4.9376,-5.625 0.3654,-61.7839 -75.7373,-76.31 -104.0624,-22.9375 -16.6065,31.2886 -8.4174,72.7625 27.2812,129.25 32.8416,53.4874 75.1408,94.1434 99.2188,151.6875 23.8579,-57.1426 71.7262,-105.2287 105.9374,-160.3125 49.4163,-70.8253 32.2806,-145.4913 -28.6874,-153.3438 -27.9777,-3.6026 -58.6352,24.432 -62.1876,53.4376 -0.7919,6.4677 -2.1638,8.3725 -5.7187,7.8437 -4.7557,-0.7074 -2.9767,-13.4843 -0.9063,-30.5313 5.644,-32.5899 17.1551,-59.7738 35.8126,-87.4687 z m 295.2187,81.6563 c 0.5498,-0.1386 15.5054,20.7018 17.625,28.5 1.7299,6.3573 3.0608,12.9295 1.9688,15.6874 -1.3132,3.3178 -4.4331,0.7799 -8.3125,-4.375 -10.6651,-14.1685 -31.6362,-9.6412 -40.1875,8.7813 -6.1627,13.2765 -2.7357,30.3779 8.7188,49.7813 13.6945,25.3098 47.1814,70.8232 48.1874,74.9687 0.8964,-3.5667 22.2272,-42.2198 39.4063,-67.8437 9.0612,-15.4669 15.8355,-28.5615 16.25,-49 -2.0897,-25.4475 -32.5368,-35.9345 -46.125,-16.1876 -4.3946,6.3877 -7.0107,8.3334 -8.4687,3.125 -0.9856,-3.5144 2.0957,-11.1051 3.7187,-19.2187 1.3554,-6.7761 14.5254,-24.3793 14.8437,-24.2187 z M 1812.7812,1746 c -199.6821,47.3189 -361.877,18.0585 -377.9687,12.4688 l -12.7187,18.9687 c -1.5511,3.2252 -2.5021,12.8559 -11.125,15.4687 l -12.9376,19.3126 2.5313,2.6874 -11.4687,10 2.7812,3.3438 -8.3438,12.125 -3.2812,-0.3438 -19.3125,29.3438 2.9375,3.2812 -44.3438,69.4063 599.9063,0.1875 c -34.8691,-65.7744 -72.1761,-130.2705 -106.6563,-196.25 z m -3.625,8.5312 3.5626,9.9063 c -9.9205,-1.2205 -21.5045,-1.8194 -33.2813,-2.3437 10.35,-2.1363 20.7171,-4.7521 29.7187,-7.5626 z m -34.8437,8.625 c -19.0822,8.7552 -30.5125,19.2762 -39.2813,30.375 -10.9159,-8.478 -24.8022,-14.4852 -41.375,-18.25 z m -337.125,4.8126 8.5,0.9687 c 0,0 -2.8482,2.2105 -4.875,1.75 -1.5537,-0.353 -3.625,-2.7187 -3.625,-2.7187 z m 382.1563,4.9377 5.4062,10.6876 c -12.9944,-6.8882 -68.574,-22.6571 -84.3438,32.5937 -16.594,-22.433 -85.0179,-54.954 -119.7187,14.1875 -9.8693,-18.731 -67.3189,-72.6258 -119.7187,-3.9375 -20.6481,-42.6894 -37.9054,-46.267 -75.8126,-40.4375 26.9397,-25.8888 64.8462,1.059 80.9063,23.0938 45.2086,-37.4928 83.0094,-26.2247 116.0313,4.2812 42.6122,-46.3974 85.1075,-35.2188 115,-11.9375 21.0007,-30.8984 41.515,-40.2172 82.25,-28.5313 z m -349.0313,0.2813 c 26.8646,3.6257 53.7291,5.2726 80.5937,6.5937 -15.5486,5.7053 -31.4921,10.6198 -44.1562,22.0938 -9.5914,-13.3941 -22.9253,-21.1746 -36.4375,-28.6875 z m 193.8125,4.2813 c -14.6621,6.905 -30.4623,17.2836 -43.125,28.1874 -13.6698,-11.1319 -27.7367,-20.7545 -43.0625,-25.5937 28.1154,1.3819 59.266,0.1434 86.1875,-2.5937 z m 654.0312,15.0312 c -0.023,0.1062 -0.02,0.157 0,0.1875 0.03,-0.037 0.016,-0.093 0,-0.1875 z m -482.0312,6.9057 c 0,0 -5.4177,0.913 -7.1562,1.375 -23.722,6.304 -18.5565,39.7215 5.8437,39.7188 2.3193,-3e-4 8.0937,-0.9062 8.0937,-0.9062 -0.4612,22.6281 6.413,28.1491 29.5313,26.875 l 39.1875,70.0624 -579.6875,-2.5 36.8125,-58.875 c 18.5129,2.1706 30.1542,-8.1274 26.0312,-23.8437 0,0 11.4023,3.4799 14.5938,3.5 20.9559,0.1319 26.3728,-32.0253 6.2812,-37.5937 -2.2345,-0.6196 -7.845,-1.2381 -8.5312,-1.4376 9.1877,-22.9488 34.427,-9.4029 41.6562,0.125 16.2723,-13.3777 34.2587,-7.3894 41.9688,9.9376 0,0 -3.0343,-1.6926 -3.9688,-2.375 -19.0574,-13.9397 -36.7851,14.9343 -18.125,28.25 1.8361,1.3102 5.7188,2.4374 5.7188,2.4374 0,0 -2.2681,1.8527 -4.3438,5.3438 -9.6872,16.2928 5.9111,36.1371 24.75,31.0312 14.461,-5.6615 14.6692,-16.5356 14.6563,-28.5 0,0 4.9961,0.3843 9.4687,0.4376 17.354,0.207 22.3268,-22.0191 11.706,-32.3532 -5.7377,-5.5828 -13.2424,-5.1468 -16.956,-5.8656 20.0063,-19.6429 33.5692,-6.0863 47.6876,2.9688 2.1355,-0.051 24.5019,-26.912 51.0937,-0.5313 -12.9054,-3.3802 -26.1219,4.9882 -26.2993,18.4245 0.2556,8.6449 6.4373,16.2875 19.8064,16.898 -1.4392,4.3394 -2.398,7.5822 -2.4758,11.8025 -0.26,14.1083 10.7023,22.8845 24.625,20.7187 11.6345,-1.4863 20.2367,-14.7876 16.0937,-25.8437 -1.8696,-4.9891 -4.4375,-6.8125 -4.4375,-6.8125 31.3334,3.9206 30.7854,-35.7674 6.4258,-38.1745 -5.7761,-0.5708 -10.2263,1.934 -16.0508,7.2683 14.3284,-29.2956 40.5309,-23.419 50.3438,-11.4376 13.4604,-9.7788 32.0185,-23.133 54.2187,0.6563 -3.6582,-0.7721 -8.8126,-0.9528 -13.283,0.2337 -17.5733,4.664 -17.6508,27.0109 -3.7177,33.8108 3.9192,1.9128 8.7291,3.0245 13.907,2.8305 -4.6354,18.7788 16.2161,32.1926 30.9739,23.1997 10.5746,-6.4438 13.3431,-21.6594 1.9011,-35.5434 19.2588,-0.8622 21.157,-24.8643 10.0312,-33.2813 -8.7228,-6.5991 -18.9924,-3.4632 -26.4375,5.25 -2.3944,-6.891 16.6428,-30.8514 43.5313,-13.5937 14.2424,-11.94 28.3703,-15.6136 44.5312,-3.6876 z m 8.4062,18.75 7.5313,13.6876 c -5.017,0.4975 -12.1923,-4.873 -7.5313,-13.6876 z m -97.1874,13.9063 c 4.7116,0 8.5312,3.8196 8.5312,8.5313 0,4.7116 -3.8196,8.5312 -8.5312,8.5312 -4.7117,0 -8.5313,-3.8196 -8.5313,-8.5312 0,-4.7117 3.8196,-8.5313 8.5313,-8.5313 z m -351.8438,0.5 c 1.1367,4.5792 1.635,9.1479 -6.6875,10.0313 z m 852.2188,3.9687 0,19.0938 15.625,0 44.125,101.625 -42.3438,65.9688 -17.4062,0 0,16.9687 60.625,0 0,-16.9687 -17.7188,0 53.875,-82.25 0,82.25 -15.4688,0 0,16.9687 54.8126,0 0,-16.9687 -20,0 0,-167.5938 20,0 0,-19.0938 -54.8126,0 0,19.0938 15.4688,0 c 0.3764,16.4378 0.4718,30.5884 0,47.0312 -7.7022,10.2771 -15.6927,22.8249 -24.1562,32.5 l -34.0626,-79.5312 22.0626,0 0,-19.0938 z m -754.2188,4.2813 c 4.3147,0 7.8125,3.4978 7.8125,7.8125 0,4.3147 -3.4978,7.8125 -7.8125,7.8125 -4.3147,0 -7.8125,-3.4978 -7.8125,-7.8125 0,-4.3147 3.4978,-7.8125 7.8125,-7.8125 z m 130.0312,2.4375 c 4.5738,0 8.2813,3.7076 8.2813,8.2812 0,4.5738 -3.7075,8.2813 -8.2813,8.2813 -4.5736,0 -8.2812,-3.7075 -8.2812,-8.2813 0,-4.5736 3.7076,-8.2812 8.2812,-8.2812 z\"\r\n             transform=\"matrix(0.99993837,-0.01110177,0.01110177,0.99993837,-1082.7614,-427.97254)\"\r\n             id=\"path4092\"\r\n             inkscape:connector-curvature=\"0\"\r\n             sodipodi:nodetypes=\"cccccccccccccccccccccccccccccccscccccccscccccccscsccccscsccsscccccccccssccccccccscsccccscccccccscsssscscsscsssccccccccccccccccccccccccccccccccsccccccccscsccsccsccccccccccccsccccscccsccccccccccscccccccccccccccccccccscsssccsscccccsccccccccccsccscccsccccsccccccscccccsccscccccccccccccccccccccccccccccscccccccccccccccccccscccccccccccccscscssssccsscccccccssccssccccccscccccscccccsccccccsscsssscssccccccccsccsccccccccscscsccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccsccccccccccccccssccsccccscccccccssccccsssssccccscccccccccccccccccccccccccccccccccccccccccccccccssssccscccsccscsscccsccccccccccccscsccscccscccscsccccscsccscccccccccccsccccccssscccccssssccssccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccccsccscccscccccccccccccccccccccccccccccccccccccccccccccccccccsccccccccccccccccccccccccccccscssccccccccccccccccccccccccccsccccccccssssscccccccccscscccscccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccsccccccccccccccccccccccccccccccccccccccccccccsccccccccccccccccccscccsccccccscscscscssccsccscccccccscccscccccsccccccccccccccssssscccccccccssssscccscccccccsccccccccccccccccccccccccccccccccccccccccccccccccccccccccscccccccsccccccsccccccccccscccccccccccccsccscccccccccccccccccccccccccccccccscccccscscccsscccccscccccscscscccsscscsccccccccccccscssccccccccccccccccccccssssssssssssssssss\" />\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </g>\r\n  <g\r\n     inkscape:groupmode=\"layer\"\r\n     inkscape:label=\"Printing Marks\"\r\n     id=\"printing-marks\"\r\n     transform=\"translate(-259.9347,-369.77722)\">\r\n    <g\r\n       id=\"CropMarks\"\r\n       inkscape:label=\"CropMarks\" />\r\n  </g>\r\n</svg>\r\n", "<svg\r\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n   xmlns:cc=\"http://creativecommons.org/ns#\"\r\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n   xmlns=\"http://www.w3.org/2000/svg\"\r\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n   \r\n   width=\"__width__\" \r\n                                                    height=\"__height__\" \r\n                                                    viewBox=\"0 0 224.21875 312.8125\"\r\n   id=\"svg4423\"\r\n   version=\"1.1\"\r\n   inkscape:version=\"0.48.4 r9939\"\r\n   sodipodi:docname=\"AS.svg\"\r\n   style=\"display:inline\">\r\n  <sodipodi:namedview\r\n     id=\"base\"\r\n     pagecolor=\"#ffffff\"\r\n     bordercolor=\"#666666\"\r\n     borderopacity=\"1.0\"\r\n     inkscape:pageopacity=\"0.0\"\r\n     inkscape:pageshadow=\"2\"\r\n     inkscape:zoom=\"0.9899495\"\r\n     inkscape:cx=\"-10.205681\"\r\n     inkscape:cy=\"127.45085\"\r\n     inkscape:document-units=\"px\"\r\n     inkscape:current-layer=\"layer1\"\r\n     showgrid=\"false\"\r\n     inkscape:snap-global=\"true\"\r\n     inkscape:snap-bbox=\"true\"\r\n     inkscape:snap-page=\"true\"\r\n     inkscape:window-width=\"735\"\r\n     inkscape:window-height=\"925\"\r\n     inkscape:window-x=\"524\"\r\n     inkscape:window-y=\"60\"\r\n     inkscape:window-maximized=\"0\" />\r\n  <defs\r\n     id=\"defs4425\" />\r\n  <metadata\r\n     id=\"metadata4428\">\r\n    <rdf:RDF>\r\n      <cc:Work\r\n         rdf:about=\"\">\r\n        <dc:format>image/svg+xml</dc:format>\r\n        <dc:type\r\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n        <dc:title />\r\n      </cc:Work>\r\n    </rdf:RDF>\r\n  </metadata>\r\n  <g\r\n     id=\"layer1\"\r\n     inkscape:groupmode=\"layer\"\r\n     inkscape:label=\"Layer 1\"\r\n     style=\"display:inline\"\r\n     transform=\"translate(-259.9347,-369.77721)\">\r\n    <g\r\n       transform=\"translate(-712.31835,92.135109)\"\r\n       id=\"g3500\"\r\n       style=\"display:inline\">\r\n      <g\r\n         id=\"g3241\">\r\n        <g\r\n           transform=\"translate(-0.99666558,0)\"\r\n           id=\"g8016\">\r\n          <g\r\n             style=\"display:inline\"\r\n             id=\"g8869-3\"\r\n             transform=\"translate(-5060.9526,3024.9515)\">\r\n            <rect\r\n               ry=\"10.629921\"\r\n               rx=\"10.629921\"\r\n               style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.99673343;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline\"\r\n               id=\"rect3232-1\"\r\n               width=\"223.22835\"\r\n               height=\"311.81104\"\r\n               x=\"6034.7007\"\r\n               y=\"-2746.811\" />\r\n            <g\r\n               transform=\"matrix(0.30106207,0,0,0.30106207,5730.6419,-1948.1116)\"\r\n               id=\"g8567-9\">\r\n              <path\r\n                 sodipodi:nodetypes=\"ccccccccccccccccccccc\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 id=\"path7183-8\"\r\n                 d=\"m 1033.986,-2499.9285 0,-9.0914 8.8389,0 18.8141,-97.2272 10.705,0 20.736,97.2272 7.1342,0 0,9.0914 -24.3068,0 0,-9.0914 6.566,0 -2.6161,-14.8997 -24.5318,0 -1.894,14.8997 6.566,0 0,9.0914 z m 43.7721,-34.5977 -10.6574,-52.0501 -9.9871,52.0501 z\"\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n              <path\r\n                 style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n                 d=\"m 1727.3909,-1770.2471 0,9.0914 -8.8389,0 -18.8141,97.2272 -10.705,0 -20.736,-97.2272 -7.1342,0 0,-9.0914 24.3068,0 0,9.0914 -6.566,0 2.6161,14.8997 24.5318,0 1.894,-14.8997 -6.566,0 0,-9.0914 z m -43.7721,34.5977 10.6574,52.0501 9.9871,-52.0501 z\"\r\n                 id=\"path7186-6\"\r\n                 inkscape:connector-curvature=\"0\"\r\n                 sodipodi:nodetypes=\"ccccccccccccccccccccc\" />\r\n            </g>\r\n          </g>\r\n        </g>\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 1083.0771,445.39218 c 0.015,-2.0257 -1.5868,-2.06443 -1.5686,-0.58579 -0.1343,7.42864 -6.4165,11.08642 -10.9806,10.21873 -7.0361,-1.33763 -9.2818,-8.32207 -9.2147,-12.43542 0.2072,-12.69631 12.9878,-22.05842 24.5202,-38.33458 8.4501,14.69076 22.3972,26.22964 23.2229,37.58575 1.0977,15.09805 -18.0089,20.72969 -20.7369,3.13271 -0.176,-1.24304 -1.6397,-1.80111 -1.5261,-0.065 0.4145,4.82259 -0.1749,6.83135 5.2657,18.7194 l -14.2217,0 c 3.1497,-5.55487 5.0254,-12.37457 5.2398,-18.23576 z\"\r\n           id=\"path3192\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccsscsccccc\" />\r\n        <path\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\"\r\n           d=\"m 990.2747,347.95076 c 0.01,-0.87154 -0.8953,-0.46463 -1.0178,-0.1903 -1.1632,1.98559 -2.8648,2.44767 -4.5479,1.73181 -1.6673,-0.70916 -2.6042,-2.28035 -2.4539,-4.52216 0.3102,-3.43783 3.0354,-7.19955 4.355,-9.32622 1.252,-1.92991 2.6279,-4.22218 4.0767,-7.15411 1.69724,3.36322 2.55864,4.32058 4.40514,7.3915 1.626,2.70441 3.8925,5.35298 4.0675,8.62236 0,2.48491 -1.046,4.83184 -3.3994,5.25941 -1.3314,0.2419 -2.5787,-0.44156 -3.5038,-2.03686 -0.2818,-0.40656 -0.84874,-0.19466 -0.83924,0.3619 0.16514,2.09332 0.95534,3.98322 2.82944,6.21164 l -6.88704,0 c 1.4101,-1.57596 2.8487,-3.70367 2.9153,-6.34897 z\"\r\n           id=\"path3308\"\r\n           inkscape:connector-curvature=\"0\"\r\n           sodipodi:nodetypes=\"ccscccscsccccc\" />\r\n        <path\r\n           sodipodi:nodetypes=\"ccscccscsccccc\"\r\n           inkscape:connector-curvature=\"0\"\r\n           id=\"path3330\"\r\n           d=\"m 1178.6546,520.52589 c 0.01,0.87153 -0.8953,0.46462 -1.0178,0.1903 -1.1632,-1.9856 -2.8648,-2.44767 -4.5479,-1.73181 -1.6673,0.70915 -2.6042,2.28034 -2.4539,4.52216 0.3102,3.43784 3.0354,7.19955 4.355,9.32622 1.252,1.92992 2.6279,4.22219 4.0767,7.15412 1.6972,-3.36323 2.5586,-4.32059 4.4051,-7.39151 1.626,-2.7044 3.8925,-5.35298 4.0675,-8.62235 0,-2.48491 -1.046,-4.83185 -3.3994,-5.25941 -1.3314,-0.2419 -2.5787,0.44155 -3.5038,2.03686 -0.2818,0.40655 -0.8487,0.19465 -0.8392,-0.36191 0.1651,-2.09331 0.9553,-3.98322 2.8294,-6.21164 l -6.887,0 c 1.4101,1.57597 2.8487,3.70368 2.9153,6.34897 z\"\r\n           style=\"fill:#000000;fill-opacity:1;display:inline\" />\r\n      </g>\r\n    </g>\r\n  </g>\r\n</svg>\r\n"];
});
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return H.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return new P.Expando(null);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return [];
});
Isolate.$lazy($, "_toStringVisiting", "_toStringVisiting", "get$_toStringVisiting", function() {
  return P.HashSet_HashSet$identity(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return [];
});
Isolate.$lazy($, "autoHiDpi", "Stage_autoHiDpi", "get$Stage_autoHiDpi", function() {
  return $.get$_autoHiDpi();
});
Isolate.$lazy($, "_enterFrameSubscriptions", "_enterFrameSubscriptions", "get$_enterFrameSubscriptions", function() {
  return [];
});
Isolate.$lazy($, "_exitFrameSubscriptions", "_exitFrameSubscriptions", "get$_exitFrameSubscriptions", function() {
  return [];
});
Isolate.$lazy($, "_renderSubscriptions", "_renderSubscriptions", "get$_renderSubscriptions", function() {
  return [];
});
Isolate.$lazy($, "_mouseCursorChangedEvent", "Mouse__mouseCursorChangedEvent", "get$Mouse__mouseCursorChangedEvent", function() {
  return P.StreamController_StreamController(null, null, null, null, false, J.JSString);
});
Isolate.$lazy($, "_onMouseCursorChanged", "Mouse__onMouseCursorChanged", "get$Mouse__onMouseCursorChanged", function() {
  var t1 = $.get$Mouse__mouseCursorChangedEvent();
  t1.toString;
  return H.setRuntimeTypeInfo(new P._ControllerStream(t1), [null]).asBroadcastStream$0();
});
Isolate.$lazy($, "_inputModeChangedEvent", "Multitouch__inputModeChangedEvent", "get$Multitouch__inputModeChangedEvent", function() {
  return P.StreamController_StreamController(null, null, null, null, false, J.JSString);
});
Isolate.$lazy($, "_onInputModeChanged", "Multitouch__onInputModeChanged", "get$Multitouch__onInputModeChanged", function() {
  var t1 = $.get$Multitouch__inputModeChangedEvent();
  t1.toString;
  return H.setRuntimeTypeInfo(new P._ControllerStream(t1), [null]).asBroadcastStream$0();
});
Isolate.$lazy($, "_identityMatrix", "_identityMatrix", "get$_identityMatrix", function() {
  return Z.Matrix$fromIdentity();
});
Isolate.$lazy($, "_dummyCanvas", "_dummyCanvas", "get$_dummyCanvas", function() {
  return W.CanvasElement_CanvasElement(16, 16);
});
Isolate.$lazy($, "_dummyCanvasContext", "_dummyCanvasContext", "get$_dummyCanvasContext", function() {
  return J.get$context2D$x($.get$_dummyCanvas());
});
Isolate.$lazy($, "_backingStorePixelRatio", "_backingStorePixelRatio", "get$_backingStorePixelRatio", function() {
  var t1 = $.get$_dummyCanvasContext();
  if (t1.webkitBackingStorePixelRatio == null)
    t1 = 1;
  else {
    t1 = t1.webkitBackingStorePixelRatio;
    t1.toString;
  }
  return t1;
});
Isolate.$lazy($, "_devicePixelRatio", "_devicePixelRatio", "get$_devicePixelRatio", function() {
  return window.devicePixelRatio == null ? 1 : window.devicePixelRatio;
});
Isolate.$lazy($, "_isMobile", "_isMobile", "get$_isMobile", function() {
  return new Z.closure().call$0();
});
Isolate.$lazy($, "_screenMax", "_screenMax", "get$_screenMax", function() {
  return window.screen == null ? 1024 : P.max(window.screen.width, window.screen.height);
});
Isolate.$lazy($, "_autoHiDpi", "_autoHiDpi", "get$_autoHiDpi", function() {
  var t1 = $.get$_devicePixelRatio();
  if (typeof t1 !== "number")
    return t1.$gt();
  if (t1 > 1)
    t1 = $.get$_isMobile() !== true || $.get$_screenMax() > 480;
  else
    t1 = false;
  return t1;
});
// Native classes

init.functionAliases = {};
;
init.metadata = [{func: "void_", void: true},
{func: "dynamic__String", args: [J.JSString]},
{func: "void__dynamic", void: true, args: [null]},
{func: "void__dynamic__StackTrace", void: true, args: [null], opt: [P.StackTrace]},
,
{func: "bool__dynamic_dynamic", ret: J.JSBool, args: [null, null]},
{func: "int__dynamic", ret: J.JSInt, args: [null]},
{func: "int__Comparable_Comparable", ret: J.JSInt, args: [P.Comparable, P.Comparable]},
{func: "bool__Object_Object", ret: J.JSBool, args: [P.Object, P.Object]},
{func: "int__Object", ret: J.JSInt, args: [P.Object]},
{func: "String__EventTarget", ret: J.JSString, args: [W.EventTarget]},
{func: "num__num", ret: J.JSNumber, args: [J.JSNumber]},
{func: "void__TouchEvent", void: true, args: [Z.TouchEvent]},
{func: "void__MouseEvent", void: true, args: [Z.MouseEvent]},
{func: "args1", args: [null]},
{func: "args2", args: [null, null]},
{func: "args0"},
{func: "dynamic__dynamic_String", args: [null, J.JSString]},
{func: "void__Object__StackTrace", void: true, args: [P.Object], opt: [P.StackTrace]},
{func: "Future_", ret: P.Future},
{func: "dynamic__dynamic__dynamic", args: [null], opt: [null]},
{func: "bool_", ret: J.JSBool},
{func: "dynamic__bool", args: [J.JSBool]},
{func: "dynamic__dynamic_StackTrace", args: [null, P.StackTrace]},
{func: "dynamic__Symbol_dynamic", args: [P.Symbol, null]},
{func: "String__int", ret: J.JSString, args: [J.JSInt]},
{func: "dynamic__String_dynamic", args: [J.JSString, null]},
{func: "dynamic__MouseEvent", args: [W.MouseEvent0]},
{func: "dynamic__WheelEvent", args: [W.WheelEvent]},
{func: "dynamic__TouchEvent", args: [W.TouchEvent0]},
{func: "dynamic__KeyboardEvent", args: [W.KeyboardEvent]},
{func: "dynamic__ContextEvent", args: [P.ContextEvent]},
{func: "dynamic__num", args: [J.JSNumber]},
{func: "dynamic__Event", args: [Z.Event]},
];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
function convertToFastObject(properties) {
  function MyClass() {};
  MyClass.prototype = properties;
  new MyClass();
  return properties;
}
A = convertToFastObject(A);
B = convertToFastObject(B);
C = convertToFastObject(C);
D = convertToFastObject(D);
E = convertToFastObject(E);
F = convertToFastObject(F);
G = convertToFastObject(G);
H = convertToFastObject(H);
J = convertToFastObject(J);
K = convertToFastObject(K);
L = convertToFastObject(L);
M = convertToFastObject(M);
N = convertToFastObject(N);
O = convertToFastObject(O);
P = convertToFastObject(P);
Q = convertToFastObject(Q);
R = convertToFastObject(R);
S = convertToFastObject(S);
T = convertToFastObject(T);
U = convertToFastObject(U);
V = convertToFastObject(V);
W = convertToFastObject(W);
X = convertToFastObject(X);
Y = convertToFastObject(Y);
Z = convertToFastObject(Z);
!function() {
  function intern(s) {
    var o = {};
    o[s] = 1;
    return Object.keys(convertToFastObject(o))[0];
  }
  init.getIsolateTag = function(name) {
    return intern("___dart_" + name + init.isolateTag);
  };
  var tableProperty = "___dart_isolate_tags_";
  var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
  var rootProperty = "_ZxYxX";
  for (var i = 0;; i++) {
    var property = intern(rootProperty + "_" + i + "_");
    if (!(property in usedProperties)) {
      usedProperties[property] = 1;
      init.isolateTag = property;
      break;
    }
  }
}();
init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof dartMainRunner === "function") {
    dartMainRunner((function(a){H.startRootIsolate(R.main$closure(),a)}), []);
  } else {
    (function(a){H.startRootIsolate(R.main$closure(),a)})([]);
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(fieldDescriptor, accessors, cls) {
    var fieldInformation = fieldDescriptor.split("-");
    var field = fieldInformation[0];
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable;
    if (fieldInformation.length > 1)
      reflectable = true;
    else
      reflectable = false;
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        var property = cls + ".prototype.get$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        var property = cls + ".prototype.set$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields) {
    var accessors = [];
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0)
        str += ", ";
      var field = generateAccessor(fields[i], accessors, cls);
      var parameter = "parameter_" + field;
      str += parameter;
      body += "this." + field + " = " + parameter + ";\n";
    }
    str += ") {\n" + body + "}\n";
    str += cls + ".builtin$cls=\"" + name + "\";\n";
    str += "$desc=$collectedClasses." + cls + ";\n";
    str += "if($desc instanceof Array) $desc = $desc[1];\n";
    str += cls + ".prototype = $desc;\n";
    if (typeof defineClass.name != "string") {
      str += cls + ".name=\"" + cls + "\";\n";
    }
    str += accessors.join("");
    return str;
  }
  var inheritFrom = function() {
    function tmp() {
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return function(constructor, superConstructor) {
      tmp.prototype = superConstructor.prototype;
      var object = new tmp();
      var properties = constructor.prototype;
      for (var member in properties)
        if (hasOwnProperty.call(properties, member))
          object[member] = properties[member];
      object.constructor = constructor;
      constructor.prototype = object;
      return object;
    };
  }();
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    if (!init.allClasses)
      init.allClasses = {};
    var allClasses = init.allClasses;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (typeof dart_precompiled == "function") {
      var constructors = dart_precompiled(collectedClasses);
    } else {
      var combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
      var constructorsList = [];
    }
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        if (desc instanceof Array)
          desc = desc[1];
        var classData = desc["^"], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        var s = fields.split(";");
        fields = s[1] == "" ? [] : s[1].split(",");
        supr = s[0];
        split = supr.split(":");
        if (split.length == 2) {
          supr = split[0];
          var functionSignature = split[1];
          if (functionSignature)
            desc.$signature = function(s) {
              return function() {
                return init.metadata[s];
              };
            }(functionSignature);
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          if (mixin instanceof Array)
            mixin = mixin[1];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        if (typeof dart_precompiled != "function") {
          combinedConstructorFunction += defineClass(name, cls, fields);
          constructorsList.push(cls);
        }
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    if (typeof dart_precompiled != "function") {
      combinedConstructorFunction += "return [\n  " + constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", combinedConstructorFunction)(collectedClasses);
      combinedConstructorFunction = null;
    }
    for (var i = 0; i < constructors.length; i++) {
      var constructor = constructors[i];
      var cls = constructor.name;
      var desc = collectedClasses[cls];
      var globalObject = isolateProperties;
      if (desc instanceof Array) {
        globalObject = desc[0] || isolateProperties;
        desc = desc[1];
      }
      allClasses[cls] = constructor;
      globalObject[cls] = constructor;
    }
    constructors = null;
    var finishedClasses = {};
    init.interceptorsByTag = Object.create(null);
    init.leafTags = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = allClasses[cls];
      var superConstructor = allClasses[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = inheritFrom(constructor, superConstructor);
      if (hasOwnProperty.call(prototype, "%")) {
        var nativeSpec = prototype["%"].split(";");
        if (nativeSpec[0]) {
          var tags = nativeSpec[0].split("|");
          for (var i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = true;
          }
        }
        if (nativeSpec[1]) {
          tags = nativeSpec[1].split("|");
          if (nativeSpec[2]) {
            var subclasses = nativeSpec[2].split("|");
            for (var i = 0; i < subclasses.length; i++) {
              var subclass = allClasses[subclasses[i]];
              subclass.$nativeSuperclassTag = tags[0];
            }
          }
          for (i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = false;
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            H.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = function() {
          return this[fieldName];
        };
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    function Isolate() {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var staticName in isolateProperties)
        if (hasOwnProperty.call(isolateProperties, staticName))
          this[staticName] = isolateProperties[staticName];
      function ForceEfficientMap() {
      }
      ForceEfficientMap.prototype = this;
      new ForceEfficientMap();
    }
    Isolate.prototype = oldIsolate.prototype;
    Isolate.prototype.constructor = Isolate;
    Isolate.$isolateProperties = isolateProperties;
    Isolate.$finishClasses = oldIsolate.$finishClasses;
    return Isolate;
  };
}
})()

//# sourceMappingURL=FixerBreaker.dart.js.map
//@ sourceMappingURL=FixerBreaker.dart.js.map
